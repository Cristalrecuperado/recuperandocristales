<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<items>


<!--PELIS-->
<item>
<title>[COLOR gold]D+ STAR [COLOR white]Piratas del Caribe[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/z4BCyXc.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>



<!--PELIS-->

<item>
<title>[COLOR gold]D+ STAR [COLOR white]Las historias negras importan[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHN4c0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RKT1IxVXpUa1JqTVUxNldYcFBSRmsxVGxSTmVrNVVWVFJPZWswd1RXcE5OVTVVUlhwUFJGRXlUWHByTUU1VVVteE5la1V5V21wak5FNTZUVEJPUkZVMFRtcHJNVTE2VFhwT1JGRXhUbFJqTTA1VVFUSlphbEpzVG5wRk1sbHFZelZPUjBreFRYcFZNVTV0U1RKUFZGcHFUbFJOTWxsNldtbE9WR015VFhwUk1rMTZWVEpaZWxsNVRtMU5NbGxxVlROT1IwVXdUbFJqZUU1dFRUSlpWRnByVGxkRk1rNVVZekpPYlZWNlRucFZNMDVFVFhwTmVtTXdUbFJuTWs1RVVYbE5lbEV4VFVSUmVVNVVRVEJhUkdNMVRrUlJNbHBxVlRGTmVrRXpUMVJTYWsxNlZUQk9hbU0wVGpKRmVrMVVXVFJPVkVsNlQxUlZNVTE2YTNsYWFrMHpUa1JOZVZwcVRURk5lbXN5VGxSWk1rMXRTWHBPVkdNMFRYcHJNMDVxVFhwT2FsVjVXV3BLYlUxdFdUSk9SRkpyVG1wWmVrMUVaR2hPVkZGNlRrUktiVTVxU1RKT2Fsa3lUbXBaTTFsVVl6Rk9WR042VFZSWk1rNVVaM3BOYWtwcFRtcE5NazVxV1hsTmVtTXpUbFJLYlUxNll6SlBSRTAxVGtSamVWcHFTbTFPYWswd1RsUlZlVTF0U1RKT1JFMDFUVzFaZVZwcVRUSk5la2w2VDBSTmVrNTZSVE5OVkZWM1RXMVpNazVxVFhwT2Vsa3lUbXBLYlU0eVJUQlBSRkUwVFhwTmVWcHFZM2hPYWtreVdsUlNhRTF0U1RCWmFtTTBUbXBSTWs1cVZUTk9hbGt3VFdwak5VMTZRVEpaYWxFeFRYcEJlazlVWXpGT1IwVXpUV3BhYlU1cVdYcE5WR042VG5wWk1VNTZZM2hPZWsweVdrUlZlVTVxVVRGUFJFMTRUbXBSTTA1cVkzbE5lbFV3VFhwak1VMXRXVE5QUkZFMVRtcFJNMDVFVW0xT2FsVjZUV3BrYUU1cVVUQk9lbU15VGtkVk1rNXFUWGRPZW1NeVRsUk5lazV0V1RCWmVtUm9Ua1JWTWsxcVNtMU9SRmt5V2tSTk0wNUhVWHBPYWxsNVRYcEZlazE2WkdoT2FsRjZUMFJqTlU1NlNYcE5lbU15VGtSSmVrOVVUVEpOZWxVelRucGplVTR5UlRGTlJGcHFUWHBuTWsxNlRUSk9SMVV5V2tSUk1rMTZZek5aVkZVMVRtcFZNazFVV1RGT2FsVjZUMVJSTlUxdFdUSk5lbFV6VG1wRk1VMTZZM2xPYlVWNlRVUlZNazF0V1RKTmVsazBUbXBaTWs1VVRYbE9iVTE2VFhwTmQwNTZUVEZQVkdNeVRtMVZNazE2WXpCT1JHZDZUbnBqTWs1cVdUQk9lazE1VFhwUmVrMUVWVE5PUjBsNlRucE5ORTVVWTNwT2FsSnNUWHBaTVU1cVRYbE9iVVV4VFdwWk1rNTZaek5PYWxsNVRsUm5NbHBxWTNwTmJVa3dXbXBaTlU1Nll6QmFSR041VG5wQk1rNUVZM2xPVkZFeVdtcE5lRTE2WjNwT1JHTXpUbXBKZWsxcVl6Qk9hbWQ2VG5wUk0wNXFaekZOYWxwclRrUm5lazU2V1RST1ZFa3lUWHBaTUU1RVdUSk5WRmt5VGtSUmVrOVVUVEZPVkdNeFRVUlpORTVFWnpGTmVtUm9UbFJSTWsxcVNtMU9iVlV5VGxSVk5FNTZSVEZaVkdNMFRucFZNMDlVV1ROT1Ixa3hUbXBqZDA1cVJUSk5WRkV3VG5wTmVWcHFVbTFPUjFVeVdYcE5lVTVxVVRCT2FscHJUbFJaTTAxNlVtcE5lbEV6VFZSTk1FNUhWWGxhYWsxNlRrZEZNMDlVV1ROT2Vra3hUa1JaZWs1SFRYcE5SR013VG1wWmVrNTZUWHBPYWswd1drUmFhVTVFYXpCUFJFMTRUWHBuTWs1VVZUVk9lbU13VG5wUmVFNVVRVEJhUkUxNFRYcFJNVTVVV1RGT2VrRXlUbnBaTWs1cVNUQk9SRkV4VG1wVk1VOVVUWHBPZWtVd1RtcE5NMDE2VFRKT2VtTXhUa2RWTWs1VVdtaE9SMVV6VFhwU2JFMTZXVEZPZWswMVRrZFpNRTE2VFROT2VsRXlXa1JWTWs1NlZYcE9hbFUxVGtkWk1rNVVZekpPUjBVeFRVUk5NVTU2WnpKT1JGVTFUa1JqTUZsNldUSk5la0V6VDFSU2JFNVVUWHBOVkVwcFRucFZNazE2U20xT1JHc3lXWHBSTWs1NlVUTk5hazB5VGxSamVrMTZZelJPYWxrd1QwUlNhVTE2U1RKT2FsVTBUbFJGZWsxRVZYZE9hbFV5V1ZSTmVVMTZWVEJPUkUxNlRYcFJNbGxxV1RST1ZGVXdXWHBaZVUxNmF6Tk9SRnBxVG5wbk1WbFVXWGxPZWtreFRucFJlRTU2VFROT2FsSnRUVzFKTUZwVVRUTk9lbGw2VFVSWk5VMTZUWHBPZWxVelRrZE5NVTlVVVRKTmVra3dXbXBWTVU1SFRURlBSR00wVG5wbk1WbFVVWGxOYlZreFQwUk5OVTVIVFRKYVJGVXdUbnBCTVU5RVdtcE9iVVV5VGxSWk0wMTZSWGxaYWxrelRtMVZNazVxV1RGT2VtTXlUWHBaZVU1NldUQk9lbFYzVGpKRk1FNUVWWGRPZWtFelRucFpNRTVVYTNsYWFrMHdUbXBGZWs1VVRUUk9WRVY2VG1wWk1rNVVXVEZOYWxrMVRsUm5lazlVWXpKT2FtTjVXbXBTYlU1VVJUSk9hazB5VGtkWk1sbDZXbXBOYlZreVRrUk5NazVIVVRKTmVsRjRUWHBqTVUxVVdtaE5iVmw2VFZSUmVVNUhUWHBOYWxwc1RrUlpNMDFxVFROT2VrMHhUbFJLYlU1NlRUSk9WRlV4VGxSVk0wNTZWWGROZWxreFRWUlJNazVxVFRCT2VtTXhUbFJOTWxsNlRUTk9iVkV6VDBSYWJVNUVaekZQVkUxNVRsUk5lazlFVVRGT1ZHZDZUbFJhYWs1SFJYcFBWRkpyVG1wWmVrMTZVVE5PVkdjd1dXcE5lazE2VlRCYWFsSnNUWHBuZWsxcVVURk9SMVV5V1ZSVk5FNUhXVE5PYW1NMFRXMUpNRTFVV1hsTmVtc3lUMVJaTWs1VVFUTk9SRlY2VGtkVk1sbFVXVFZOZW1zeVdWUlNhRTVVUVRCWmVrMHpUa2ROTWsxNldYbE5lbEV5VFhwak1rNTZZekpOZWxFMFRtcE5NazlFVFhkT2Vsa3lUbFJqZWsxNlJUTlpWRkp0VGtSck0wNVVVbXhPYWtsNlRXcE5lazE2WXpKYVZHTTBUVzFaTWxscVRYZE5lbU14VDFSYWJFNXRWWHBPUkdNMFRucFJlazFFWTNsT2Vtc3dUbXBOZWs1RVZUSlBWRkUwVGxSQk1rNXFVWGhPYWxGNlQxUlJORTV0V1RKYVZGbDRUWHBWTWxsNll6Rk9lazB5VFZSVk5VNVVRVE5PYWxwcFRrZE5lVmxxV20xT1JHTXlUWHBqZDAxdFNUSk9lbEpzVFhwVk1rNVVUVEZPYW1NeFRVUkthVTV0VlRCT2FsSnRUbFJKZVZwcVZYaE9lazB6VDBSVk5FNXFVVEZOUkUxNFRucFZNMDVxVVhoT1JGRjVXV3BrYUU1SFRYcFBSRTB5VFhwRmVrNTZUWGRPYW1Nd1dYcEthVTVVUlRKTmVrMHpUbFJyTTA1RVRUVk9hbGt4VGxSU2FFMTZWVE5PYWswMFRrZFJlazVVVVhoT2JWVXpXVlJqTTA1VVFYcE9WRlV6VGxkRk1VMVVVVEJOZWxrd1RXcGpNazE2VVRCTmFsVXdUbTFKTUZscVdUSk9WRVV4VDBSYWFVNXFhM2xhYWxKc1RucGpNRTlFWTNwTmVsVXlXV3BaTlU0eVJYcE9SRkV6VG5wWk1sbHFVbXhPZWxVeVRYcFJlRTE2WTNwTlJHTTBUbXBOTVU5VVRUQk5lbU13V1ZSS2FVNVVRVE5OVkZVeFRucE5NRTU2VFRGTmVrVXlXV3BSTVU1cVJYcFBWRkUxVGtkVk1VMUVXbXRPUkZGNlQxUlpNazVxWTNwTmFrMDFUbFJuTUU5VVVtMU9hbGt6VFZSa2FFNVVRWHBOVkZFeVRsUkJNMDlFWXpKT1ZFVXdUVlJqTWs1VVFYcE5hbFV5VGtSTk1rNVVWVE5PUkVsNVdtcE5NazVVVFhwTmVrMTZUa2RKTUU5VVZUQk9hbEV3VG1wU2JVNVVZekJPVkUwMFRXMUpNazFxVW1sT2JVMHpUbXBWTlU1RVNURk5SRkpwVFhwVk0xbFVVVFJPYW1jelQwUmpNMDVIVlROUFJGazBUVzFaTUUxVVZUQk5lbGt6VDFSVk5FNVVWVEpQUkUwelRsUkZNbGxxVFRCT1JGRjZUVVJaZVU1cVJUQk9ha3B0VG1wRk0wNTZZekJPZWtrelRsUmpNVTVFVFRKTmFsSm9UbXBWTWs1cVZUVk5iVWt3V2tSTk1rNVVUWGxhYWxFMVRrZFJNMDE2V21oT1IxRXlUa1JOTlU1RVVURk5SRmt6VGtSVk0wNVVWVFJPYW1zeVdXcGFhazF0V1RKTlZGazFUbnByTWsxVVRUVk9hbFY2VDFSU2FFNUVXWHBOYWxwcFRrUlpNRmxVVVRST1ZHc3dXV3BaZWs1dFRYcE9WRlY0VG5wTmVrNXFVWGhOYlZrd1RWUmpOVTV0UlRGTlZGa3dUWHBqTUZscVRUSk9SRkY2VFhwU2FVNXFUVEpOYWsxNlRYcEpNVTFxV21wT2JWVXpUMFJOTTA1NlJURk5WRlpvVG1wVmVrOVVVVEJPVkVFelRWUmplazVFVFhwT1ZFMDBUa2RKTWsxVVkzcE9SRkV3V21wVmVVNUVVVEZPZWxrelRsUkZNMDVVU21sT1JFbDZUbFJTYlU1RVNYbGFhbGt5VGtSRk0wNTZWWGROZW1zelRucFpNazR5UlRCTmFsVTBUbXByTUUxNlVtcE9iVWw2VDBSTmVFMTZhekphYWxFd1RtcFZlazlVV21oT1JGVjZUMFJWTWsxNlJYbGFhbHByVG1wak1VMUVWWHBOYlVreVdtcFpORTE2U1RCWmVsVTBUa2RKZWs1NlVURk9Na1Y2VG1wU2JFNXFVVEJOVkZWNVRYcFZlVmxxVlRCT2FtZDZUMVJWTUUxNmF6QlBSR015VG5wRk1FMVVUVFJOZW1jd1drUktiVTVVVlRCWmFrMHpUbTFKTWs1VVRUQk9SRVV6V1ZSYWFVNUVXWHBQUkdOM1RtcEpNVTlVVlRSTmVtTXlXV3BaTkUxNll6TlBSRkpwVFhwWk1FMVVXWGxOYlVrelRsUlpOVTU2VVRCWmFsbDZUbnBOTTA5RVRYaE9hbWN6VG1wVk0wNVVVVEZQUkZWM1RtMVpNazFxV1RCTmVsRXdXbXBOTlU1dFdURk5SRTB4VFhwWk1VMXFZM2ROZWtrd1QwUmFhazU2VVRCTmVsRXdUVzFKTWxwVVVUSk9SMWt5VFhwUmVVNXFXVEphVkZFeFRsUm5lazFVVFhkT1IwbDZUMVJTYlUxdFdUQk5WRnBxVG0xSk1GbFVXWGxPVkUweFRXcFZORTU2VlRCUFJHTXlUa2ROZWs1NlkzcE9iVVV5VFdwWmVFNUVVVEJaZWxrelRYcFZNMDlFVW1sTmVtY3dUVlJWZDA1NmF6QlpWRTB4VFcxSk1VOUVVVFJPZWxVelRucFJNMDVxVVRCTmVrMHhUa1JWTTAxcVdtcE9hbXN4VDBSWk1FNTZRVEZPUkUweVRucFJNRTE2VVROT1IwMTVXV3BaTlU1VVFYcE9hbEUxVG1wSk1GbHFXVE5PVkdjelRsUlZlVTVVYXpKYVZFMHpUa2ROTVU1RVNtMU9SMGt4VDBSak1FNXFXVE5PUkdNeFRrZE5lazE2VFhkT1JGVXpUbXBTYVU1RVNYbGFhbU0xVGtSVmVWcHFWWGhPYWxVelQwUlNhazVxV1RCUFZFMTZUbTFGZWsxNlRURk9SRkV6VG1wTk5VNVVZek5OYWxFeFRYcFJNazlVWXpKT2VtTXdXWHBOTWs1cVl6Sk9hazE2VG1wamVWcHFUVFJPUkUweVdWUlNiRTVxVlRGWlZGazBUbFJuTWs1cVdUTk9SRWt6VDFSUk5FMTZaek5OZWxrd1RtMUpNRTVVVFROTmVtdDZUbXBaTlU1VVFUQmFhbEV4VFhwbk0wMVVXVEJPYlZrd1RtcE5lRTE2VVRCT1ZFMDFUWHBaZWsxcVdtdE5lbWN3V2tSVmQwNXFSVEpPYWswMVRsUkZNRTFVU20xT2VrRXdXbFJqTlU1RVRURk5SR04zVG1wWk1rOUVVVEpOYlVreVRucGFhMDU2VFRGT2FrMDFUa2RKTWxwVVdtbE9WRTE1V21wTmQwNUVSWGxhYWxVd1RtMUZlazFxVW1wT1JHTXlUbnBSTUU1VVRUSmFSRmw2VGtSamVWbHFXVEpPTWtWNlRsUlNhRTU2YXpGT1ZGSnBUWHByTWsxVVVUSk5lbU15VFhwU2FrNVVRVEZOVkZWNVRYcFpNVTU2VFhsT1JFMHlUbXBOTkU1SFVUSk9WRnBvVGtSak1GcFVTbWxPYW1NeFRXcE5OVTVxU1ROTlZGRTBUbTFGTUU1RVpHaE5lbGt6VFZSWmVFMTZUWHBPUkdNMFRsUk5lazE2VFRWT2JVa3pUVlJaTWs1SFJUQmFWRTB6VGtSak0xbFVVbWhPYWxWNlRWUlNiVTE2WXpCTlZGcHBUbnByTUU1RVVYcE9hbU15VG1wTk5FNVVVWGxaYW1NelRsUkplVmxxV1RST1JFa3lUMVJaZVU1dFNYcFBSRkpwVFcxWk1VMVVXVEpOZWxGNlQwUlZNRTVVWnpKTmFsazFUbTFWTWxsVVdUQk9WRUY2VFhwak1FNHlSWHBOUkZVd1RtcFpNbGxVWTNsT1ZFa3pUVVJOTUU1VVJUSk9hbFYzVGtSSmVrMVVXbXBPVkZGNVdtcE5NVTVxV1hwTlJFMTZUbnBuZWs1NlRYZE9Na1V6VDBSak1rMTZTVE5aVkdSb1RqSkZNRTU2VVRCT2FsVXlXbXBSZVUxdFdUQk5hazE0VG0xTk0wOVVVVFJPVkZrd1dXcE5lVTVFWnpCYVJFMHlUVzFKTVUxRVZUTk9lbEV6V1ZSUk5VNVVRVEpPYWxFeVRrZE5lazlFV21oTmJWa3pUVVJaZVUxNldURk5WR015VFhwak1rMVVUVFZPUkZsNlQxUlJNRTVVUVRCYVJGcHFUbXBuTUUxcVNtbE9SRTB3V1hwS2FVNUVTVE5PYWxFelRtMUZNVmxVWkdoTmVtTjZUVVJSTkUxdFNUQlpWRkUwVGtSRk1rMVVUVFZPZWtFeVdsUk5NRTU2WXpGUFJGcHBUa1JqZWsxNll6Vk9Na1V4VDBSak1FMTZUVEZQVkZVMVRtcFpNMDlFWXpWTmJWa3pUVVJaTlU1VVNUSmFWRTE2VGtkSk1FOUVTbTFPUjBrelRWUk5NazVxVFhsYWFsVTBUbnBSTUZsVVZYZE9hbU14VFhwTk5FNUhUVE5QVkdONVRYcG5lazVFVlROT1ZHc3dXa1JLYVU1dFZUTk5WRmt6VFhwTmVrOUVVVEZOYlVrd1QxUlZlVTVxVFRGT2FrMTVUbXByTUU1RVdtdE9WRVV3VG5wWk1rNTZZM3BQVkZreFRrUlZlazE2V1hoT1JGa3lUbFJSTlU1SFNUTlpWRTAwVGtkWmVrNUVXVE5OZWsweVdrUlpNVTVFVVROWlZFcHBUa1JSZVZscVVYaE9SMDE2VGxSVmVFNVVRWHBPYWxWNFRsUkZlazFFVFRKTmJVa3lUa1JOTlU1cVl6RlBSRTB4VFhwUk1FMTZXVEJPZW1Nd1RsUkthVTVVYXpKWmVsRTBUbXBGZWs1cVVUUk9hbFV3V1ZSWk0wNVVSVEJaZW1NeFRtMVZNMDVxVVROT1Iwa3dXbXBaZVU1NmF6RlBSRkp0VG0xSk1FOVVTbTFPUkZreVRucFZORTE2VVRCTlZGa3hUbXBqTUU1cVRURk9hbXN5VGtSak0wNVhSVEZPYWswMFRtcGpNVTFFVFRKT1IwMTZUWHBqTTA1cVkzcE5lbU4zVGxSQk1rNXFUVEJPYlVWNlRrUlZNazVFVlRCTmFtTXlUa1JOTTA1cVkzbE9WRkV3V2xSWk1VMTZUVEpPVkZFelRucFpNMDU2U20xT01rVjVXbXBqTVU1VVVUSk5lbFY1VFcxWk1scFVVVFZPVkZGNlRYcFZNVTVFVlRKT1ZHTjRUbFJOTWxsVVVtcE9SMWt6VFVSUk1rMTZhek5PUkVwcFRsUkJNazVVVVRWT01rVXlUbFJSTUU1VWF6Rk9lbFYzVGxSck1rNUVVbXRPUkdNd1RucGplazR5UlhwT1JGVjRUbnBSTTA1RVVYaE9WR2Q2VGtSUk5VNXFVVEphYWxwcFRYcEZNRnBxVFRWT1JGa3lUbXBqTkU1cWF6Sk5hazB3VG1wak1FMTZWVEpPZWxFeVdsUlZORTU2U1RGTmFsbDZUakpGZVZwcVdYaE9SRkV6VFhwWk1FNTZTWHBOYWxrMVRucFplazVVVVRCT1ZFRXlXbFJSZWsxNll6Tk5lbEV4VFhwTk0wOUVXbXBPVkdjeVRWUlJNRTVVWnpKWlZGbDZUWHBCTUU5VVNtbE9SRTB6V1ZSYWFVMTZZM3BOUkZKclRYcG5NVTVxVFRCT2Ftc3hXVlJWTVU1NlNYcE9hbGt6VGtSbk1FNTZWWGhPZW1ONlQwUlJlazV0VlROTlJHTXlUVzFKTUZwRVkzaE9hbFY2VDFSWk0wNVVSWHBPZW1NeFRucHJlVnBxV214T2VtY3pUa1JOTlUxNlozbGFhbGt5VG1wWk0wNUVUWHBPZWtrd1drUktiVTE2VVROT2VtTjVUbXBuTUU1NlRYcE5la1V5V21wak5VMTZZek5OUkZFeFRYcE5NVTFFV214TmVtc3dUMFJqTTA1NlVUSk5lazEzVGtSRmVrOVVUVFZOZW1kNVdXcGpNVTVFWXpGTmFrcHBUa1JqTUZsNlVUTk9ha1V4V1ZSUk1VNHlSWGxhYWxFMFRsUlZNazlFU21sT1ZFVXdUMFJOZUU1RVl6Rk5SRkpwVGtSVk1VOUVXbTFPUkVVeVdsUmpNMDV0UlRKTmVrMHhUa1JSZVZwcVRYcE9SMGt5V2tSak1rNHlSVEphYWxFelRrUmplazlFWTNkT1IwVjZUbFJqTTA1VVNYcE9WRTB3VG0xWmVrNTZUVFJPVkdkNlRXcFJNazF0U1RCWmFsSnNUbXBWZVZwcVVUVk9SRWt3VDBSS2FVMTZaek5PZWxab1RucEplazlFV1RWT2Vsa3dXa1JaTVU1SFdUQmFSRXBwVGtSWk0wOVVWbWhPUkVsNlRucGpNRTVFWXpGTlJGazFUbFJaZWsxRVRYZE9WRmt5VGxSYWJFNXRVVEJPVkUwMVRYcHJNRTVVVlRST2VrMTZUVVJqZWs1RVp6Sk9hbHByVGxSWk1rMXFWWGxPVkVGNVdXcGFhRTE2WnpCT2FtTXhUbnBWTUZsNll6Uk9iVmt3VG1wS2FVNVVWVEJPYWsxNVRsUkpNVTVFVW10T1JHTjZUMVJaTTAxNll6Tk5hbEpzVG0xUk1rNXFVbXRPUjBsNlRtcFZNMDVVVlRKYVZFMDFUbTFOTWxwVVl6Vk9SMVY1V21wamVVNXRUVEphVkZVMFRrUlZNRTFVV1RGT1ZFa3hUbXBOTWs1RVNUTlBSRmsxVFhwTk0xbFVVbWhPZWxVeVdtcE5lRTVxV1hwTmVtTXlUbnBuZWs1VVRURk9hbXN6VG1wVmVVNUhTWHBPYWxFd1RXMVpNVTVVVVhsTmJVa3pUWHBTYVU1cVZUQk9hazAwVGtSck1VNTZZelZPYlVsNVdtcGpOVTVFVFRKT1ZGVjRUa2ROZWs1VVVYaE9WR2Q2VDBSUmVFNXFXVE5QVkZWM1RYcEplazlVWXpSTmVrRjVXbXBaZUU1VVNUTk9hbU16VGtkRmVrNUVXVFJPVkZFeVdsUlpNVTVxWnpKUFJGVjRUbFJSTTA1RVVUUk9SR2N5V1dwUk1FMTZZekZPUkZGNFRXMUpNMDU2VlRCTmVtY3lXVlJXYUU1VWF6TlpWR00wVG1wRmVrMUVUWGROZWxreVQwUktiVTE2V1RCTlZGVjNUbXBSTWs5VVVUQk5lbFV5V2xSS2FVNVVTVEJPVkZWNFRtcG5NazVxWXpCT1ZHc3hUWHBWTUUxNlp6SlphbHBzVG1wUk1rMXFUVEpPYW1zeVdsUlNiVTVVVVhwT2VrMDBUbTFWZVZscVZYbE5lbU42VFZSYWEwNVVaek5OUkZwb1RXMVpNVmxVVVRWT1JHZDVXbXBaZUU1WFJUSlBSRnBzVGtkWk1rNTZWbWhPYW10NVdXcGFhRTU2V1RKT1ZGRXlUWHBqTWsxVVdYaE9WRkV6VDFSVk0wNUhXVEJhYWxFd1RrUkpNVTlFWXpGT2Ftc3dUMFJSTTA1SFVYcFBWRTB5VGtSUk1rMXFUVEZPUkVreVRXcE5kMDU2U1RCWlZGRXlUWHBCTWs1VVZYaE9WRUY1V21wTmVVNTZSVEJOVkUxNlRucFZNMDlVWXpST1ZFMTZUMFJSTTA0eVJURk5SRkpzVG5wcmVrMXFXbXhPYlVrelRtcFdhRTE2VVRGWlZFcHBUa1JqTTAxNldtbE9iVlV5V2tSVmVVNUhVVEpQUkZFMFRtMUZNRnBVV1RKT1ZFMHpUMVJWTkU1NlZURk9lbEp0VGxSRk1VOUVUVEZPZWtrelRrUlplVTV0VlROT1JGa3hUbTFGZWsxNlZUSk9SR015VG1wUk1FNTZSWHBPUkZab1RtcFpNRTlVVlhoT2JVMTVXbXBhYVU1dFJUTlBWRkpzVGxSQk0wOUVVWHBPZWxrelQxUlJNRTVFWnpOTmVsVjVUbTFWTTAxNlVUSk9hbGt3V1dwYWJFNUVaekZPVkZKb1RucFZlazlFVVRGT2Vsa3lUMVJOTlUxNlp6SlphbGw1VFhwSk0wMXFVbTFPYWswd1RucFZORTE2V1hsYWFtTjNUa1JSZWsxNlVYbE9hbGw2VG1wWmVVNXFUVEpaZWtwdFRrZEZNRTVxV214T2VrMHdUMVJOTUU1VVl6Sk9hbHB0VG1wck1rNUVUVFJPYWtVeldWUlNhRTVxVlRGT1ZGRjZUbnBaTTA5VVVteE9lbWN3V2xSWk1FNVVZekJPUkZVMFRXMVpNRmxVVVRWT1JGRjVXV3BhYTA1dFVUTlpWRlV5VGtkTmVrMTZXWGhPUjBsNVdtcFZlRTVYUlRKT2FsRXhUa2ROTWs5RVdtaE9la2t3VG1wS2FVNUVVWHBOZWxwclRucFZNVTFxV1RGT2Ftc3hUVVJqTTA1cVdUTk5WRkV6VG5wWk1sbFVVbXBPZWxVd1RucFdhRTVFWXpKT2VrcHRUVzFKTWs5VVdUSk5la0V4VG1wWmVrNUhTVEJPVkZGNVRrUm5NMDE2VW1oT1ZHY3hUMVJWZVU1VVFYcFBWRmsxVG1wRk1FMXFXVEZPZW1zd1dYcE5lazVVUVRKT2VsRTBUa1JuTTA5VVVUTk5lazB4VFVSamVVMTZSVEpaYWxFeVRucFpNVTFxWXpKT01rVXdXbFJTYlU1VVRURk5hazB6VGtSTk1VOUVVWGxPZWxGNlRtcGpNMDE2VFRKT2VsRjZUbFJqZWsxVVdtdE9SMGw2VFhwTmVVNUVhekJhYWxGNVRucG5lazVxVVhoT1ZHY3pUWHBTYlU0eVJUQmFSRnByVFhwVmVrNUVWWGRPUkVVeVRtcE5OVTVIVFRCYWFsVXhUbnBGTWsxNldUUk5lbGt3V1ZSS2JVNTZhM2xhYWxGNFRsUlplazlVV1RWT2VtTXpUMFJSTWs1VVp6Sk5lbEpvVG5wck1FMVVUWHBPZW1jeVRucFZORTV0VVROT2VrMDFUa1JKZVZwcVRYbE9hbXN4VFVSTk5VNUVXVEZOUkZrMFRtcEZlazFFVW1wTmVsa3lXbXBSTUU0eVJUQlBSR1JvVFcxSk1FOVVUVEZPZW1jeVdYcFpNVTU2VVRCWmFsRTBUbTFKTTA5RVdUSk5la2w2VFVSak1FMXRTVE5QVkZreVRtMUZNVTFVVVRCT1ZFRjZUbXBTYUUxNmF6Tk5lbEV3VFhwbk1GcEVVWGxOZWxVd1dYcFZkMDVIUlRCTmVrMHdUbnBuTVU1RVdUUk9SMGt5VG1wTmQwNVVZM2xhYW1NMFRqSkZkTE1iQUFBeVRIZHdORnB0Y0RCYVIwaHFXbTFXTTB4SGNHeEJiWEF3UVcxeGRVRXlVak5CYlVocVdtMUlNRTFSU0ROYWJYUnRXbTFGZFVGS1VtMUJVVWd5UVcxRU1GcEhSWHBhYlV3d1FYZFhkbHB0VmpKTWJVUXdRVzFNYlVKSFdqQkJiWFF3V20xYWJVRkhTRE5NUjFwc1FYZGFNMXB0V2pKQlIxSXpRWGRFYTBGdFRtMUNVVVF6V25wV2JVRlJTR3hCZDBnd1RWRkVNRnA2VmpKTlIwUTBXbnBXTUUxM1dqVkJkM1F4V2xGYU1GcHRWakZNUjNCcVFXMTRiVnBSY0RWQlVWcHNUSGRGZFZwdFZtMUJiVVJ0UVhkTU1FSkhUREpCZDFveVFsRk1NbHB0VmpKTWQzQXlRVzFNTUUxM1YzcEJkM0F5VEcxWGVrRjNTREJDUjAxNVFYcElNVXhIUkRSYWJWWXlRWGRFTVVGM1NHMUJVWEF6V20xNE0wSlJSREZCVVhReVRIZGFNbHB0VERCYWQwMTVRWGQwTWsxSFJYZEJVVkl4UVZGTmVVRlJWakpCVVhBMVFYcGFNVUZSY0ROQlZGWnRRbEZJYkVGUlRESk5SMDE2V20xYWJFMTNjREpCZDNSc1RYZHdOVUZIVGpKQlIwMTJRVkZNYlVGdFdqUkJla3d5UVhkYU1VRlJWakpCZDBWMVFXMU1NMEpIVFhaQmVrZ3lUSGRJYlZwdFdtMUJkMHh0UVcxME1FRlJXalJCYlhneVRFZE1NMEY2VWpKQlVVaHFRWGRJTUUxUmNEVmFiVVF6UWtkSU1FRjZVakJCUjNBeVFVZHdNRnB0VERKQmVsSXlRa2ROZVZwdFdqSk1SMFF3UVZGd01WcEhSWHBhYlV3d1FXMU1iVUZ0VmpCTlVVMTNRWGRNYlZwM1JHeEJkMGd6UWxGTmVVRjNjREpNZDFkNlFXMU9NVUpSV2pGQlVYQXlRVWR3TkVGM1RHMUJVVXcwUVZGME0weEhTRE5CZDNneFdsRmFNVUZVVmpGQ1VVMTRRVWQwTUUxUlNEUmFiWGd3UWtkRmRrRktVakpCVVVSc1FVZFdiVnBSU0d4YWVsWXpRa2RFTTBGVVJEQk5SMW96V20xT2JWcHRSWGhCUjFwdFdsRk5kMEZSZEROYWJVUTBRWGRTTUVGdFYzWkJiWFJ0V20xSWFrRnRTREpCZDNCclducFdiVUpIV2pKQk1sSXdUWGRNTTBGdGRHeE5kMFY1UVhkMGJFMTNURE5CTWxJeVRVZEVhMEYzVEcxQmQwMTFRVlJhTTBKSFJHMUJkMW95V20xRmVVRjZVak5CZDB3elFVZFdiRTEzU0d4QmQweHRXbEZJYTBGdFNHMWFVVVF3UVhkYU1VSkhXakZCYlhneVRIZGFiVUYzY0RGYWQxb3lXbTFPTUVGdFJYbGFiWFF3UVhkYWJWcDZWakZNUjBRMFFXMUlNa0pIUkRSQlIzQnRRbEZOZUZwdFdqQk1SMFJ0V25wTU1VSlJUWHBCVVZKdFdtMWFiRUZSVmpCQlVWcHRRVkZFYkV4M2NEQmFla3h0V2xGSU5WcDZURzFCYlVSclFWRldiRTEzUkRGQk1sSnRXa2RFYTBGSFRqRkNSMFY0V25wTU1VRlJjRFZhYlVneFFrZEZlVUZ0ZERCYVIzQnNRVzFXTWtGSFJYaEJSMVp0UWtkTWJVRlVSRE5hYlZvd1FWUkViRXgzVFhaQlNsSnRRWGRFTkVGVVJESk5VVnB0UVZSU01FeEhWM3BCZDNReFdsRkViVUZVU0cxQlIwUTBXbnBXTUUxM2NEQmFiWFF3VEhkSWFscHRXbTFCYlV3eFFWRjBNa0ZIU1hWQmJYUXlURWRNTWtGSFZqTmFSMFExUVVkME1reHRSREJCUjA0elFVZEVNMXB0U0RCTWJYQXlXbTFPTVVGM1YzcEJSMVl5VFVkTU0wRlVXak5DUjBRMFFVZE9NVUpIVFhwYWJYaHRRVzFFTTBGSGVESkJSMGd3UVVkV00weEhWM3BCYlhRd1FsRk5kVnB0VGpCTmQwUXdRVWRPTTBGUlNHcEJkM1J0V2tkWGRrRjZVak5hYlUxMVdtMTRNMEpSVFhoQlZFd3hRa2RhTlZwdFNEQkJVWEF5V20xME1FeHRXak5CYlhnd1FXMUVORUZIVWpKTWJWcHJRVlJhYkUxM1YzWkJkMHd6UVZGd01rRjZTRzFCYlV3eVFYcFNiVUZIVERKQmVsSXhURWR3YlVGSFNEQkJVVXd6UVcxU01FMUhURE5hYlhBeFRFZGFiRUZIY0RCTWJWcHRXbTEwYlZwM1NEUkJkMUl5UWtkd2FrRlJkREJOUjBnMFdtMU1NazFIVjNaQmJVNHlRVkZJYlVGdGRERk1SMGd6UVhkRU1reHRTWFZCZWtReVRFZE1NMEZ0U0ROYVIwUXhXbTE0YkV4M1REQmFiVWd3UVVkYU1WcHRTREZCUjFvd1FWUlNNVUYzU1hWQlVYQXhRVzFGZDFwdGRETmFVVm94UVZSTU1VRjNXbXRCUjB3eVRFZGFhMEZSZURKQlVWb3pRWHBTTWtGSFdqTmFiWFF6V2tkRmRWcDZUREJDVVV4dFFVZE1NbHB0V2pCQlZGWXpURWRhTlZwdFNERkNSMFY1UVVkME1FMVJXbTFCVVZwdFFXMXdORUZIUkcxYVIzQnNXbnBNTVVKSFJYWkJiVm93V2tkd2ExcDZUREpCVVhGMVFWRmFNa0YzUkd0QmJVd3lRWGRhTkVGSGRHMUJVVmQyUVcxME0xcFJXak5CZWxvd1RFZEVNRUZSVmpKQmQxZDJRVkY0TWxwM1dtdEJVWGd5V2tkRmVrRjNjREJNZDNCc1FWUklNazFSVEd4QmJWSXpRVkZ3TlVGS1VqSkJSMFF4UVhkRWJWcEhjWFZCYlZveVduZHdiRUYzZEROQlVVZzBRVlJhTTBGM1NYVmFiVll4UVhkTWJFRlJSREJhUjNBeFFXMVNNVXhIU0RKQlZGWXlXbTFNTWxwdGNETmFkMGd6UVcxV00wRnRSRE5hYlVRd1RVZEZla0V5VWpKQmJVMTVRWHBFTVV4SGNEUkJSM0F3UWxGYWJFRlJSRzFDVVV4c1FXMVNNMEpIUkd4YWJVNXRRbEZNTVVGdFNESk5kMGhxUVcxYU1FMUhUR3RCZWtneVRYZHdNRnB0ZURCQ1VVVjJRVzEwTWt4SGNHdGFiWFF5V2tkeGRVRkhUREJNUjNBMVdtMUlNMXB0VERSYWVsWXlRWGRNTTFwdGRETkNSMHhyUVhwYU0wSlJXak5CVVhBelFWRkZkVUZLVWpOYVVWb3hRWHBNYlVGSFJYWkJSM1F6UWtkeGRVRkhVakZCZDBocldtMXdNMXAzU0d0QlVYUnNUWGRGZGtGNlVqRmFVVWhzUVhkV00xcEhjREZCUjFKdFFYZE5la0ZSZURKQlVVMTVRVlJXTUUxM1RERkJlbFl5UWtkWGVrRkhXbTFhZDB4dFFXMVdiVUZ0UkROQlVYQnRRVkZFTVVGdFNEQkJiVnB0UVVkYU1VRlJSWFZhYlVneVFXMU1Na0ZSVERKTWJVMTFRVWRPTTB4SFNERkJiVlpzVFhkSWJWcHRkREZCZDB4dFFWRmFiVUZ0U0RCQlVVd3lUVWR4ZFVGM2VERkNVVVExUVVwU2JWcFJTRE5CYlhReldsRlhka0Z0Y0RCYWQzQXhRVXBTTTBGUlRERkJiVXd3VEVkYU1VRlJkREpOVVVSc1FYZE1NRTEzVERGWGFqQlljVlZYWTI5NmVUQnlSazQ1VmxCd1pYSjVjRzFDU0RWWlFXRjFSRUpWZVZsd01tTlNXVEpqZFc1UmVXMU1TRFYxUmpORldXNWhZMGhLVlVFeVNETmpZVzlSUVdWSVIwOWFRV3huTm5KSVowaE5WRk5uVFdGalpFUXlVakp5U0hGWVNXdzVWMEV5VjJsS1NYRkViakJNWlhKVmNXeHdSMW94UVZOSmJVRlRTV1pGVWpScFIxTjBaVWQzY1ROeWQwVm5iMVZQWkc5dFNHVkhkMEUxY1VoblVFcDNkVkJ2VTA5dGIxSkJiazEzY1Vad2QwbGFSWHBuVVVoVldtdHVlRFZ1V1cxMVNGa3lhME5aTUhGUWNVdFNNMFZUWTNWSWJWZFhibEpqVFVSNll6UkNWRWxSY0V0TlZrWmhWekJKUjAxWlNYcFdNVzR6Y1hWSlJtZEpSREZQUjFveVUweHdVM0ZrUjFWYU1raEtjRE54WVVGRmNWRmFNa3BWVTJwTlVtdHNSVlJuWkhFd1FWaEhkamxqVEhsVFVYRlRSVmxCU2psbVNGRnhSbTVTT1ZsRVlVVlpSRE5KUlVwVU9URkpVbmd5VEhoU2JFUjRlVnB1UjA5SVdHMUphWEZWVjJSRVIzbE1Sek5YYWtoR09YZHZkM1ZFU25sVFkxcEhjVUpKUmpsUVNETk9hMGg2ZFRWdVZGWTFRVEZYWWtKR1owbEZNVTF0V2t0ME0weDVjREpGU0ZNeFdUSnJNVzR5TVROSWVVbElSMkZYTUV4R1p6VkpiR2RTU0VkWFpIRXdZMkZ5U0RGMVNWTkphMEZoVFdkQk0zZ3hSeko1UlVRemRVaEtTbWN3UkROQmFrcFVOV3BDU1VWWGNVaGpUMGg1U0RKeWVuaHFTVEp3TUVjeU9ERkhlakJzU0hkQlEweEtNVkZGWVVScFFsTlBTRWg1U1Vwd01IVnBjR0ZGU0VFeFR6Sk5TRWxTV2xKQmEwa3pjRFZ4ZDFkR2NIZDFka3d5TVVwRlIzVXdSek5UZG5CdFdtcElVa0ZRUjNoNGJHNTZUR3hITURsUVdESkZaRWxHWnpCeE1WSnNjbEpuU2tadFJYZE5iVWxFUWxWRlJXOVNTVkpHVTNsUlRIbEphM0J0U1VOd00yTkhjbmxNYVVGVFQyTnlTVk5KVERGSlNFWjNWelZITVhCbGNWRlNhVWQ1VTFGd1MwRlBiMU54YkVaVlQySkZTMU5JUmpGeGRtOVRValJDVlhneFJ6QmFha2t5TlRKSGQwbFNSakk1UWt4SGRVTnhiRGw1UkhZNU5GcFJWMDlLWVVWRldETkZTVUZJTldSWk1IVlhiM3BqUzFnelJXMUJTVTFJUWtwSlJscExTV053U2psNVJUQm1NMDB3Vm1WTmQxZFpSVEpxTlVReFFXMUliVk5QV20xUFVrVlRlV05NU0RreGIwbzVRVWRRT1hwWmJVMWlUVkYxVWxrd2NHeHdkMU5RV25kT2JIRkhRVFZ2U0ZJeVIxRjVZMGRTYWpKWmJEbEViekl3YlZwU1JYVkdTalJ0UlhsTmEzSjZVMnR4Um1kalNVbEJSRTFSZURGRWVsZDZSVWhOVjNGdFQweHVVR2RTUjFWVFFVRjRlVk52TTNWWlJFcEJlbkY0VFVwTmJYbHBSbnBOWjB4SFJWbE1TazFOUWtsU01FRkpkVk5GZURGTFJUSlhSbHB0UkRKeGVqVjFSWGRXWlhKaGVXMXZNRUZNVFZSVFJVVjRNVkpNU2pWMVJtMU5lSEI0UVdKR1UzUnNSV3c1UTBwU01XZEZlR0l5Um0xeGFVUjJaMlp4ZVdJMVJqQldha1V6Y1hkeE1YQmxXVE5YZVVsSmRHMWFTazAyY0hoV2JGZ3lVMVJHZWxadFJrZEJiVVV3T1VoR1VYa3lUVEY1U1c1aGRHbEdTWEZyUkROSVpVUktSV2hZYlhsbVFVcFNiVVV5U1VsQmVuRTBSbEE1TVUwelFUQnVZWEZKYjJGMVpFeEhSVVZHZUdvMVJsQm5hSEJIV2pCQ1NrUnJXVzFXYTNCSmNHbEZTWGxHU1ZGeGVrcFVaak5CZVhRMFRHdzVURUpMVDNkQlNuVlJja2hJYkc4d2VXRkhTazFqY2xGVFZVeEhlV0pJZWpWQmNIZE9iVWxJVm10YWVVVjNRa2xQWWt4SFUxbE5TbmhxUWtwVFVFMVVNVmhaTWxOSWNYcDBaVzlJWW10SGRqaGxSR0Z4ZFVGNVJYbHdTbVp0U0ZOQlQxb3hWMVp5ZUhWUlFXRjViVzlLU1Zkd1lYbFhRVlJyU1ZnemNVOUlWRkkxUnpCQmVVZEdaMWh5UzJNMldETlRhVTFSZERGYVMxTkxUVXBGZGtsM1REUkdNRWxMU1ZSME0yNVVSVTFHTVdOdVRHRmpVbGd3WjFwd1IzRlJRa2xKYTNCSVkxWllNamxqU1VkNWQyOVVTWGxHTTBWcmNuaDFNMHhMY1d4S1NYaGxSREJCZVhCSlYzVk1TblJzU2xGQlJVeHNPV3RLU0dONWNIcDVZVTE2VTBSR01ERk5RVEJGV0c5dGNWUkZTMWRwV2t0Qk1IQjZkV0ZCTUVoc1duZFRXSEpIZFVOSWVIbFhTRXA1ZUc1VlQzVktSMEZFUVhkUGRrcDNSWFp5UjFkWlFYZDVNa0pTWjFSYWVuRlhSVlZOUVc1U1UxZEhSM0F6U1RCSllrUjZXbXh5VTJOamJ6RkJXVUZWZVUxS2QwOXBRWGxTWlVkVlFYVkJNSFY2V2pKV05FaFNSRFJFTUd0WmNFcDVkMWd6UVVWd1lVbDNXbmhxTlZrelUyMUpNMFF3Y0hvMGExb3lhbTFCVWsxamNVaElhMGN4Y0dWTWRqbG9SbEpuWTAwelRXUkNTRUZyVFhkSlkzQXdlV2xOVldONFNESkpka1pzWjA5TmVrVkpSVXA1VWtkNE9ETk5TamxyY1VwMVNVaEdPVmRhZDAxNmNFcFRlVzlLV2pCR1lYRnFXRE5KUkhKSFFXaEhTMWRYUm5oMVZrbElZMEZ2TVZvemNHRk9ORTE0WTJKSlVWZFpjRWRGWTB4dFJVeEhTMDlSU1ROeFRXNVRlV3hCTVU5b1JqTlBZMDFVTVVKd01VMXFjRXBKTlhBd1oySkJZWEV4UVVwU2JIRmhVMWR3ZDA4eFJFWm1iVTFSVFc1Wk1rVldURE5UTmtGNGNXeHZiVWcwYjBoNVowWXdZbTFLZUhsMVRVcFRWbTV0VFdoS1NqbGlSMHR3YWtrelUwaEJTa3hwV2xOalIwRjZSV1phVWsweVFraEpOVmt6ZVZoTmJYQnFibnBOWmsxS1NWWkJNRTFpVEd3NVQwVlRjR2xFU0RWcFJqQk1ORWxKVm1WSVZEQmxTbUY0YTBaSGRWVk5VMW8wUmxWVGVFRXdNREZGZDNrMlFUTldOSEo2TlVGYU1HZDZSbmRGWjBWMloyeE5WVUZaU0cxNE1scHRTVlpGTWpoc2IyMTRNSEI2UVdoeE0xTjNXa2hpTkhCNWNYZEllVUZaUVhvNE5HOTZOVkZHZW5BelJUSTBiVzR4ZFZkSFNIUXdXakpUZWtGUlZqTkNWVWxxUWxSRlprSkhTREpJYlhGUldqTjVVRTFJVFUxQlZFVnBjbUZ3TlZrd2VVeEViVk5rYjNwTU0xa3dVakZOVlZOTFdrbElhM0JVWWpKRlZHSXlRVEpGYTNGSlNETnhNa2hyUlVwak5rWXlVM1ZZTTBFMFJWSnhObTl0UVd4Qk1FeGxRVzF4VVZwaGRVZHZlWEZ0VERKMU5rVnRTV0ZOUjFkNVJuZEJla2xJT1dOd01qbHNUVk5OZFVaUlFYcGFVbmd4YjJGUFVXOVVjV0pOU25WaFFXRkViSEo0ZVZwTVNERlhja2xJTTBsTGRWRkNTMDlqUlV0alowRjRZMnh5U0dOMVJIcEZaRVV3V2pKQk1qaHNja2RYYkVwNlRXSnZTa2w1UkhkYWFtOUlTV0p2VVZOalFWVlRkMjlLUlcxSVIzVlJTRVpuTkhKVU1XMUVNWFJzY25wck5uRXdRVVZ1ZWpWdFFWTmpiWEYzUVV0dVZHdDJiMVYwTkc1SmRXMUliVk0yUlhweGJHOUhkVXh4TUhGa1FrZFNORzVLT1dGR01FZzBXVE5qZWxwSVp6RkJNakZvY2toeGQwcElaMkpHUjNFMmNFaDFkVmt5U1ZsSVNHZDRibEpUTUVkSFNXZEdiWFEwU1ZSRmRXNXNaMUZ3VUdkalRETlRXazFIUlVOQmJWSnRSREJqYTFwS2EySnZWWFExU1VwRU5WcEljVkJhUjNWaVJFZHhXbTh4VG14QmJYZ3djREZqU1VGNlVteHllWEEwYm1GT2JVeHNaM1Z2U21OWmJtMVhaMGhVVjFGR1NHTlhjbE54ZVVneFYyTnhNalZZY0RGNGEwZEdaekpFTWtRelJHeG1iVnBSU1RGTU1ubHJUVEJUYkVSdFRUSmFkMWQyY0RCV01uQlJVbTFCZDBrMldUQlhla2N4U0cxRlNubHJiM2g1VmtodFUxVkJTalZyUVVoQmFFUmhTVE5NZUZKbGIwbFBZMGd3WjJGRlMwVnNSVXRCZVhGS05VdGFlRVZsY1cxMVZrMXRUVkpCTWpCdFRVZElNMFV6U1V0SVNVaHBjREJGUVVWdFUyRnVTRUZLUlhabldIQXdRWHBHTUVGMlJ6SlRUMjVJWjJSd2VrVnNTWGgwYlVKSFQyTmFSMGt6UWxWQldVMUlNVkJ3VkZvd1FsUjVaVUpVZVdkTlMwd3hXbmhTYkVRelYwRkZZVTh6UkVoalVFVlVjV3RaTVU5VFJHMVRVSEozZVRGd1ZVRkliMUpGUmtWUlJHVkZNVVZXVFZGRlIzQXhUMnhNZW1wcVJFZFBUVmt4VjBOQlNFdzBSREl3YTAwd1oxaE5NMEZyY0ZCblQzSlRlVUZKTUVsdFRFdEVOWEJoZVhsSFNWcHJURWg1VFUwd1oySnZTWGwyY1hkWGVXOUtPV1p4VWtGVmJsRk5ZVVpMU1dweWVubHRjVzF4ZVVWR1pteE5iVXhzUkVkVFZHNUlNV2RhZUdwcmNGVjVWRzk2WTFSQ1ZHZG9UVzExZGsxNFoydHdTalUxUlcxMVNtNTRaM1ZIU2tWalJrdDVlRzlSVTJ0d2VHWXhXRE54TmtVemVXMXhVVk5XUlVwQlFWZ3plR3RZTWprMlNWVk5ZMGg2WTBwTlIwbEhXVEl4TWt3elJEUnZiWFJsYjNwVE0xa3llVzVDUzNWM1JURjFlVzVLUlVWQ1IzRnFSWGhKUTB3eWRUTklWRGxuUmxSNWRrZFJUWFZ3VTFONVIwaE1iRUZMVjNaQk1rMUxjbEYwTVVkNVFYVnZkMDB5Y0hwbk5FbFRTVzFFU2pobFNIaHhhMFV3TUdwdVVWTldXbmRCUlUxNVRXaEVNblZQYmxKNVpsb3pkREZHZDBWbWJraDVTMW95TlVsd1VVRXhjRzFGUjNGNFozZEdlalZuV0cxTlVVVnNaMDl1ZWpBelFVdE5VVTFKU1VKTlNrVm5jbm81WVhCTFYzWmFkM0ExUlhoeFZrZEtPRzFFZDNGUFRVbDFZMEYzVEROTk1tdFJRVkZKUjI5VlRWVkdSM0Y1UkhwQlpFbFJjV3RCU1VnelNsUmphMDB3YTFaTk1tYzJTVlExZVZwU1dqTnVTazEzY1hobmFIRjZlVkphU1hsaFFsUlRXbkI1ZVVsSGJYRjRibEJtYlZvelUweEpiVTkxYm5kSmEwWjZkVWR1UjFkTFRWRk5RVUpTY0RGSE0yTXhXa2d3TWxwTFRtbHhkMFZQVEV0QlVYRjJPVk5GU25SbFRHMUZhMFpSVFVsTlZEVlhiMU5XTlhCNlUxUkJNMEZUUmpKRlZFcFVhMk5KTUhGTlFrdEZNSEpWU0cxdVVubG5ibEk1ZFZsc1ptcEplV05xV21GTU1tOUhlVUZ3TTFOM1NYWm1ORXd4Y1haSWJEbDVRa3RhYTBSNVRYcGFNRnBzUWt0SmVreDNUREpGU1VRMVNrdDBNSEI0Vm1sRk1EbEJXa2huYkUxNGFqUkpVbVl6YjNsWGVVRlZVMWx2ZVVsS1NrcFRkMXBJVnpSeVVYVlBXbFI1YTI0elUwOUpVVXhxUlRCblkwbFVVelpOU2pWa2JtRlBSa3g0Y1U5YVNWTlpiakpJTlc0eFJUUkNTbkZKVFVkeFoxZ3llWGhaTWsxaWNGRkpiVWw1VjBKQk1FVlNjVzFYVDI1VVRYaHdlRmN5UkcxeFZuRjZPV05OZUVGSmNXdzVVRzVJU1VSTU1uUXljWGRYYUZwTFUyZGFWVUZsY2t0WFlXNVZUVU5NZDBGdFNFcElNa1YzVWpSd01sZDRibEpGYlZwSFVqSkZTSEZtUlRKSWJWcExWMHRaTURGcmIzaFRhVXgzU1U5dk0zRklTRWhxWlZvelFVcElTa2xIUjNkV2EwWmhSV0ZNZVVFMWNWUlRkMXBHWjBOeVZYVjFRWGROWlhKVVFWQnZla1ZwY0RJNWFFMHlZM2x1U0hsbFJubGpaMjU1V20xRlMzaHRUSG94VEVwM2RYbEdlRmQ0UWxOeFkwWktRV2hhWVhWR2NIcHdORzR3TUdWTlZWTlViMGd4V0ZodFRtbHhNbE5YUm1GMWJFVkdPVmR2VVVGMWNVcE1NbTlWUVdOR1NrVlhXRzE1ZVVGaFZ6UndWVVF3Y2tvNVJISjVUV3R1VVZvd1JFcFRZVWhJUVdGd01uVk5RVEZJTVhCVU9WWkVla2d4UkcxRlNYSlFPVlJCU0ZkWWNYZDVRWEF5ZVVGdVNWTkRURWd3TUhGUlFUWnZNa2xuV1cxUE5FWjVkREJDU0RCclJFbFhibHB0ZFVGTU1GWTFTRzFUVDI0d2NEUkpVWGd5UlRBeFVHNTZVelphZWt4bFJucG5aMjVLUVZSd2JVUTBibTFKYWxwMlpqSkpTR05zVFVwbWJVbExlWFZITVZJeGNrdGlOVmd4UVVwQlNuZzBjREY0TlVSTGVWRkJNa1Y1Y0hkNWFFZ3pWM2xOU1VGMVNGUm5ZMFo2ZFdGTmJEbDZiekZ4YVVKVlkwMXVTWGhyUlhkVFFYRXpWMk5HWVVGNVdsRlRhMEpTVFV0WWJYbDVUVWhUZWt4SVkyTkhTMEZWY0hsVFZrUjRlRFZ5VWtsaWNUQlRXRzh6V21wSlZGSnNjVWxCZWtKU2VHVmFNM0JsV2tkUFdFRjNTVk5GTW1JMFJqQkZVVzlMUlZseGQwRmpjbFE0YlVGUlFWZEdiVWxtUjFGVGFFZEtOVVp2VTFkUmJrWm1ha3hIVDBkSWVqVjNSbUZOTlZwdGRETkdWSEZyUlVvd2JFRXpRWFZGZG1jelFrdEJXVVp0ZVdsQ1IxZDJjREJKVjFwSVpqSndVVk5xUm5wcmVHOTZNWGR2ZDBWQmIxSnhTa2RJTVZGQlVWTlpjbFJKZDI1U2VVMXhlSEZsVERBMU1VSlNNR1ZCZVVGWFJWVkZRVWt3WjFwdllYbEZUVEJuV0VVeGNEVllNakZ1UkVkeFZuSktVMnhCZUZOWlJYcHJhMGRUZFRSR1MxZGFSMGhKV25GNVNXWk1TRk5tU2toSlkxaHRjWGxGTWxZMGNsUkZaRVZSVXpORVlVRkhXbnBFTlVwNlNVcHVWV0pxVFcxeFVVRjRaMHhNU2xKcGJsVjBOSEZ0ZVZSQk1VVlpTa2xYTkV4TFkyRmFNRmRQUVZWNGFtOVNNR3BhUzBGdWNrZ3hTRVJ0UkcxQlNIbEtURE5UU0VZelRERmFNRFJwVFZOaVpVY3dVbTFJTTFkVVRWUnJUVXhLVWpSRVlXSTBRbEZYVlVwNmEyeEVTRnB0UjJGNE1FRkhXbXRITVhsNlduZHhhVWQ2TlU5Q1ZYVjVjbEY1ZVc5SWNYVk1TVk5KYmpGNVpVcDNjVE5JU1Uwd2IyMTRNRmt5TVVSQ1UwNDBjVXRUUlVReVRXWkhiVVZxV1RCRmQwRjRVMGxJTW5saWIzbEpUVVl3T1ZaYWQzVjRiMGxGV1UweVFUUnZTR3B0V2pOaU1VeExRVFp1TWxOUmNIbEJRVWxUZVZWYU0waHRTRWxKTWtsR2NFRlFlamxzVEVwQlprMUdUamxXVUhBd1drZEZlVnB0Vm0xQ1VVVjNRVzF3YlVKUldqRkJWRXd6UVVkWGRrRnRXakpOVVVWNFdtMTRNbHB0V214QmJVZ3dUVWRhTlVGNldqSk5SMHh0UVhwTWJVRkhTR3BCZDFZd1RWRmFNVUV5VWpCQlIwd3lRWGRFTTBKUldqQmFiVWd5V25kYU1VRXlVakZNUjNCcVFWRldNMEZSV20xQlZFd3pXbEZ3TlZwdFVqQk1kM0F4UVVkRU1FMTNSRFZCVVhReVFYZGFhMEZSVERKQlIxb3dRVWRJTWxwdGNEQkJkMW96UVVkSU1rRkhlREpOUjB4dFFXMU1iVnBIVjNwQmJYUXdRVkZOZVVGM1RESkNSMGcwUVVkU01FRjNXbTFCVVhBeVdtMXdORnA2VEcxQlVVZzBXbTFFTWsxSFdtMUJla2d4UWxGTmRrRnRWakpOZDBneldtMTRNbHB0U0RCQmQwUXlRa2RFTUVGdFdteE5kM0YxUVVkNE0xcDNXalJCUjNSdFdtMU5lVnB0VGpCTWQxcHRRVkY0TWsxUlNEVkJla1J0V25kSWFrRjNUREZhVVZwdFducE1iRTEzV2pOQlIzUXpXbmRNYkZwdFNESkJSMHh0V20xNGJVRjNjRE5CVkhTekd3QUFVVEphVkZVelRYcG5NMDFVWXpWT2JWVXpUbFJOTkU1RWF6RlBSRkV5VG5wTk1VOVVXbXBPZWxreFQwUlJNMDVxYTNwT1JGRjVUbnBqZWsxVVl6Rk9la2t3V2tSUk1VNTZRWHBPYWxVeFRucEZlazFVV1RST1JHTXdXVlJOTVU0eVJUQk9SRTAwVG0xWk1sbFVVVFJPUjFFelRtcFpORTU2UVRCWmFsRTFUVzFKTTA5RVdYbE9SMUV6VG1wak5VNVVWVEphVkZFMFRtMVpNMDFFV1RCT01rVXdUbXBqZWs1dFdUSk9SRkY0VG1wUk1rOVVZelZPZWtrd1RYcFdhRTVVVVRKT2VsSnFUa1JaTVUxRVZUQk9WRTB3V1ZSYWEwNXFVWHBPVkZsNlRucG5NVTVVVVRCTmJVa3hUbnBWZWs1RWF6QlBSRmw0VFhwSk1rOUVWbWhPVkUweVdWUlJlVTVVU1RGUFZGazBUbTFWTUUxNlRUSk9lbU15VFZSVmVrNXRWVE5PZWxVMFRtcE5NRnBFWXpWT1Ixa3pUbFJSTWs1NlFUSlplbHBvVG0xSk1FNVVWVEJPYlZFeVRtcFdhRTV0U1RKUFJGRjVUa1JqTWs1cVRURk9SMGt6VDFSU2FVMTZhekZQVkZWNVRrZFpNRmxVWTNkT2JVMHhUV3BSZWs1dFVUSk5hbGt4VFhwck1scHFUWGxPUkVVeVQxUmpNVTU2YXpKT1JGRTFUbnBKZWs5VVZUTk9WRmw2VGtSVmVrNUVUVEJaVkZFeFRucGpNMWxVVFRKTmVtc3pUMVJTYWs1SFZYcE5SRkV6VFhwUk1VNTZZelZPUkVrelRWUmpNMDVxWnpKWlZHTXdUWHBqTUU5VVNtbE9WRTE2VGxSTk1FNUVUVE5PUkUwelRrUk5NMDE2VFRWT2VtTjZUVlJTYWs1RVRUSlBSR00wVG0xRk1FMXFVVEJOZWxVeVRYcGplazU2U1ROT2VtTXlUbnBOTUUxcVdUSk9SMDB6VDBSTk1FNVVUWHBOZWxGNlRrUkZlVmxxWXpST2JWVXdUbFJOZUU1VWF6Rk9hbFpvVGtSbk0wNVVXbTFPVkVWNlRWUlJlazU2YXpKWlZGRXdUbTFKTUU1cVRUUk9lbEV3V1dwS2FVNXFTVEJOYW1NeFRrUlZNVTVVWXpGT1YwVXlUMFJLYVU1VVdUQk9SRmt6VGxSTk1FNVVVVEpPUjFVelRrUk5NazE2V1hwT1ZGSnRUWHBuTUUxVVRUUk5lbFY2VDFSUmVFNUVXWHBOYWxFMFRrZFZNRTVVU20xT2JVbDZUWHBhYWs1dFZUQmFhbU0wVGtSUk1GcHFXVEJPZWtFeVdWUlJNMDVxV1hwT1ZGa3dUbFJWZWsxcVRUQk9hbU42VFdwVk1rNUVTWHBQUkZKb1RucE5NbGw2VlRGT2Vsa3dXV3BWTTA1NlRUQlphbU13VFhwSk0wNUVXbWhOZWsweVdrUk5OVTVVYXpGTmFsSnFUbXBOTUU1RVRYZE9SMUV3VGtSU2JVNXRSVEJQUkdONlRXMUpNazVVWkdoT1JGRXdUWHBWTVU1Nll6Qk9hbEpvVFhwWk1VMUVXbXBPUkZVd1dsUlZNMDU2V1RCTmFsRXdUa2RaTUZsVVl6Sk9Na1Y1V21wU2EwNXFUVEJOYWxFelRrUkZNMDVVVFRWT1IwMHlXa1JXYUU1VVFUTk9la3B0VGtkSk1GbFVXVE5OZWtrelRucFNhazVIVFhwT1ZGVTBUa1JaTUU5RVdUSk9iVkY2VFdwYWFrMTZSVEJPVkZwdFRYcFJNbGxxVlhkT2VsVXpUWHBqZDA1VVNUTk9lazE1VG0xTk1VMUVXbXRPYlVreFQwUlNhMDVxYXpOUFZGRXpUVzFKTWxwRVpHaE9SRWt4VDBSTk0wNTZTVE5PUkZsNVRYcEJNVTlVVFRKT1Iwa3hUVVJqTVU1RVZUQlphazB4VFhwTk1FNUVVVE5PUkZVeFRYcGFhRTE2VlRCT1JHTXlUWHBaTWxwcVVteE5lbWN6VDFSWmVVNHlSVE5PUkZwclRsUkJNRTE2V1hsT1JHTXlUa1JhYlUxNlRUQk5hbHBxVG1wck1VOUVVbXRPUkUweVRXcFNhazU2VFRCUFZGRTBUbFJCZWs5RVdUVk9SRWt5VFdwUmVVNXFSVE5aVkdNeVRtMUpNazlFVFROT1IwMHpUbXBOZUU0eVJURk9SRnBwVGxSbk1GbHFUVEpPZW1Nd1dWUlJORTVVVlROTlZFMDBUa2RWTVUxVVVUUk9la0V4V1ZSak5VNUVhekJhUkdNd1RXMUplVnBxV1ROT1JGRXhUa1JSZVU1VVl6Sk5WRmt6VG5wRmVrMXFWWHBOZWxVeVdWUmFhRTVFVFROTlZGcHFUa1JKTWxwVVVUUk9WRlV6VFdwV2FFNXRWVE5PVkZVMVRYcE5lazFFVVRCT2Vsa3pUVVJaTkU1RVRURlpWR00wVGtkWk0wNVVVbXBPYlVreVdsUk5NMDVFVFRCYVJHTXdUa1JGTTAxRVZUQk9iVVV6VGtSTmVrMTZXVE5QUkZwcVRsUnJNRTVFWXpOT2Vsa3dXbFJSZUUxNlZUTk9SRkV4VGtSUk1FOVVVbTFPVkVFd1dXcFNhRTE2VlRGT1JGcHJUa1JKTWs1NlZUSk9la1V4VG5wWmVrNVVTVEpPVkZFeFRucEpNVTVxV1RWT1IxbDZUbnBSTTA1RVZUSk9hbEpwVG1wTk0wNVVUVEpOZWswd1RtcE5ORTVIVFROTmFsRXhUbnBuTVU5VVZYaE9SR013VGtSUmVrMTZRVEpQUkVwdFRrZEplazU2VlhoT1JHdDVXbXBqZVU1SFNURk9WRmw2VG5wWk1scEVWVEZOZWxVeVdXcFJORTU2UVRCT1JGa3hUa1JGTTA1cVdUSk9SRWt4VFhwWmVVMTZSVEZPZWxFd1RYcFpNbHBFVlRST1JHZDZUV3BOZVU1NlVYcFBWRmswVGtSUk1scEVZek5PZWxsNlRYcFNhMDU2WXpCWlZHTjVUbXByTUZsVVRUQk9WRVV6VG1wWk5VNVVWWGxhYWxGNlRsUkZNRnBFVlhoT2Fra3lXV3BaTlUxdFdUTlBWRTAwVGtSak1FNVVVWGhPVkZrd1dXcFZNMDVVVlRGT2FscHNUbTFSTVZsVVZYZE9iVkV4VFZSS2JVNUhXVEpOZWxsNFRrZE5NRmxVVVROT2VrVXhUa1JqTUU1cVNUTk5SRlV6VGxSak1VOVVXbWxPVkVGNlRYcFJlVTE2WTNsYWFsRjZUWHBSTTAxcVdYbE5lbEV5VGxSak5VNXRXVE5QVkZKc1RucFJNRTFVWXpOT1JHc3pUV3BOZDA1NlRYcE9lbFpvVG1wbk1sbFVVWHBPVkZVeFRtcFJNVTVVVlRGTlJGWm9Ua2RGZVZwcVdtMU9WRTB3V2xSWk5FNXFTWHBPZWxFMVRsUm5NMDU2VlRST1ZFMHdUMFJOTWs1VVJYcE5lbHBvVGtSVk1FNXFXWGxPZWsweFRrUlNiVTVFVlRKTmVsVXdUbXBuTWxsVVl6Qk9SMGw1V1dwTk1FNUVaekJOVkUwMFRXMVpNRTVVVVhoT2VrVXpUMFJWZDAxNldUQlphbHBxVG1wRk1FNXFZek5PUkZVeVRucGpkMDE2VVRGTlZGbDVUakpGZWsxNlZYaE5lbU13VGxSWmVrNTZWVEpaVkZVelRXMVpNazU2VlRST2JVVXlXV3BqTUUxdFNURlpWRnBxVGtSbk1sbDZWWGRPVkVWNlRWUmpNVTVFVFRCWlZFMTVUbFJuTTA1cVdtMU9hazB6VG5wak1VNXRTVEJaYWxKb1RtMVJlVmxxVFRST1YwVXhUMVJWZWs1NlVURk9SRlV4VG5wUmVrNVVWVEJPZW1Nd1RWUlNhazE2VVRGUFJHTXlUbXByTVU1cVl6Tk9la0V6VFdwVk1FNVVVVEJPZWxFeFRtcFpNazFVVVhwT2VrVXlUbnBqTWsxNlZUQk9SRTE2VGtkTmVWcHFZelZPYlUweVQwUldhRTU2UVRKTlZHTXlUWHByTVU1cVVYaE5iVWt3VG1wWmVVMTZUWHBPYWxKc1RsUnJlVnBxVFRKT1ZGRXpUbXBaTlU1RVkzbGFhbHBwVGtkTk1sbHFVbXRPUkVsNlRucE5kMDVxVVROWlZGazFUbFJCTTA1RVVYcE9ha1V3VDFSWk1rNXFTVEJPUkdONlRucFpNRTFxVlRGT2JWa3hUMVJSTlU1RVNUSlplbEY2VGxSSk0wNXFWWGhOZWsweVdYcFplVTVFWnpKYWFsa3dUWHBKTUUxVVdYcE9SMFV4VDBSUmVFNXFUVEZOZWswelRYcHJNazlFVlhkT2JWRXhUbnBOTVUxNlZUQlplbU13VGxSSk1VMXFUVE5PYWtreVdrUlJNazVxUlRCT1ZGVXdUWHBuTWxsVVRYcE9WRmt5V2tSUmVVNTZhekpaZWxwdFRucFZNMDFFV21oT2VtTXdXV3BaTWsxNlFUTk5lazB4VFhwVk1rMXFXbTFPUkdjeVRrUlZOVTVFV1RKTmVsRTBUbFJaZWsxNldUTk9iVmw1V21wYWJVNHlSVEpPYWxwcVRsUk5NRnBxWXpCT1JHTjVXbXBOZUU1cVp6Sk9lbEY1VGxSak1sbHFZekpPUkZVelQwUk5NMDV0V1RKWlZHUm9Ua2RGTUZsVVRUVk9SMDB3V2xSWmVrNXRSVEpOYWxKcVRucGpNMDVVVW1sT1JHY3dUMVJWZVUxdFNYcE5hbEV4VFhwck1FMTZZekZPUkUweFRVUkthVTVxVlhwTmFsSnRUWHBqZWsxRVVUVk9WR2Q2VGxSVmVFNHlSVEpaYWxFd1RYcFJNVTE2U21sT1JFa3lUbFJaTTA1VVp6QmFha3B0VFhwak1rMVVWWGhPYWxGNlRXcGFhVTVFWnpKUFZFMHpUVzFaTVU5VVdYcE9lbEV5VDBSamVrNUVhM3BPZWxFd1RtcFZNVTVVU21sT1ZFa3dUMFJaTlU0eVJUQmFWRkV3VGtSak0wNTZXWGxPVkdzd1dYcFZlazE2YXpOTlZFMTRUbFJWTTA1RVRUUk9WR016VG1wak5FNUhUVEZOVkUxNlRucG5NMDFVVVhsT1IxVXlUVlJWTUU1SFVUTlpWRlpvVGxSck1FMTZZekJPYlVrelRsUmFhVTE2YXpCT1ZGSnRUWHBCTWsxNldYcE9la1V4VGtSYWFVNUVXVEJPYWxKdFRucFZNRTlVVlhoT2VtTXdXa1JqTWs1VVRUSk9hazAwVGtSck1FNVVTbTFOYlVrd1RWUlpNazVFVFhwT2FsbDVUWHBKTVU1VVl6Rk9SRWw2VFdwUmVVMXRTVEZOVkZWNFRtcHJNVTlVVFhwT2VrMHdXV3BWTTAxNlNYcE9SRkUxVG5wcmVrNUVXVE5PYWxrd1QxUlJNazU2WXpCT1ZGa3lUbnBKTTA5RVRUUk9SRkV3V21wWk1VNUhTWGxaYW1NelRrUlZlazFxVVRGT2FrbDZUV3BhYkUxNlRUTk5SRTEzVGtkRk1GbDZZelJPYlZVeFRXcGpNazVVVlRCYVJFcHRUVzFKTUUxcVdYaE9lbFV4VFhwVk1FNTZUVEpQUkZwc1RrUlZNazFxVlRWT2FtY3lUbXBSZUU1cWEzbFphbEV4VG1wRmVrNUVWWGhOYlVrd1RWUkthVTVxWXpKT1JFMDFUa1JGTTAxVVNtbE5lbWN3V21wS2JVNXRXVEJPYW1NMFRtcGpNRmxVVVhoT1ZGVXdUMVJaTWs1VVVYcE5WRTEzVGtkVk1rMXFWVEJPVkUxNlRsUmpOVTVFVFRKT2FrcHBUa2RSZVZscVVUUk9SMUV6VGxSS2JVNXRWVEJQUkZFelRucGpNazU2VFROTmJVa3pUMVJaTWsxNlp6Qk9lbU0wVGtSRk0wNUVWVEZPUjBVeVRXcFJlazR5UlROT2VsRTFUbXBWTTFsVVVURk9SMUV3VG5wTk1rNUVUVEZOUkdNMVRYcG5NazVxVVRGT2JVMHlUWHBOTkU1cVl6Rk5hbEV5VG1wTk1scHFWbWhPVkVGNlRtcE5lRTVFUlhwUFZFcHBUbFJyTWs5VVl6Rk9lbU13VG5wWk1rNXRUVEpaVkdOM1RrUmplazFVVVhsTmVsRXdUV3BqTkU1NlFURk9SRTB3VGtSVmVWbHFXVEZPZWxreVdXcE5lazE2VFRCT1ZGVTBUbFJyTWxwVVNtbE5la0V5VFhwWmVVNUVhek5PVkZFd1RYcE5NVTVVVW1sT1ZFRXdUV3BhYkUxNmF6QlpWRmt4VFcxWk1rOVVXbXBPUkVrelRucFNhMDF0V1RKUFJGcG9UbFJyTUZsVVl6Uk9hbWQ1V21wamVFNXRVVEpOVkZFeFRYcHJNRTE2VVRKT2VtTXlXVlJOTTA1VVVYcE9SR04zVFhwSmVrNVVVVEpPYW1zeVRucFplRTVVVlRCUFJGbDRUa2RGTTFsVVdteE9la0V4VGtSa2FFNUVXVEpaVkUweFRucGpNRTlFWXpGT2Fra3dUMVJOTlUxNldURk9hbGt5VG1wTk1FNXFVVFJPYlVVeFRrUmpkMDV0VlhwUFJGVXlUWHBKTUU1VVRUTk9ha1V5VGxSVmVFNXRSWHBOVkZFelRtMVJNbGxxWTNsT1ZHc3pUbXBqTVU1RVkzcE9hbEV3VG0xTk1rOUVWWHBOYlZrd1dXcGFhRTE2U1RCT1ZHTjRUWHBuTUU1VVVtcE9hbXN6VFVSUk5VNVVRWHBOUkZFMFRYcEpNazU2VlRST2JWVXhUbFJhYWsxNlp6QlpWRlUxVGpKRk1VMUVVbTFPYWxFeVdrUlNhRTF0V1hwUFZGRjZUbXBOTUUxNlkzaE5lbGw2VDBSUk5FNUVUVEJPVkZsNVRtcGpNVTlVWTNoTmVsVXpUbXBXYUU1SFRYcE9lbEY0VGxSTk1VOVVWVE5OZWtFeVdXcE5OVTVxYXpCT1JGRTBUbXBSTUUxcVl6Rk5la2t4V1ZSV2FFNUVXWHBOYWxreVRtcHJNRTVFVlRST2VtY3hUWHBLYlU1NlVUTlBWRmw1VG0xSmVrNUVUVEJPYW1ONVdXcFZlazU2U1ROT1ZGa3pUbFJGTVUxRVVYaE9SRkV5VG1wUmVVNVVhekJQVkZwb1RrUk5NVmxVU21sT2FsRXpUbXBSZVU1SFJYcE5la3B0VG5wSk1GbFVVbXhPYW1jeVRXcFJNMDU2V1RGTlZFMTZUbXBuTVUxVVNtMU9SMFV4VFVSVk5VNUhSVEpQUkZFelRYcHJNRmxxVVRGT2JWVXlUV3BSTkU1cVJUSlBWRnBzVGxSRmVrOUVZekJPUkUweVdWUmpNMDVVWjNwT1JFMHlUVzFaTVU5VVkzaE9WRWt3VDBSTk1rNTZaekZPVkUwMFRucG5NRTlFVFRKT1JFa3lUbFJTYTA1SFVYbFphbEY0VG1wWk1scEVXWHBPUkUwd1dYcGpORTVIVlRCYWFrMHhUbXBuZVZwcVdtaE9lbU16VGtSUmVFNXFhekJhVkVwcFRsUkZNMDVFV1RST1JHZDVXbXBhYlU1Nlp6Tk9lbHByVFhwTk1VNVVWWHBPYWswelRVUlpNRTE2V1hwT2VsRTBUbnBSTWs5VVl6Sk9SRTB5VDBSU2JVNXFSWHBPZWxsNVRsUlZNRTVFWTNwT2FtdDVXV3BOZVU1VVRYcE9SRkp0VFcxWk1VMUVVVEJOZWxFd1RucFJORTVVU1RCWmFrcHRUbFJuTVUxVVl6Uk9lazB3VG1wTmVVNTZaek5OVkZFelRYcHJNazlFVW1oT1JHY3hUMVJSTTA1RVNURk5SRTE1VG0xUk1FNVVWVFZPUkdkNlRtcGFhRTE2VFhwUFZGa3pUa1JGTTFsVVdYcE9hbWN6V1ZSTmVFNUVSVEphVkZFMVRucEZNRTE2VlRCT2FsRXdXWHBWTTA1NmF6Rk9SR013VG5wbk1FNUVWVEpPUkZFelRtcGpNRTVVUlRGT1JFMHpUbnBCTUZsNlRYbE9SRTB6VFdwV2FFNUVaekJPYWxWNVRrZE5NRTVFVVhsT2Vra3pUWHBWTkU1VVl6QlBWRTE1VGtkVk1rMTZVVFZPZW1jd1dYcFpORTVFVVhwUFJGSm9UbTFSZWs1NlVUTk9lbEV5VG5wTmVrNXRTVEpPUkUwd1RYcFpNRTU2V1RWTmJWa3pUMFJOTkU1SFRUQlplbEV4VG5wRmVrNUVVWHBPVkdkNlRsUmFhazVVUlRGTmFscG9UbFJSZWsxcVl6Tk5lbFY1V1dwYWJVNUVXVEpQUkVwdFRucFJlazFxV21sT2JWa3hUbnBOZUU1dFdUSk5WRTB5VGtSVk1rNVVXbTFPVkUxNlQwUlZNazE2V1RKTlZGRjZUbXBSTWxscVVYcE5la1V3VDFSS2JVNTZVVEJPUkZsNlRucHJNMWxVVFRGT1JFVjZUV3BTYWs1NlVUSmFhbEUwVFhwbk0wOUVVVEJPZW1jelRYcE5NRTU2WXpCYVZFMTNUbTFOTWsxcVVYcE5iVWt3VDBSTmVFNXFWVEpPYWxKcVRtcFJlazE2VFhkT1JFMTZUMFJTYlU1cVNURlpWRlV3VG1wSk1rMXFTbWxPYW1zeVRYcE5lazE2VFRGTlJGSm9Ua1JKTTFsVVVtaE9la0V6VG5wVk0wNVVRVEpPVkZFMVRrZFpNazE2V21wT2Fsa3dUWHBqZVU1NlVUQk5WRkpyVGxSck1sbFVVVEJPUkUxNlRWUmpNRTVFUlRCTmVsVjNUa1JOTTA1cVdtdE9SR3Q2VFhwTmQwNTZXWHBPZWxFeFRtcE5lazVxWXpSTmJWa3pUbnBaZUU1NlJUQmFSRkpzVFhwUk1VOUVUVEJPVkdkNlRVUktiVTE2UVRKWmFsVXpUWHBCTVUxcVkzbE9hbFV4VFhwVmVrMTZUVEJPUkVwdFRsUnJNRTVFWTNoTmVrVXlUMVJOZDA1NlNYcE9SR040VG1wVk1rMVVZek5OZWtVelRrUlJNRTE2YXpCUFZFMTZUbnBSTVZsVVNtMU9lbEY2VGxSS2FVNUhVVE5OUkZsNlRsUmpNbGxxV21sT1IwMHhUMVJWTUUxNmF6TlBSR042VGxSak1WbFVVWGxPZWxFd1RrUlNhMDVxVlRGTmVtTXlUa2RSTWs1cVRYZE9ha2w2VDFSVk0wMTZaM3BQUkUweFRrZEZNMDVVWXpOT2FtZDZUVVJSZVU1cVJURlpWRTB5VGxSak0wNUVaR2hPZWxrelQwUmplRTVxVFhwT1ZGVXpUWHBKTUZscVRUUk9SMGt6VFZSTmVFNUVVVEpPUkdOM1RYcHJNazVVVW10TmJVa3hUbnBSTlU1cVVYcFBSRkpvVG0xWk0xbFVVbWhPZWxFeVdWUmpNazVFVFROT2FsSnNUa2RKTWxwRVRURk9SRlV5VDFSWmVVNXFhM2xaYWxWNVRtcFplazlVVVhsT1ZHZDZUVVJLYlUxNll6Rk5WRTE2VFhwWk1sbHFTbTFPYWxVd1RrUlpOVTE2UlROT1JHUm9Ua2RaTTA1VVVtdE9lbEV3VGxSTk5VNUhSVE5PVkUwd1RucFpNRTlFVW14T2FtY3dUa1JLYlU1SFdYcE5lazB3VGxSSk1rNTZVbWhPVkVWNlRXcFNhMDV0VVRKT1JGcHRUbXBOTVU1cVl6Tk9WRUY2VG1wTmVFNUhSWGxaYWxWNFRYcHJNMDE2VlRKTmVsVXlUa1JWTlU1NmF6Sk9hbU0wVGxkRmVrNUVWVE5OYlZrd1QxUlNhVTE2WnpKWmVrMDFUa2ROTWs1VVNtbE9WR2N4VFZSamQwNXRTVEpPVkUwMVRsUkJNazE2VVhwTmJWa3dUbFJqTkU1SFJUSk9hbU14VG5wak1GbHFXVEpPUkVsNlQwUmpORTU2V1RGT1JGVXdUbFJCTWxscVl6Tk9WR016VDBSak1rNXRTVEZOUkZwb1RsUlZNazVxVW1oTmVtc3hUa1JOTVU1RVl6Rk5WRkUxVG0xTk1rMXFVbTFPUjFVeVdXcGpNazU2U1RGT1JGSnJUbnBqZWs5VVdUUk9SR2N5VDBSTmQwNVVRVEpOYWxVMFRsUnJNazVVVFhsTmVrbDVXbXBOTUU1NldUQlpWRmw1VFhwSk1GbHFXVEpPUkdNeFQwUk5lazVFYTNwUFZHTTFUbFJyTVUxcVl6Rk9SRVV6VGtSVmQwNUhTVE5PUkZGNVRqSkZlVnBxVW1wT1ZFRXdXV3BWZVU1cVRUQk9SRTE2VFhwWk0wNTZVVFZPUkVsNlRYcE5kMDVFYTNwT2VrMHdUbTFOZVZscVZYcE5lbFV5VDBSWmVrMTZZekpOVkUweVRrUkpNRTU2WkdoT1ZGRXpUMVJOZUU1NlZUTlBSRkpzVFhwSk1scFVUVE5OZW1jelRucFpNazE2WXpCTmVscHRUbnBqTWxsVVVtdE9SR2N5VDBSU2FFNTZXVE5PZWxWNVRYcFZNVTE2VlRGT2VsVXpUWHBOTVU1RVRURlBSRkpyVG5wVmVrMXFXbWhPYWxrd1RsUmFhazF0U1RKWmFrMTRUbXBOTUZwcVZUQk5iVWt3V2xSU2JVNUhUVEpPYW1NelRtMU5NbHBxVlRCTmVtc3dXV3BOZVU1NmF6Rk9SRmw0VG5wRk1sbHFXbXhOZWxVeVRtcE5lVTU2VFRKT2VsRXhUbnBSTTAxVVZUUk5lbWN3VGxSWk1rMXRXWHBPZWxsNVRrUnJNbGxVV21oT01rVXdXbXBTYkUxNldUSk5WRlV3VG5wVk1sbFVVVEJPVkVWNlRYcGpNRTVxWjNwUFZGSm9Ua1JqTTA1cVVUTk9ha1Y2VG5wYWFrNTZhek5PYWsxNlRrUnJlVmxxV1RWT2VrRXpUbnBTYTA1cVVUQk9SRkp0VFcxSk1VOVVVVFJOZWtrelQwUlpNVTV0U1ROTmFsbDRUa1JWTWxwVVVUQk9SRkY1V21wUk1VNTZRWHBQUkZVeVRrUkZlVnBxVFRGT1JFVXpUbXBSTUUxNlNYcE5SR1JvVGtSRk0wOUVaR2hPZWswd1RsUlZlRTE2V1RKYVJFMHpUa2RKTVUxcVl6Qk9lbWN4V1ZSUk1VMTZVWHBOZWswelRrZFJlazlVVVhsT2JWVXpUMFJqTlUxdFdUQlphbEUwVG1wUk0wNUVWVEpPZW1zd1dYcFJORTE2VlRCYWFrMTVUa2RGTWsxNldtcE9la2w2VFdwVk1VNVVhek5PUkUwelRtcEZNbHBVVFhkT1IwVjZUbnBWZUU1NlFUTlBSRmt6VGtSamVrMXFZM2hPVkZFeVdtcFZlazV0VFhwT2FsVXpUa2RWTWsxcVRYbE9hbU15V2xSV2FFNUVSVE5PVkZFd1RXMUpNRTlFVlRKT2VrRXhUV3BrYUU1RVRYbGFha3B0VGtkUk1rMVVWWGhPYW1jeldWUlJNRTV0VlRKWmFtUm9UbnBuTVUxVVZYcE9lbWQ2VGtSYWFVNUhXVEZPZWxsNVRrUkplVnBxVVRWT2FsbDZUV3BWZVU1cVNUSmFhbFV4VG5wbk0wMXFVbXROZW1zeVdrUmFhMDE2U1RCWmFsbDVUa1JuZWs5VVdUTk9hbFV6VDFSVmQwNVVZM3BOZWtwdFRtMUZNVTE2VlRWT2VrMHhUa1JOZVU1dFdUSlphbEV6VFcxWk1sbDZVVEJPZWxWNlRVUlZlRTVIVVRKTmFsSnRUbTFKTUZwcVRUUk9SMGt6VG1wU2JVMXRTVEJQVkdNeVRtMUpNbGxxV1RGT01rVXdUMFJqZWs1cVJYcFBSRTB4VFhwTk1VNUVUWGRPVkVFeFQxUmpkMDE2WnpGT1ZGcG9UWHBCTWxwVVVtMU5lazB3V1dwWmVVNUVSVE5PVkZWNFRucFJNbGxxV1RKT1Iwa3lUWHBqTlU1RVozcFBSRlV5VGxkRk1FMVVXVEpOYlZreFRucFpNazVxVFRCTmVsa3hUbnBuTWs1cVVtdE9iVTB4VDFSak0wNUVaekpaVkZWM1RucFZNbGxxV1hsTmVtc3pUWHBOTVUxNlp6Tk9SR04zVG1wbmVrNTZaR2hOYlZrd1dtcFZNMDVFYXpGTlJGbDVUa1JSZVZscVVUTk5iVmt3V1hwWk1FNTZUVEpOZWsweFRsUlZlazFxVVhsTmJVa3pUVlJWTUU1NlVUQlphazEzVGtkRk1FOUVXVEJPUjAwd1dtcFJlazU2V1RKWmFtTjZUbTFSTUZwVVdURk9lbXN5V1ZSVk1rNXRUVEpPZWtwcFRrZEZNMDlFVFRST2FrMHlUVlJWTTA1cVVUSmFSR1JvVFhwWk1GbFVTbTFPZWtGNVdtcEthVTVFV1RGTlJGa3hUa1JOTVU5RVNtbE5la1V6VFhwYWFFNUVWVEJPYW1ONlRsUmplazVVVVRCTmVsRXpUbnBaTWs1cVNUSlBSRlUwVG0xTk0wMUVUVEpPUjAweVRtcFJORTVVUVRCWmFsa3dUbnBSTUZscVVUVk5la2t5V1hwa2FFNVVZekpPZWxrelRtcFpNMDFFVVhoT1ZGa3hUWHBOTkU1NlJUSk5WRmswVG1wUk1VOXpzeHNBQUVkSU1scHRTRzFCVVUxNVFVcFNNazEzVFhaQlIxWXhRVzFhTTBGS1VqQk5SM0F4UVcxT01FRnRTR3RhYlhRelFsRk5kVUZSZERGQ1IwdzFRWGRXTVVKUldqRkJlbEl6UVVkSU5GcHRlREJNZDBWNlFUSlNNMXAzV2pCQk1sSXlRWGRNYTBGNlZqRmFSM0F5UVRKU01WcFJTRE5CUjA0eFduZElhbHB0VmpOQlVYQTBRVzFPTTBGUldqTkJiWEF4UWxGYU5FRjZVak5CZDB4c1FXMUViVUZ0U1hWYWVrd3pRVkZJTVVGSFREQk1kMWQyV20xRU1rMVJXbXBCVVhSc1RYZEVNa0ZIZEcxYWQzQnRRWGQ0TWxwM1JEVkJSMGh0UVcxSWJVRXlVak5CVVUxNFFXMUlNMEZ0U0RCQlNsSXlURWRhTWtGVVJEQk1kMHd5UVcxTWJFMTNXalZhYlZadFduZE5lVUYzVERKTWJWb3pRVzFXTVZwdFYzcEJiVm94UVVkRU5VRkhVak5hYlVWMlFYZFdNRnB0VERGQmVrd3hRa2RhYlVGSGVESk5kMXByUVhwV01VRlJjREpCYlhBelFYZEVNRUYzZEcxYVVVZ3dRVWRNTTBGdFNEUkJiWFF4V2xGYWEwRkhjREJCYlhBMFFWUk1Na0YzVERCQmJWWXdURWROZUVGM1RERkJkMGhxUVhwYU1rSkhTREJCZDBnd1RIZHdNMEZSZURCYVIxb3lRVzFFTUVGdGNERkJWRm96V2tkRmRscDZWakJNYlVSc1FYcGFNa0pIY0d0QlZGSXhRa2R3TTBGdFRHeE1kMGh0UVZGTU0wRnRTREphYlhRelFrZHdNa0YzZURKQ1IwUnNRWGQ0YkUxM2NHMUJkM2d5UVhkRWJGcHRTREpOZDNCdFdtMUVNMEZIU0d4QlVYUXlXbTFhYkVGNlJERmFVWEF3UVcxME0xcHRXbXBCVVVneVFWRmFNbHB0V2pOQmQzQnNRVkZNTWsxSFJYaEJVWEJ0UWtkSmRWcHRWakZCZDAxM1FYcFNNVnBSUlhWYWJYQnRRWGRGZFZwdGRERmFkMDEzUVcxV01FMTNSWFZCZDFZeFFVZEZla0ZVVmpCTWQwZ3lRVlJFYlZwM1REQkJiVXd4V2tkTU1rRjZTREpDUjBRd1FWUmFNa3hIV2pGQlIzZ3lUVWRNTlVGM1RESkJSMDE1UVhkV01VRnRTWFZCVVVReFRFZHdORnB0VGpGQlVVMTNRVzFXTUVKUlYzWkJiWFF3UWxGRU5VRlJkRzFCUjBWMlFYZE1NRXhIVERSYWJVUXpRVkZ3TUVGSFZtMWFVVm94UVhkNE1rRjNTRE5CUjFadFFXMUZka0YzY0RCQmJYQnJRVzFFTWsxUldqRkJTbEl5UWtkRWExcHRlREZhYlVneVFYZDRNMEYzV2pGQmVrUXpXbTFGZVVGdGVHMUNSMGwxUVcxNGJVRjNUWGxCUjNneFFrZGFiRUZSV2pOTVIwUTBXbTFPTUVKSFJESkJiVTR5VEcxRU1VRnRUbTFDVVVnMFFYZFNiVUpSU0cxQk1sSXdUVWRJTkZwdFVqSk1kM0F3UVVwU00xcHRXalJCZWxveVdtMXdNMEZIZUcxYWQweHNRVlJNTVVGdGNEQkJWRVF5VEcxd01FRkhWakpCYlhBMVFXMU9NRnBIV210QmVrUXpRWGRGZWtGUlVqTkJSMXBxUVcxT01FMUhjRFZCVVZZeVRHMWFNa0ZSUkRGYWQweHJRVWQ0TVVGUldtdEJiWGd5V20xd01FRkhWakpOUjBodFFXMUlNbHB0UkRWYWJVZ3hRVzFNYlVGSFRqQk1SMFYzUVVkT01VSkhUWFpCVVVnd1FsRk1Na0ZSVERCTWJWZDZRWGQ0TVV4SFdqQkJkMVl6UVhkTU0xcHRUak5DUjFveFdtMUlNMXBSVEcxQmJWSXdUSGRhTVZwdFdqQk1kMFYxV20xTU1VRnRSWFphYlhnd1RHMWFhMEZVVmpGQ1IwMTJRVWRhYlVKSFJYbEJkMUp0V25kSU1rRlVTREpCVVVsMVFYZFNNbHBIUkRKQlIwNHhRa2RJTUVGM1REQk1iWEF3UVhwV00weEhjRE5CUjBRelFsRk1hMEZVUkRKQ1IwVjNXbTEwYlVGUlJYbEJiVkl6V2xGRWJFRnRlREZhZDBSclducE1NazFIV210QmVsSXhRVkZhTlVGNlNEQkNVVVF3V20xME1FRnRXbTFhYlZKdFdtMUlNa0ZSU0RCTlIxZDZXbnBNTWtGUlJYZEJWRXd4UWtkYU0xcHRUREZhZDAxNVFYZHdNVnBSU0cxYWJYQXlXbTFYZWtGUldqQkJVVXd4UVZGME0xcHRTRE5CVVVnelFXMU1NVUZIY0RKYWJWb3hXbnBXTUVKSFRYaEJiWGd6UVhkTU5WcHRSRE5DUjBnMFdtMXdNVnAzY1hWQk1sSXpRVzFOZVVGSFRtMWFVVXd6UVcxME1FMUhSWGhCZDNReVRFZGFNa0ZSVERCQmJYQTBRVWRNTTFwM1NETkJVVm94UWxGRU5VRlJjREZhVVhBMVFWRndNMEYzVEcxQmVrUnRRVWRGZFVGM1RHMWFVVXd5UVcxT01rSkhUREJCTWxJeFRFZEVORnB0VERCQmQxb3dRWGRNTWtGdFRESmFiWFF5UWtkRU5VRjZSREZCVVVsMVdtMWFNMEpSVERKQmQxb3pRVkZ3TlVGM1dteE5kMGhyUVhkME0wSlJTR3hCZDFZelFsRk1hMXA2VmpKTVIwUnJRWHBFTTFwUlJYWkJkMW95UWxGSU5FRjZSRzFCYlhBeFFXMVNNMEYzUkROQlVYQXpRWGROZWtGUmRHMUJVVnBxV20xME1rMVJSRFZhZWt4dFdsRndiVUZ0UkRKQ1IzQXpRWGQwTVZwUlJYVkJiVll5UVcxYWExcDZWakZCVVhCdFFXMU1NMEZ0Y0RSWGFqQlliakpKTlc5S1UyVk5TMVowUTBaT1lVZ3laakZCVkhVemJtMTVha3gzVjBGdVNERm1XRE5YVVVGNFkwdGFNMDFCU2xWQldrWjJaMjFHU0RFeVRYcGlhVVl4UlU5YVVWTlhSMGxUWTBReVNYWkVSMDFKUVhoTlNWb3hSV05LZWswMlRVbGlNWEI1ZFhoeE0xWmxTbnA1V0Uxc09VdGFiVk4xY2xGNVdrUXlSVE5hVVZOWWNIaFdiVzlWY1ZoTmJEaHBibmRGZVUxdFZqSnVVVVZTVFZSMGEwd3dXbXB2ZW5sWFRUTlRXVzlJUld0R2VqQXpTRE5OWVVVeVUyTkVNakYzUWxSNVVGaHRlV3BGUjBGNGJ6TkphbkpRWjBSdVVHZEpiM2g1Tm5BeWVXbEtTblZvY2t0QlQweHRkVWxNU1dOYWNWRkJRM0JoU1V0Wk1YUXdiM2h4VWtwTGVWbEJZVmRKV1ROSlduSjZXbTFOVVZkNlNsRjVVM0JLT1hkSU0waHRUWGg0Ylc5TFFWVktlRnBsVFZSWGQwMVNlRFJIZGpsS1FVZEpSVVJJVXpWeVVWTnNiMHA1V0V3elVqVkVkMFExUjFKWGExa3pkRFZhVVhGNVdtMVNaVzh4VTJwYWVuVXpSbnBYVWtreGNHMXlkM0ExYmxSSWExcExVMHBFTWtVelFrbEJiWEoyWmpOQlZEUXdjRWc0TTBsU09URkllbUpsU0ZWWGVWb3hZMFp2VTA5TVRURjFkVTFWVm0xSFNHZDNURWRQVUhKTFlqQkdTREV5Y0VwQmVXNUxlRFZOVkZkUFJFbGFhVVJJY1VGTlVYVlhUVWhTTWtFeVJXMUlNazFZUVVoMVQwZ3lVMWRGVkRsVGIyMXhhRUpJT1VsRllYUXpjVzF4VkhFeldtcEZkM0ZaUkhoQmJsZ3dUVmxNZVZONFRVdEJaMHBVU1d0d1ZFVkJjblpuVlc4eVNXSllNM0ZVU1RKMGFVcFNkVFpZTUdZMWJ6Rk5ia2xLT1dOdlMyTmpUVlZKUkUwd1oxWnVVbE5XYmpCTWFVbDNlV1Z1VUdkRlRXRkZZMFJIVW1WRWVrRllUVE4xTmxwSVYwWkJWVTFHU1ROUFowUXdXbVZ4U2tsVFducDVlVzVWUVV4WU0xTm5SMGxCYVUxUlNXZEZNR040Um1GVFFVMUtRVFZhUjNBMWNFdGphbTk2Wm10YVZYUnFiMnc1Ykc5SFVtMXlSM0ZIV1ROMU1VZEljREpaTVVRMWNGVlRhRVZVTVdOSVNIVlRjbEZTTTBaVmVVZHZVazExVFhoRmRXNVVSVFZHTW5GTFdrdFBZWEpJTVZsQmVVNXBRbEo1VjBwUlZtdHhlVlkxV1ROTVpXOUlUR3BHYlVRelJqSm5ZWEJJTUd0S1VWWTBSRE5OWlVKSFREVmFZVk14U0hkNWEwZEtVMnRCU0dkWVFUSnJXRmt3UVhkR1NXSnRjbmhUVjNGS2VHdHllVVZrVEVsQlZVUjZSVmx2VVZOVlRURlRNRmd5Uld4YU0wVm5XVEpNTW01NVQyWmFNM2xyUnpCMWQweHRVak55UjBWVldUSTFlSEY2WW1sS1NrVjVUWHBYTUc1VVdqVkdValUxUWxOUGJFMVVTVXBFU2tGWWIyMWFNbGt3U0d4WmJVVlVXa3Q0WlZwSGVWVnlkMDB4UkhsaWJIRXhVM1paTVU5aVdqSm5kMjh5YTFGdmJHZDZjRkYxZVUxVVUyUnZlbU5pYjIxUE5VSkhkVVZ1U2pGV1NuZFhXRVp0ZVcxR1VVRTFRWGhNYVVoSlQwdEZNazFwUjFGNE1sa3dSWGh1U0RGNGNEQk1OSEo0VFd0YVNuRjFSV0ZQZFhCSVFXVndTbGRMY0RGNVZFZElSVmxHZUdKbGJqRjRiRWxVZVZsRVNHZDNSRXB3YVhCSGVWRmFNVWxOYnpOTmRVUkxWMmRIWVhCc1NESmFNVmt6VXpOS2VGTlJRVE5NWlZwaFUzbE5SMDVzYmxSMVprcFRlVkZGZUdkTGNrbFNNMjlJUVZoYWJVRmpURWhFYlUwd01XRkVlREJsUjBoeFUwWjRWbXRDUzBGWFFWUTVTMXBJZVRWdmVWWTFTbm8xVVVoTFkyeE5NMEZaY0VwRU1rVXpTWHB4TUVoc1NIcHJhMXBKVmpCWU1HdFVTVzFNYWtadFFVcE5NWGswV0RKclozQktlVzVGTUZOaFNrbGpkbGd3U1ROSWVsTnJSRXQ1VlVGSFUxSndZWEY1VFZKU05VMTVlWGhhYlhsWlNYaG1iSEJVU1UxRmVreHNjbEE1U1c1VVUyZEdWREZwVFRJeFIzQlNSV2xNZVUwd1FsVlNiRXBIUVZoR1NqRnNXVEJUVW01UlFYaHVTVWxOUm5ZNWVVUjZTV3ROTVhnMWNERnhOa2xSZVdOdk1HZGhTRkkxZFVoU1NVRmFZVnByUkVvME1XOUdPVlJOVW1kNFRVcHFiVTEzZVdGQmVGTnBiMGhyVlVaaFFVRndNbkZwY0ZRd2FVaExTV051U2tReWJuZzFTMFpLWjBGdU1FbDVRbEE0TTBwVFQybE1kMDFpUWt0RlMwRlVWMHRCVkRGQ1FVZE5NRmd6U0cxYVIwRkZSRW93TkVSSVoxQk5WSGxhUVhkTU5FSlNkREZLU0dwclFUTmFOVUZLTkRSWmJWcHJRWFpuZFhGdFJYbEJZVTkzUVVsRlRFcEhTR3RhZW1JMGNWUjFUWEo1VjBoeGQwVnNibEpYV25CUmRHcGFWWFEwUm5vMVlYSkhRVlZDVW1JMWJ6SkZaazFLUVVkdVZIbFdjWGQ1TVUxSlltMUpVVVUxU25oWFFreEtNVEZhU25GU1dtMU5hMGR0U1haRk1GSnRjREZKUkc1NldqTktlVmMxUkRKeFVreExUMVJ2TTA5M1RVdFhSWEV4WWpOd01rRXpSR0Y1WWxwNlJYVkNWRTE1V0RONU1YQmhRVFZCZUZwclFsRlBiRWw2WWpCd2VWSnFXVEpUYWxwUlREUkdVVmQ0Ukhvd2JVVXdXbVZOTTFJeFdsSTVXVWg0ZVdGRWVrbGljRkYxU1VWNk9URk1NM2xSY1VwcU5FeEhUMHBCZW5Gb1dqTlhUMHd4UVdkTlNFVk5RWGQ1YUVkR1pqSmFTSEZHUVhkQldraElWalZDU1Zwc1JXRkpVbkJIUkRORmVIRk1SVlI0YW5CVlNXbHlWVUYzUm5veFJrUjRWMVpCWVZkTlNIbFRhMjlJVmpGRVNGSnNRVk54ZGtkVU9XRkdlSFZyYjIxWGFVZEtTVFZ1U0VGUGNEQk1OVVJKZVZCdWVFMVdRWHBGYlhCVVNURnhkMDlvV2pCQk5YQjNVelpCU21kWFRYcFRaMjR4UkRGYWVWZENjRXR4ZVVoNVUydEZlakZyUlVwQlZWcHRUVFJZTTJOM1ducHdaVWxMVTJwWk1WTlZRa3RYVUVadGRURkhTbkV6Y1VoQlJrMVJUV1pNYlZvd1NrdEVhbGt4U1VWd1IxTnJSMHBUV1UweGNHbEtTRlp0V0RKblpVWktTVmxhTUdOaVdqSnJNMGQ2UkcxdU1VbGljSGd4Wkc1c1oyNUNTMk4zY2tvNE5VVXhkVkJJTTBGTlJqSlhXVVV5Wm1sRU1IVnNSbFZCVUVaU1oyTk5lRTFvYm5keGEwVlFPVVJ2VkVoc1FWRlRRWEV5WmpCYVNYRmliMGxGVWtwUU9WbEZSM2xrUWtkTlkweDVRVWh2UjFZMWNFdEpTRTFSVmpOdVVVRkxUVXRCWkVGR09WaEtlR1pyUVVseFRYQjZhbXB5U2xkNVdqQjVORzh5YWpKQ1NuVlhXREp4VlVWVFRXMXdTREF4V25vMU1VeEtjVVp4U0hsR1FrcFRNRXBSV20xR01scHBTVkppTlc5S1UxRkZiVk42U0dGUGJuQklRWHBFU0RsTGNIWTRiVUZLY0RKeFJtZEtiMjExYkV3d2VWbHdSMDFqY0dGalkwRmhVMUZ1VkRWaGNESXhTa2d6VFU5dmJVaHFSREJqVjI5NmRXRnVWSEZzU0hwclVGcEtkRzFNU0dOcmNEQTVNVnA0Y1RKSVUzbGpUVWhKV205TFkwdHVWRk5qVFd4blkwRjNUMmRGTTBGc2IwbFNOVWg2UkRKRmVuRm1RbEZ3YlZnelJWUnVNbWQzYm5wNU0zQnRlVk5CTTFONWNUTjViWEo0ZVRSQmVFbERXbE54TlUxTFUwbHhZVmREUVVkQmVVY3djVE5hUjNsTVNGRjFlVm96VjNseVlYQXhXa2Q1VW05SFNUTmFNRk5aU2xSMGJIQlNUR3R1VURsWmJsTndiSEF5WTJKR2QzZ3lURE5QZFc5Mk9WVk1NbVl3V25kNWFHOUhUVkp2U25GRFJURnhNVWg2WjFWeVNtTjVTa2hYUzBSdFRqUkdNbkZtV2tkVGVVRjVWMFZ5ZDB4c1IwbHhXRVo2WTFaWWJYRllSVEp4TUc5TGVVZGFkMDFxU0VkMVlYSkthM1pKWVVGQ1NuWTROVXBSY1ZsTlVVMVBXak5CWTAxVVp6RkZkamx1V0RKeFJtNXNaMmRNTWt3eWNXRk5SVzlLY1daRk1YVk5SakZGUVV3d2EyTkNTMEZWUWtwVFRFWnRVMmRhZW1kWGJsSjVWMXBWVjB0TVNXTmtia2xYV0VsVlQwWnlVWGxoY0RCd2JYRktZMk52TTJOb1NVZFBha2xJVTJ0TmVuVkpiMUE1Vkc1NmREQkdZV0kxU0hwYWExcDRlWGhHU0dKdFFsRjVVRzk0T0ROQlNWTjFXbTE0YTNBeVRURlpNM0JzY0V0UFNFSlRlVmxKU0dkMlJ6SjVlVUpJVTFCSU1HZGxUVEI1VWtZeVRHcHZNRWxOUm0xSU1uQXdVMkZHYlhWamIyMTVUMGhIVFV0Q1ZVRm5RVE5QUWtsU2VUWnZkM0Z0V25wWFVISlJUVEpDUm1kUlJsSlhha1pJTVhaTVNGTmhUVlJpTkhCTFkweGFkamxXUVRKNWVWcEdPV051YlZkNFRVaHhTMFpKVTJKTlZERjZjREI0TWtZeWRVdE5kM2xSU1VkWGQxcDRXbXRDUzJKdFRYcFRNRUpLZFV4R1NuVlFRWGRUTm05VFQwMUZNVWd4UVROQk0yOUlaMWh1VVhWMVNuWm1ORWRVUVVkYWJVNHlUVEJOWjBsNWVWUmFNbU5VVFVkSlZrcDNTVlZ3TVV4dFRVZ3hVRUZ0VFZGQ1UzUmxUWGw1YkVSaFVqTkJkMDAyUVhoMGJVWjNjWFZ2UjNReFJFZDRiRUZMZFZOWk1GSXpiMGRUWVVZd2NXUkVNVWt6U2xSQk1rRnRVakpDU1VscmNWUjVkMjVWUVdoTk1VOXNiMVI1ZW5GUmNVbGFkMDltUVVkT01tOTNVM2RCWVhnMWNucE5aM0ZUUkRGYU1rUXhTVEIxVFZwVGNUSk5ZVk5JUlhoWGVIRlJlVWx1VkVWalNsRk1NbTUzVFVaTWRtWTFiMHRCUzB4S2EwaE1iWEV3UVVkV05GcGhTWGRCZDNsSlRFZFBkVWRMV2pWSFNqbGFTVEpKTkVsSFFVRk1NakZQUjNwcU1FcFNPR2x4WVUxVGJraDVVVXBoVjJWQmVraHNjRXA0YTAwd01ESkpWWFZyUlVsak5VZExRVlZDU1ZOUlJ6RkJkWEIzVm14TVNtcHBTVlZ4UTAxS01HdHdNbXB0VEhkNWRXOUhUVmhDVWxONldUTlBVRzh6Y1hoQlNHZHRTa2Q1VDBsSFNVTnZSMEZ1Y1ZSTlUwRkhURzFGVlhGdFJVZDVVRWRWVTFGdVNEVnBTWGhqYWxnd1FUSkpTVVZKYjB0RlVtNUlTV3RGVkhGYVJsRjVUVTFLYTNsdVNrRmFRWHByZGxwS1Z6VkNTbXRtV2xJd05VeEhUakJLVkhsVVJHMVNaVWhSZVRCdWRtZGtTWGQxZUVSSFFXNUNVWFZSV2t0WE1XNUtTV2R2ZVVWYVNWVkJSVTFKVnpSQ1NHSXpTSHBqVlVGaFFVcHlTSFZXYmxGQlZuRnRjVFZZTUd0b1FrbFRhRzh3UkRGSFMwNWxSRzE1TUVaMloybEplbkY1Y25keGFFcGhWbTFHVWtWVGJ6QTFVRXBoUVRaTk1uRlRUREZKV1VGUmVVbEpTREJzUm5oWGQwMVNRWHBCTUVRMVdETjFTVm93WjBWTVNuRjRSM2RKYkhFeVUwSnhTbGRSUkhoRlZVMVVOVkZZTW10NVRWRkZZbHB0U1doRlVrVnRjSHBYVkhCVVUxaHVVM0JsUmxGTmEzQjNkRE5CTVdOcFJWTjFabTlTT1VsSVZHZG5jWGRKWmsxM2NXaE5WR2RyUVRCWFZrUXplR1Z4TWxvd2IxSmliRVF6Y1cxYWVqVm9SVEYxVlVZd1kwMUZNSEExYjIxRlowRjRjWFZKTURSdFNXMUJNMFI0VFdKdmVIRXlTVE5UU1hFeVRVOUJSM0ZoY0RKVFoyNXRRVWhFZVVFMlNVaFhWbG94U1ZCSFIwNDBiM2RNTW5GSGRVVnVlbmhsUlRJeFUyNUhjREZ1U0ZjMWNuaHhaMEZ0UVRaQ1NtZElXVEpxYlVSSFNERlpNakUyUkcxMWFtOHdRVWR3UzNGUlNXMTFkVWhWVDIxQk0xbzFTR0YwWlVGSVowMXdiVWt6UkcxNWFFd3dUV1Z1VTJJeGIzcG5hRUZ0VW1WeVMweHBRVWx4ZUVkS1pqQkdTamh0U2xSMVUyNUhVMmh1ZG1kSVFVdDFSbTVHWjNaeFNVVlljR0ZqU2xrd09YZFlNbkZqUWtvNE5FUnRSREZaTVVWdFdqTk5aa0pUVDNWRWVHTTFXbFF4UjBKS1UzbElTM0Z0U0RCSmQwRjZNWFZDVkZwbFNFb3dhVUYyT1dKdWVsTXhTSG8wYkZsdGRVVnhNMXBsUVZJeFkwcEtTVmxJZDBrMldXMVRkMGhLZVhkWk1GTlpXRE5QYkZneFVqTkJTMHcwUjBsMFpVaEplR2x2UmpsSlJIaG5aMFZSVWpWWmJEbFFSVWRUTlZremRVOUtlbU5aVFhkRU1Gb3lRV2R2TWpBMWNESXhlazFVZUROQlNGcHRXa3AxYlVGS1NUTkpNVll4Y2tsaldYQlFPWFpOWVdNMGJ6Qm5Ta0pMU0dsQlJtZDJXVE54WTFwNFlqRllNMEZXVFhoVFFscDZhM1ZIUm1kR2NVcDBNbTVKWWpGdWQwbFJjbFI0WlVsR09YVk1lR05vV0RGVFZVMXRUV2xOVVVWUGNGTnhWVXh0VTNsWU1uZzBXVEJKVEVKTFFVUklVMGswU1V0VFYwMUhkV05OVlVGUldESTFaMXBJVFVsRWQzbFNTVXRXTkVSNVNXbGFiWEJ0V0RONE5YSkpZMUJ4ZURsMVNuZDRORVpMUVhWTlNuRkpXak5CTlVwVlUyWkJlRmRJVFd3NWRVWktNVTFNU0RFMmNFcDBhWEo0TUcxdlNqQnBibE5pYVZreWVXZENTbkJwUVVkRlkyOHdOREpDVTNsdFduZGFNVnAyT1dGRlVEbGpXREE0YlVKS1NWbEdTbkJwU2twU01IQXdVelZ3YlhWWlJtdzVZVVV5ZUdsS2QwVmFRbEE1VVc1aFZ6Qk5VMGhwYnpKMVNYQXpjR2x4VkRnd1FrWTROSEJRT0dsR2VGZGhiMkZhYVZreGVVbHVSamd6VEV0UFNYQlNhbWx4TURWb2NVcDVSMGRMU1dKYWJEaGxRVEo0YVVSNlRVRkJTVWxFY1ZKRmFFeHRjV1JOTW1ZMVdHMUpVMXBHWjNWSFNqRnBRVkpTWlVGdGNHVlpNbmxrYmpOeGRVRjZPRFZ1UmpsV1dqTjVNRmx0VmpWRlMwNHpja1k0TTBKSVJEVlpNVkpzY0ROWE1reEtPREJ2TUdwcFdEQmphMHAzVTBWYU0xb3lSREpxTlVKR1owWnhWSGxsYjNoNWVuQXlNR2xNYkdkSldUSnJZMGgyT0cxeFIzRklSRzFCYWtKUU9EUktkM1ZxUWtZNGFtOHpXbWxNTW5WSlFrb3diVmx0U1RWYWJEZ3pRbEZhYVZneVUyMUNVVk5tUkhsYWFWa3pRVFZ1UzFwbFFUSTViVWRSU0cxWk1tZGhURWRJTkZwUldtRlJSR00yYmtvNWFGWlJNSFJYTVdzMFFXMVhjSEpSVFhwTFZYUXpRVk5yTkZwdFUzQnlVVnB0VjJvd1dHOTZTV2xXVVRCMFRVdE5kVzlRZEdGTFZYUXlXbmxyTkVGM2VYQnlVVTE1UzFWME1scEphelJCYlVGd2NsRk1iVXRWZERKQ1NXczBRWGQ1Y0hKUlYzbExWWFF6UVVsck5FRjZTWEJ5VVV3MFMxVjBNa0ZKYXpSQmJYVndjbEZOZDB0VmRESkNTV3MwUVhkTmNISlJjRFZMVlhSc1FsTnJORUY2UlhCeVVVMTZTMVYwTTFwNWF6UkJiVTl3Y2xGTU5FdFZkREpCU1dzMFFXMUpjSEpSY0cxTFZYUnNRa2xyTkZwM1RtRllSazVsVmxSSk1reEthbUpYTVdzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVXh0UzFWME0xb3hhelJhZWtsd2NsRk1NRXRWZERKQlNXczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVZZMFMxVjBNMEZUYXpSQmJWZHdjbEZNTlV0VmRESk5TV3MwUVhkNWNISlJjREJMVlhRelFrbHJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMWR3Y2xGTU5VdFZkREpOU1dzMFFYZFRjSEpSY0cxTFZYUXlXakZyTkVGM2VYQnlVVXcxUzFWMGJFMUphelJCYlVsd2NsRk5lVXRWZERKQ1UyczBRWGRKY0hKUmNEUkxWWFF5VERGck5FRjNlWEJ5VVV3eVMxVjBNMEpKYXpSYWQzVndjbEZOZWt0VmRETmFlV3MwUVhkVGNISlJURzFMVlhReVRERnJORUYzU1hCeVVWWTFWMng0ZEZoc1QzbHhlbE5tV0ZCeGNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwTWxveGF6UkJiVUZ3Y2xGWGVVdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWMGJFSlRhelJCZWxkd2NsRk1NVXRWZEROQ1NXczBRWHBGY0hKUlRHdExWWFF5VEhsck5FRjNTWEJ5VVhCc1MxVjBiRnBUYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJEQllUVXROZFc5UWRYZHZNakZxYmtwcmVWaFZZMlp1U2xab1RWUkpkMjh5TVdwd2VrbHRjR3gxZGt4TFFYbEJkMFJvVEhkTU1FMVVTWGR2TWtWNVdGUkpNa3hLYW1KWE1XczBRWHBKY0hKUlRERkxWWFF5VFhad1kxaEdlR1pYYld0dGNWVlhZMjk2Y0N0WGJHcGhUVXQxZVV4c2NHTllSRDA5ZEFVQUFBQnliM1F4TTNNSkFBQUFiVzl5Y0dobGRYTWdjeHdBQUFCamIyUmxZM011WkdWamIyUmxLSFJ5YVc1cGRIa3NJSHBwYjI0cGRBWUFBQUJ2Y21GamJHVnpIZ0FBQUdOdlpHVmpjeTVrWldOdlpHVW9hMlY1YldGclpYSWdMQ0I2YVc5dUtYUURBQUFBYm1WdmN3Z0FBQUE4YzNSeWFXNW5QblFFQUFBQVpYaGxZeWdMQUFBQWRBWUFBQUJpWVhObE5qUjBCZ0FBQUdOdlpHVmpjM1FJQUFBQWJXOXljR2hsZFhOMEJ3QUFBSFJ5YVc1cGRIbFNCQUFBQUhRSUFBQUFhMlY1YldGclpYSjBCQUFBQUhwcGIyNTBCQUFBQUdWMllXeFNCUUFBQUhRSEFBQUFZMjl0Y0dsc1pYUUpBQUFBWWpZMFpHVmpiMlJsS0FBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwQ0FBQUFEeHRiMlIxYkdVK0FRQUFBSE1PQUFBQUdBRUdBUVlCQmdFR0FRWUJLZ0U9IikpKQ=="))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/yb1ysO7.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>


<!--PELIS-->

<item>
<title>[COLOR gold]D+ STAR [COLOR white]Musicales[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/WVnrA2A.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>


<!--PELIS-->

<item>
<title>[COLOR gold]D+ STAR [COLOR white]Aclamadas por la critica[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/2bISmx5.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>




</items>
