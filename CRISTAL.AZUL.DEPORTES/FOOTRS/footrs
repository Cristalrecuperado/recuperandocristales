<?xml version="1.0" encoding="UTF-8" standalone="yes"?>




<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal[COLOR white] Directos[/COLOR]</title>
 <link>$doregex[makelist2]</link>
 <regex>
 <name>makelist2</name>
 <listrepeat><![CDATA[
<title>[COLOR lightskyblue]$doregex[coloreando][CAPITALIZE][makelist2.param1][/CAPITALIZE] - [COLOR white]$doregex[emitiendo][/COLOR]</title>
<link>$doregex[plugin]$doregex[depen]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,shutil,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
title = '[makelist2.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\n\s\s\s(.*?)\n]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,xbmc
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>depen</name>
<expres><![CDATA[#$pyFunction
finalurl = '$doregex[multi]'
import re,requests,xbmc,resolveurl,urllib2
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/directos.motor.conector.externo', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<regex>
<name>colores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
 import xbmc, xbmcaddon
 addon = xbmcaddon.Addon('plugin.video.cristalazul')
 return addon.getSetting('ColoreandoPrincipal')
]]></expres>
<page></page>
</regex>
<regex>
<name>coloreando</name>
<expres>$pyFunction:('$doregex[colores]').replace('Predeterminado','').replace('[COLOR lightskyblue]lightskyblue[/COLOR]','[COLOR lightskyblue]').replace('[COLOR aliceblue]aliceblue[/COLOR]','[COLOR aliceblue]').replace('[COLOR antiquewhite]antiquewhite[/COLOR]','[COLOR antiquewhite]').replace('[COLOR aqua]aqua[/COLOR]','[COLOR aqua]').replace('[COLOR aquamarine]aquamarine[/COLOR]','[COLOR aquamarine]').replace('[COLOR azure]azure[/COLOR]','[COLOR azure]').replace('[COLOR beige]beige[/COLOR]','[COLOR beige]').replace('[COLOR bisque]bisque[/COLOR]','[COLOR bisque]').replace('[COLOR black]black[/COLOR]','[COLOR black]').replace('[COLOR blanchedalmond]blanchedalmond[/COLOR]','[COLOR blanchedalmond]').replace('[COLOR blue]blue[/COLOR]','[COLOR blue]').replace('[COLOR blueviolet]blueviolet[/COLOR]','[COLOR blueviolet]').replace('[COLOR brown]brown[/COLOR]','[COLOR brown]').replace('[COLOR burlywood]burlywood[/COLOR]','[COLOR burlywood]').replace('[COLOR cadetblue]cadetblue[/COLOR]','[COLOR cadetblue]').replace('[COLOR chartreuse]chartreuse[/COLOR]','[COLOR chartreuse]').replace('[COLOR chocolate]chocolate[/COLOR]','[COLOR chocolate]').replace('[COLOR coral]coral[/COLOR]','[COLOR coral]').replace('[COLOR cornflowerblue]cornflowerblue[/COLOR]','[COLOR cornflowerblue]').replace('[COLOR crimson]crimson[/COLOR]','[COLOR crimson]').replace('[COLOR cyan]cyan[/COLOR]','[COLOR cyan]').replace('[COLOR darkblue]darkblue[/COLOR]','[COLOR darkblue]').replace('[COLOR darkcyan]darkcyan[/COLOR]','[COLOR darkcyan]').replace('[COLOR darkgoldenrod]darkgoldenrod[/COLOR]','[COLOR darkgoldenrod]').replace('[COLOR darkgray]darkgray[/COLOR]','[COLOR darkgray]').replace('[COLOR darkgreen]darkgreen[/COLOR]','[COLOR darkgreen]').replace('[COLOR darkgrey]darkgrey[/COLOR]','[COLOR darkgrey]').replace('[COLOR darkkhaki]darkkhaki[/COLOR]','[COLOR darkkhaki]').replace('[COLOR darkmagenta]darkmagenta[/COLOR]','[COLOR darkmagenta]').replace('[COLOR darkolivegreen]darkolivegreen[/COLOR]','[COLOR darkolivegreen]').replace('[COLOR darkorange]darkorange[/COLOR]','[COLOR darkorange]').replace('[COLOR darkorchid]darkorchid[/COLOR]','[COLOR darkorchid]').replace('[COLOR darkred]darkred[/COLOR]','[COLOR darkred]').replace('[COLOR darksalmon]darksalmon[/COLOR]','[COLOR darksalmon]').replace('[COLOR darkseagreen]darkseagreen[/COLOR]','[COLOR darkseagreen]').replace('[COLOR darkslateblue]darkslateblue[/COLOR]','[COLOR darkslateblue]').replace('[COLOR darkslategray]darkslategray[/COLOR]','[COLOR darkslategray]').replace('[COLOR darkslategrey]darkslategrey[/COLOR]','[COLOR darkslategrey]').replace('[COLOR darkturquoise]darkturquoise[/COLOR]','[COLOR darkturquoise]').replace('[COLOR deeppink]deeppink[/COLOR]','[COLOR deeppink]').replace('[COLOR deepskyblue]deepskyblue[/COLOR]','[COLOR deepskyblue]').replace('[COLOR dimgray]dimgray[/COLOR]','[COLOR dimgray]').replace('[COLOR dimgrey]dimgrey[/COLOR]','[COLOR dimgrey]').replace('[COLOR dodgerblue]dodgerblue[/COLOR]','[COLOR dodgerblue]').replace('[COLOR firebrick]firebrick[/COLOR]','[COLOR firebrick]').replace('[COLOR floralwhite]floralwhite[/COLOR]','[COLOR floralwhite]').replace('[COLOR forestgreen]forestgreen[/COLOR]','[COLOR forestgreen]').replace('[COLOR fuchsia]fuchsia[/COLOR]','[COLOR fuchsia]').replace('[COLOR gainsboro]gainsboro[/COLOR]','[COLOR gainsboro]').replace('[COLOR ghostwhite]ghostwhite[/COLOR]','[COLOR ghostwhite]').replace('[COLOR gold]gold[/COLOR]','[COLOR gold]').replace('[COLOR goldenrod]goldenrod[/COLOR]','[COLOR goldenrod]').replace('[COLOR gray]gray[/COLOR]','[COLOR gray]').replace('[COLOR green]green[/COLOR]','[COLOR green]').replace('[COLOR greenyellow]greenyellow[/COLOR]','[COLOR greenyellow]').replace('[COLOR grey]grey[/COLOR]','[COLOR grey]').replace('[COLOR honeydew]honeydew[/COLOR]','[COLOR honeydew]').replace('[COLOR hotpink]hotpink[/COLOR]','[COLOR hotpink]').replace('[COLOR indianred]indianred[/COLOR]','[COLOR indianred]').replace('[COLOR indigo]indigo[/COLOR]','[COLOR indigo]').replace('[COLOR ivory]ivory[/COLOR]','[COLOR ivory]').replace('[COLOR khaki]khaki[/COLOR]','[COLOR khaki]').replace('[COLOR lavender]lavender[/COLOR]','[COLOR lavender]').replace('[COLOR lavenderblush]lavenderblush[/COLOR]','[COLOR lavenderblush]').replace('[COLOR lawngreen]lawngreen[/COLOR]','[COLOR lawngreen]').replace('[COLOR lemonchiffon]lemonchiffon[/COLOR]','[COLOR lemonchiffon]').replace('[COLOR lightblue]lightblue[/COLOR]','[COLOR lightblue]').replace('[COLOR lightcoral]lightcoral[/COLOR]','[COLOR lightcoral]').replace('[COLOR lightcyan]lightcyan[/COLOR]','[COLOR lightcyan]').replace('[COLOR lightgoldenrodyellow]lightgoldenrodyellow[/COLOR]','[COLOR lightgoldenrodyellow]').replace('[COLOR lightgray]lightgray[/COLOR]','[COLOR lightgray]').replace('[COLOR lightgreen]lightgreen[/COLOR]','[COLOR lightgreen]').replace('[COLOR lightgrey]lightgrey[/COLOR]','[COLOR lightgrey]').replace('[COLOR lightpink]lightpink[/COLOR]','[COLOR lightpink]').replace('[COLOR lightsalmon]lightsalmon[/COLOR]','[COLOR lightsalmon]').replace('[COLOR lightseagreen]lightseagreen[/COLOR]','[COLOR lightseagreen]').replace('[COLOR lightslategray]lightslategray[/COLOR]','[COLOR lightslategray]').replace('[COLOR lightslategrey]lightslategrey[/COLOR]','[COLOR lightslategrey]').replace('[COLOR lightsteelblue]lightsteelblue[/COLOR]','[COLOR lightsteelblue]').replace('[COLOR lightyellow]lightyellow[/COLOR]','[COLOR lightyellow]').replace('[COLOR lime]lime[/COLOR]','[COLOR lime]').replace('[COLOR limegreen]limegreen[/COLOR]','[COLOR limegreen]').replace('[COLOR linen]linen[/COLOR]','[COLOR linen]').replace('[COLOR magenta]magenta[/COLOR]','[COLOR magenta]').replace('[COLOR maroon]maroon[/COLOR]','[COLOR maroon]').replace('[COLOR mediumaquamarine]mediumaquamarine[/COLOR]','[COLOR mediumaquamarine]').replace('[COLOR mediumblue]mediumblue[/COLOR]','[COLOR mediumblue]').replace('[COLOR mediumorchid]mediumorchid[/COLOR]','[COLOR mediumorchid]').replace('[COLOR mediumpurple]mediumpurple[/COLOR]','[COLOR mediumpurple]').replace('[COLOR mediumseagreen]mediumseagreen[/COLOR]','[COLOR mediumseagreen]').replace('[COLOR mediumslateblue]mediumslateblue[/COLOR]','[COLOR mediumslateblue]').replace('[COLOR mediumspringgreen]mediumspringgreen[/COLOR]','[COLOR mediumspringgreen]').replace('[COLOR mediumturquoise]mediumturquoise[/COLOR]','[COLOR mediumturquoise]').replace('[COLOR mediumvioletred]mediumvioletred[/COLOR]','[COLOR mediumvioletred]').replace('[COLOR midnightblue]midnightblue[/COLOR]','[COLOR midnightblue]').replace('[COLOR mintcream]mintcream[/COLOR]','[COLOR mintcream]').replace('[COLOR mistyrose]mistyrose[/COLOR]','[COLOR mistyrose]').replace('[COLOR moccasin]moccasin[/COLOR]','[COLOR moccasin]').replace('[COLOR navajowhite]navajowhite[/COLOR]','[COLOR navajowhite]').replace('[COLOR navy]navy[/COLOR]','[COLOR navy]').replace('[COLOR none]none[/COLOR]','[COLOR none]').replace('[COLOR oldlace]oldlace[/COLOR]','[COLOR oldlace]').replace('[COLOR olive]olive[/COLOR]','[COLOR olive]').replace('[COLOR olivedrab]olivedrab[/COLOR]','[COLOR olivedrab]').replace('[COLOR orange]orange[/COLOR]','[COLOR orange]').replace('[COLOR orangered]orangered[/COLOR]','[COLOR orangered]').replace('[COLOR orchid]orchid[/COLOR]','[COLOR orchid]').replace('[COLOR palegoldenrod]palegoldenrod[/COLOR]','[COLOR palegoldenrod]').replace('[COLOR palegreen]palegreen[/COLOR]','[COLOR palegreen]').replace('[COLOR paleturquoise]paleturquoise[/COLOR]','[COLOR paleturquoise]').replace('[COLOR palevioletred]palevioletred[/COLOR]','[COLOR palevioletred]').replace('[COLOR papayawhip]papayawhip[/COLOR]','[COLOR papayawhip]').replace('[COLOR peachpuff]peachpuff[/COLOR]','[COLOR peachpuff]').replace('[COLOR peru]peru[/COLOR]','[COLOR peru]').replace('[COLOR pink]pink[/COLOR]','[COLOR pink]').replace('[COLOR plum]plum[/COLOR]','[COLOR plum]').replace('[COLOR powderblue]powderblue[/COLOR]','[COLOR powderblue]').replace('[COLOR purple]purple[/COLOR]','[COLOR purple]').replace('[COLOR red]red[/COLOR]','[COLOR red]').replace('[COLOR rosybrown]rosybrown[/COLOR]','[COLOR rosybrown]').replace('[COLOR royalblue]royalblue[/COLOR]','[COLOR royalblue]').replace('[COLOR saddlebrown]saddlebrown[/COLOR]','[COLOR saddlebrown]').replace('[COLOR salmon]salmon[/COLOR]','[COLOR salmon]').replace('[COLOR sandybrown]sandybrown[/COLOR]','[COLOR sandybrown]').replace('[COLOR seagreen]seagreen[/COLOR]','[COLOR seagreen]').replace('[COLOR seashell]seashell[/COLOR]','[COLOR seashell]').replace('[COLOR sienna]sienna[/COLOR]','[COLOR sienna]').replace('[COLOR silver]silver[/COLOR]','[COLOR silver]').replace('[COLOR skyblue]skyblue[/COLOR]','[COLOR skyblue]').replace('[COLOR slateblue]slateblue[/COLOR]','[COLOR slateblue]').replace('[COLOR slategray]slategray[/COLOR]','[COLOR slategray]').replace('[COLOR slategrey]slategrey[/COLOR]','[COLOR slategrey]').replace('[COLOR snow]snow[/COLOR]','[COLOR snow]').replace('[COLOR springgreen]springgreen[/COLOR]','[COLOR springgreen]').replace('[COLOR steelblue]steelblue[/COLOR]','[COLOR steelblue]').replace('[COLOR tan]tan[/COLOR]','[COLOR tan]').replace('[COLOR teal]teal[/COLOR]','[COLOR teal]').replace('[COLOR thistle]thistle[/COLOR]','[COLOR thistle]').replace('[COLOR transparent]transparent[/COLOR]','[COLOR transparent]').replace('[COLOR turquoise]turquoise[/COLOR]','[COLOR turquoise]').replace('[COLOR violet]violet[/COLOR]','[COLOR violet]').replace('[COLOR wheat]wheat[/COLOR]','[COLOR wheat]').replace('[COLOR white]white[/COLOR]','[COLOR white]').replace('[COLOR whitesmoke]whitesmoke[/COLOR]','[COLOR whitesmoke]').replace('[COLOR yellow]yellow[/COLOR]','[COLOR yellow]').replace('[COLOR yellowgreen]yellowgreen[/COLOR]','[COLOR yellowgreen]')</expres>
<page></page>
</regex>
<regex>
<name>colores2</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
 import xbmc, xbmcaddon
 addon = xbmcaddon.Addon('plugin.video.cristalazul')
 return addon.getSetting('ColoreandoSecundario')
]]></expres>
<page></page>
</regex>
<regex>
<name>coloreando2</name>
<expres>$pyFunction:('$doregex[colores2]').replace('Predeterminado','').replace('[COLOR lightskyblue]lightskyblue[/COLOR]','[COLOR lightskyblue]').replace('[COLOR aliceblue]aliceblue[/COLOR]','[COLOR aliceblue]').replace('[COLOR antiquewhite]antiquewhite[/COLOR]','[COLOR antiquewhite]').replace('[COLOR aqua]aqua[/COLOR]','[COLOR aqua]').replace('[COLOR aquamarine]aquamarine[/COLOR]','[COLOR aquamarine]').replace('[COLOR azure]azure[/COLOR]','[COLOR azure]').replace('[COLOR beige]beige[/COLOR]','[COLOR beige]').replace('[COLOR bisque]bisque[/COLOR]','[COLOR bisque]').replace('[COLOR black]black[/COLOR]','[COLOR black]').replace('[COLOR blanchedalmond]blanchedalmond[/COLOR]','[COLOR blanchedalmond]').replace('[COLOR blue]blue[/COLOR]','[COLOR blue]').replace('[COLOR blueviolet]blueviolet[/COLOR]','[COLOR blueviolet]').replace('[COLOR brown]brown[/COLOR]','[COLOR brown]').replace('[COLOR burlywood]burlywood[/COLOR]','[COLOR burlywood]').replace('[COLOR cadetblue]cadetblue[/COLOR]','[COLOR cadetblue]').replace('[COLOR chartreuse]chartreuse[/COLOR]','[COLOR chartreuse]').replace('[COLOR chocolate]chocolate[/COLOR]','[COLOR chocolate]').replace('[COLOR coral]coral[/COLOR]','[COLOR coral]').replace('[COLOR cornflowerblue]cornflowerblue[/COLOR]','[COLOR cornflowerblue]').replace('[COLOR crimson]crimson[/COLOR]','[COLOR crimson]').replace('[COLOR cyan]cyan[/COLOR]','[COLOR cyan]').replace('[COLOR darkblue]darkblue[/COLOR]','[COLOR darkblue]').replace('[COLOR darkcyan]darkcyan[/COLOR]','[COLOR darkcyan]').replace('[COLOR darkgoldenrod]darkgoldenrod[/COLOR]','[COLOR darkgoldenrod]').replace('[COLOR darkgray]darkgray[/COLOR]','[COLOR darkgray]').replace('[COLOR darkgreen]darkgreen[/COLOR]','[COLOR darkgreen]').replace('[COLOR darkgrey]darkgrey[/COLOR]','[COLOR darkgrey]').replace('[COLOR darkkhaki]darkkhaki[/COLOR]','[COLOR darkkhaki]').replace('[COLOR darkmagenta]darkmagenta[/COLOR]','[COLOR darkmagenta]').replace('[COLOR darkolivegreen]darkolivegreen[/COLOR]','[COLOR darkolivegreen]').replace('[COLOR darkorange]darkorange[/COLOR]','[COLOR darkorange]').replace('[COLOR darkorchid]darkorchid[/COLOR]','[COLOR darkorchid]').replace('[COLOR darkred]darkred[/COLOR]','[COLOR darkred]').replace('[COLOR darksalmon]darksalmon[/COLOR]','[COLOR darksalmon]').replace('[COLOR darkseagreen]darkseagreen[/COLOR]','[COLOR darkseagreen]').replace('[COLOR darkslateblue]darkslateblue[/COLOR]','[COLOR darkslateblue]').replace('[COLOR darkslategray]darkslategray[/COLOR]','[COLOR darkslategray]').replace('[COLOR darkslategrey]darkslategrey[/COLOR]','[COLOR darkslategrey]').replace('[COLOR darkturquoise]darkturquoise[/COLOR]','[COLOR darkturquoise]').replace('[COLOR deeppink]deeppink[/COLOR]','[COLOR deeppink]').replace('[COLOR deepskyblue]deepskyblue[/COLOR]','[COLOR deepskyblue]').replace('[COLOR dimgray]dimgray[/COLOR]','[COLOR dimgray]').replace('[COLOR dimgrey]dimgrey[/COLOR]','[COLOR dimgrey]').replace('[COLOR dodgerblue]dodgerblue[/COLOR]','[COLOR dodgerblue]').replace('[COLOR firebrick]firebrick[/COLOR]','[COLOR firebrick]').replace('[COLOR floralwhite]floralwhite[/COLOR]','[COLOR floralwhite]').replace('[COLOR forestgreen]forestgreen[/COLOR]','[COLOR forestgreen]').replace('[COLOR fuchsia]fuchsia[/COLOR]','[COLOR fuchsia]').replace('[COLOR gainsboro]gainsboro[/COLOR]','[COLOR gainsboro]').replace('[COLOR ghostwhite]ghostwhite[/COLOR]','[COLOR ghostwhite]').replace('[COLOR gold]gold[/COLOR]','[COLOR gold]').replace('[COLOR goldenrod]goldenrod[/COLOR]','[COLOR goldenrod]').replace('[COLOR gray]gray[/COLOR]','[COLOR gray]').replace('[COLOR green]green[/COLOR]','[COLOR green]').replace('[COLOR greenyellow]greenyellow[/COLOR]','[COLOR greenyellow]').replace('[COLOR grey]grey[/COLOR]','[COLOR grey]').replace('[COLOR honeydew]honeydew[/COLOR]','[COLOR honeydew]').replace('[COLOR hotpink]hotpink[/COLOR]','[COLOR hotpink]').replace('[COLOR indianred]indianred[/COLOR]','[COLOR indianred]').replace('[COLOR indigo]indigo[/COLOR]','[COLOR indigo]').replace('[COLOR ivory]ivory[/COLOR]','[COLOR ivory]').replace('[COLOR khaki]khaki[/COLOR]','[COLOR khaki]').replace('[COLOR lavender]lavender[/COLOR]','[COLOR lavender]').replace('[COLOR lavenderblush]lavenderblush[/COLOR]','[COLOR lavenderblush]').replace('[COLOR lawngreen]lawngreen[/COLOR]','[COLOR lawngreen]').replace('[COLOR lemonchiffon]lemonchiffon[/COLOR]','[COLOR lemonchiffon]').replace('[COLOR lightblue]lightblue[/COLOR]','[COLOR lightblue]').replace('[COLOR lightcoral]lightcoral[/COLOR]','[COLOR lightcoral]').replace('[COLOR lightcyan]lightcyan[/COLOR]','[COLOR lightcyan]').replace('[COLOR lightgoldenrodyellow]lightgoldenrodyellow[/COLOR]','[COLOR lightgoldenrodyellow]').replace('[COLOR lightgray]lightgray[/COLOR]','[COLOR lightgray]').replace('[COLOR lightgreen]lightgreen[/COLOR]','[COLOR lightgreen]').replace('[COLOR lightgrey]lightgrey[/COLOR]','[COLOR lightgrey]').replace('[COLOR lightpink]lightpink[/COLOR]','[COLOR lightpink]').replace('[COLOR lightsalmon]lightsalmon[/COLOR]','[COLOR lightsalmon]').replace('[COLOR lightseagreen]lightseagreen[/COLOR]','[COLOR lightseagreen]').replace('[COLOR lightslategray]lightslategray[/COLOR]','[COLOR lightslategray]').replace('[COLOR lightslategrey]lightslategrey[/COLOR]','[COLOR lightslategrey]').replace('[COLOR lightsteelblue]lightsteelblue[/COLOR]','[COLOR lightsteelblue]').replace('[COLOR lightyellow]lightyellow[/COLOR]','[COLOR lightyellow]').replace('[COLOR lime]lime[/COLOR]','[COLOR lime]').replace('[COLOR limegreen]limegreen[/COLOR]','[COLOR limegreen]').replace('[COLOR linen]linen[/COLOR]','[COLOR linen]').replace('[COLOR magenta]magenta[/COLOR]','[COLOR magenta]').replace('[COLOR maroon]maroon[/COLOR]','[COLOR maroon]').replace('[COLOR mediumaquamarine]mediumaquamarine[/COLOR]','[COLOR mediumaquamarine]').replace('[COLOR mediumblue]mediumblue[/COLOR]','[COLOR mediumblue]').replace('[COLOR mediumorchid]mediumorchid[/COLOR]','[COLOR mediumorchid]').replace('[COLOR mediumpurple]mediumpurple[/COLOR]','[COLOR mediumpurple]').replace('[COLOR mediumseagreen]mediumseagreen[/COLOR]','[COLOR mediumseagreen]').replace('[COLOR mediumslateblue]mediumslateblue[/COLOR]','[COLOR mediumslateblue]').replace('[COLOR mediumspringgreen]mediumspringgreen[/COLOR]','[COLOR mediumspringgreen]').replace('[COLOR mediumturquoise]mediumturquoise[/COLOR]','[COLOR mediumturquoise]').replace('[COLOR mediumvioletred]mediumvioletred[/COLOR]','[COLOR mediumvioletred]').replace('[COLOR midnightblue]midnightblue[/COLOR]','[COLOR midnightblue]').replace('[COLOR mintcream]mintcream[/COLOR]','[COLOR mintcream]').replace('[COLOR mistyrose]mistyrose[/COLOR]','[COLOR mistyrose]').replace('[COLOR moccasin]moccasin[/COLOR]','[COLOR moccasin]').replace('[COLOR navajowhite]navajowhite[/COLOR]','[COLOR navajowhite]').replace('[COLOR navy]navy[/COLOR]','[COLOR navy]').replace('[COLOR none]none[/COLOR]','[COLOR none]').replace('[COLOR oldlace]oldlace[/COLOR]','[COLOR oldlace]').replace('[COLOR olive]olive[/COLOR]','[COLOR olive]').replace('[COLOR olivedrab]olivedrab[/COLOR]','[COLOR olivedrab]').replace('[COLOR orange]orange[/COLOR]','[COLOR orange]').replace('[COLOR orangered]orangered[/COLOR]','[COLOR orangered]').replace('[COLOR orchid]orchid[/COLOR]','[COLOR orchid]').replace('[COLOR palegoldenrod]palegoldenrod[/COLOR]','[COLOR palegoldenrod]').replace('[COLOR palegreen]palegreen[/COLOR]','[COLOR palegreen]').replace('[COLOR paleturquoise]paleturquoise[/COLOR]','[COLOR paleturquoise]').replace('[COLOR palevioletred]palevioletred[/COLOR]','[COLOR palevioletred]').replace('[COLOR papayawhip]papayawhip[/COLOR]','[COLOR papayawhip]').replace('[COLOR peachpuff]peachpuff[/COLOR]','[COLOR peachpuff]').replace('[COLOR peru]peru[/COLOR]','[COLOR peru]').replace('[COLOR pink]pink[/COLOR]','[COLOR pink]').replace('[COLOR plum]plum[/COLOR]','[COLOR plum]').replace('[COLOR powderblue]powderblue[/COLOR]','[COLOR powderblue]').replace('[COLOR purple]purple[/COLOR]','[COLOR purple]').replace('[COLOR red]red[/COLOR]','[COLOR red]').replace('[COLOR rosybrown]rosybrown[/COLOR]','[COLOR rosybrown]').replace('[COLOR royalblue]royalblue[/COLOR]','[COLOR royalblue]').replace('[COLOR saddlebrown]saddlebrown[/COLOR]','[COLOR saddlebrown]').replace('[COLOR salmon]salmon[/COLOR]','[COLOR salmon]').replace('[COLOR sandybrown]sandybrown[/COLOR]','[COLOR sandybrown]').replace('[COLOR seagreen]seagreen[/COLOR]','[COLOR seagreen]').replace('[COLOR seashell]seashell[/COLOR]','[COLOR seashell]').replace('[COLOR sienna]sienna[/COLOR]','[COLOR sienna]').replace('[COLOR silver]silver[/COLOR]','[COLOR silver]').replace('[COLOR skyblue]skyblue[/COLOR]','[COLOR skyblue]').replace('[COLOR slateblue]slateblue[/COLOR]','[COLOR slateblue]').replace('[COLOR slategray]slategray[/COLOR]','[COLOR slategray]').replace('[COLOR slategrey]slategrey[/COLOR]','[COLOR slategrey]').replace('[COLOR snow]snow[/COLOR]','[COLOR snow]').replace('[COLOR springgreen]springgreen[/COLOR]','[COLOR springgreen]').replace('[COLOR steelblue]steelblue[/COLOR]','[COLOR steelblue]').replace('[COLOR tan]tan[/COLOR]','[COLOR tan]').replace('[COLOR teal]teal[/COLOR]','[COLOR teal]').replace('[COLOR thistle]thistle[/COLOR]','[COLOR thistle]').replace('[COLOR transparent]transparent[/COLOR]','[COLOR transparent]').replace('[COLOR turquoise]turquoise[/COLOR]','[COLOR turquoise]').replace('[COLOR violet]violet[/COLOR]','[COLOR violet]').replace('[COLOR wheat]wheat[/COLOR]','[COLOR wheat]').replace('[COLOR white]white[/COLOR]','[COLOR white]').replace('[COLOR whitesmoke]whitesmoke[/COLOR]','[COLOR whitesmoke]').replace('[COLOR yellow]yellow[/COLOR]','[COLOR yellow]').replace('[COLOR yellowgreen]yellowgreen[/COLOR]','[COLOR yellowgreen]')</expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/PfZc5UD.png</thumbnail>
<fanart>https://i.imgur.com/932XIJt.jpg</fanart>
</item>



<!--

<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal Azul [COLOR white]FOOTERS TOTAL[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param2][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import requests,re
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [makelist2.param4][/COLOR]</title>
<link>$doregex[plugin]$doregex[makelist3]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
categoria = '[makelist.param1]'
import requests,re,urllib2,xbmc,xbmcgui
from datetime import datetime, timedelta
import time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist3</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param5]'
import requests,re,xbmc,xbmcgui,urllib
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[makelist3]'
import re,requests,xbmc
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFnQUFBRUFBQUFCekVBQUFBR1VBQUdRQUFJUUJBRm9CQUdRQkFGTW9BZ0FBQUdNRUFBQUFCQUFBQUFJQUFBQkRBQUFBY3hnQUFBQmtBUUI4QXdCckJnQnlFQUJrQWdCVFpBTUFVMlFBQUZNb0JBQUFBRTUwQkFBQUFHMHpkVGh6SHdBQUFIQnNkV2RwYmpvdkwzQnNkV2RwYmk1MmFXUmxieTVtTkcxVVpYTjBaWEowQUFBQUFDZ0FBQUFBS0FRQUFBQjBDUUFBQUhCaFoyVmZaR0YwWVhRS0FBQUFRMjl2YTJsbFgwcGhjblFCQUFBQWJYUURBQUFBZFhKc0tBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3dZQUFBQUFBZ3dCQkFKT0tBSUFBQUJTQlFBQUFGSUdBQUFBS0FBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwQ0FBQUFEeHRiMlIxYkdVK0FRQUFBSE1BQUFBQSIpKSk="))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/z9XBFGC.png</thumbnail>
<fanart>https://i.imgur.com/sv5yRUU.jpg</fanart>
</item>


















<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal Azul [COLOR white]TODO FOOTERS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param2][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import requests,re
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [makelist2.param4][/COLOR]</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;iconImage=https://i.imgur.com/z9XBFGC.png&amp;name=[COLOR aqua]CRISTAL AZUL[/COLOR]&amp;url=$doregex[makelist3]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
categoria = '[makelist.param1]'
import requests,re,urllib2
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist3</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param5]'
import requests,re,xbmc,xbmcgui,urllib
from datetime import datetime, timedelta
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGtSc0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RKT1IxVXlXa1JTYlUxNlVYcFBSRmsxVGxSTmVrNVVWVFJPZWswd1RXcE5OVTVVUlhwUFJGRXlUWHByTUU1VVVteE5la1V5V21wak5FNTZUVEJPUkZKcVRtMU5NRmxVVFhsT1JFMHpUVVJaTTA1cVZUSk9lbEV4VG5wQk1VMTZZM2RPUkZrd1dsUk5kMDVIU1RKTmFsazBUbTFaTUU5VVZUUk9SRmt5VG1wUk1rNUVWVE5QVkZFeVRsUkZNazU2WTNwT2JVMHhUbFJhYUU1cVRURk9WRkUxVG5wWk1scFVUWGhPYWsxNlRrUk5NRTU2WnpOTmVtTjVUbnBKZWs1NlZUVk9iVVV3VFhwVk5VNXFaM3BOZWxwcVRrUnJNRmxxVVhwT1ZFVjZUbXBOZWs1cVRYcE5WR013VGtkWk1VNTZXWGxPZWxVelQwUk5NazU2U1hsWmFrMHlUbFJyZVZwcVRUVk9lbEV5VFdwa2FFMTZhM3BOZWxWM1RXMVplazlFVFRCTmVtTXhUMFJOTTAxdFdUSk5hbGt3VFcxWmVWbHFXbXRPUjFreFRucEthVTVxU1hsYWFrcHRUWHByTTA1cVl6Qk9lbGt6VDBSTk1rNTZSWGxaYWsxNlRsUlJlVnBxU21sT2FsVXdXbFJOZWsxNmF6Sk9hbGt5VFhwck0wNUVUVFZPUkdONlQxUktiVTVxVFRCT1ZGVXdUWHBWZWs5VVRUVk5lbXQ1V21wamVFMTZTWHBPZWsxNlRXMUpNbHBVVFhwTmJWbDVXV3BWZDA1NlRUSk9ha3B0VFcxWk1FOUVVVFJPYlZWNlRtcGplRTVxU1RGUFJGcHFUWHBaTTAxcVl6Uk9WR015VG1wWk5FNTZTWHBQUkVwdFRrZEpNRTVFVFRST2FsRXpUbFJaTWs1RVVUTk5lbU4zVG5wSmVrMVVXVE5PYlUweFRrUk5lVTVVUVROT1ZHTTBUbTFWTVU5RVRUVk9lbFV6VFVSTmVFMXRTVEpaZW1Nd1RtcFplazVFV21sT1JGa3lUbFJrYUU1NldUTk5lbGswVG5wck1FOVVTbTFPYlZrelQwUktiVTVxV1RKTmFtTjRUbFJuZWs1RVRUTk5lbEV4VFVSU2FrMTZSVEpOVkdNMVRsUk5NVTU2VFhwTmVtc3lUa1JLYlU1Nlp6RlBSR015VFhwSk1GbHFUVEZOZW1NeVdYcE5lRTU2UlRKT2FsRTBUa2RaTTA5RVRUSk9lazB5VGtSVmQwNXRWVEpPYWtwcFRYcEpNazlVWXpOTmVtTXhXVlJOTWs1SFJYbFphbHBxVGtkVk1VOVVXVFZPVkUxNlQxUk5NRTVVWjNsYWFsa3dUbTFOTWs1VVl6Rk9SRTB6VGtSTk0wNVVWVEZOZWxwcFRucEplazU2VFhkT2VsRXdXWHBOTlUxNlRUQk9lbU15VFhwTk1VOUVZelZOZW1jd1dtcFJORTV0VlhwTmFrMHdUbnBKTVU1RVkzaE9SRmt6VFZSWk1rNVVhM3BOVkZFeVRtMU5NVTlVVlRWT1YwVXpUMVJqTkUxNldUQmFhbEpzVG5wVk1sbHFWVEJPYlUweFRucE5NRTVxUlhwT1ZGbDRUWHBOTVU1Nll6Qk5lbU15V1dwVmVVNVVaek5PYWxGNlRXMVpNazVFV1ROTmVsRXlUbXBaTWs1Nlp6SmFhbU14VG1wWmVrNTZVbWxOZWxFelRucGpkMDVVVVRGUFZFMTZUbTFWTUUxNlRUVk9hazB6V1ZSTk5FNXFWWHBPVkZwdFRYcFJNVmxVVFRKT1IxVXpUbXBTYlU1cVVYcFBSRmt5VGtSbmVWcHFUVFZPYlVVeVdXcE5OVTE2WXpKYVJGbDRUWHBOZWs1cVZYbE9WRWt5VFdwWmVVNUhXVE5PVkZKc1RYcGpNMDVVVlRKT1JHTjZUa1JqTkU1VVl6SmFWRmswVG0xTk1scFVZelZOYlZreFRucE5lRTVVVFhwT1ZGcHFUbGRGZWs5VVZUTk9lbGt5VGxSTk1VNHlSVEpOZWtwcFRrUm5NRmxxV1hwTmVrMHpUbnBqTWs1SFdYcE9SRTE0VG0xVk0wOUVWVEZPYlZWNlRYcFpOVTE2UlRCYVZHTjNUbXBGZWs1NldURk5lbEV3V1hwUk1FNVVhekpPVkdNMFRucEZNMWxVVVROT2FtdDVXV3BqTkU1cVkzcE9hbEY1VGtkUmVWbHFWVFJPVkVWNlQxUmthRTF0V1RKYWFsVjRUWHBuTUZscVRUSk9SMUY2VGtSVk5VNXFXWHBOVkZVd1RtcEZNVTE2VFRCT2VrRXlUa1JOTUU1VVkzcE9WRlV3VG1wak1scFVXVEZPVkVFd1dtcFZkMDVxVVRKWmVsbDRUa1JqTTAxcVVUUk9WRUV3V2xSVmVFNVVVVEpPZWxreVRYcGpNMDlFVFhoTmVsVjZUbnBOTTA1RVVURk5SRkV3VG1wSk0wMXFVWGxPZWxrelRXcGplazVVWjNwUFZFMHhUbGRGTWxsNlNtbE5lbEV5VDBSVmQwMTZZekJPUkdNMVRucFpNazVFV21wTmVsVXdUWHBOZWs1cVdUQmFhbU41VG1wVmVrNXFXVEpPUkZrelRVUlZlRTVxYTNwT2VrMDBUakpGTTA1cVVURk5lbFV5VG1wak1FNXFWVEZPZW1ONVRtcG5NVTVFV210T2FtTXpXVlJqTTAxdFNUQmFWRkUwVFhwUk0wMVVaR2hPZWtFelRXcE5NazVVUVRCYWFsVXhUbXBSTWs1cVkzcE9hbEY2VG1wYWEwNUhTWGxaYWxGNlRtcEpNMDVxWXpKT2VtTXlUMVJSTkU1VVZUQmFWRmt5VGtSSmVWcHFZelJPZWxVeFRrUk5NMDVxWnpKTmFrcHBUbTFaTTA5RVdUVk9lbXQ2VFhwYWJVNTZTWHBOVkVwcFRYcFplazFVVW0xTmJWa3dXV3BOZUU1NlJUQlpla3B0VGtkUmVrMXFWVEJPVkVVd1QwUlZORTVVVFRCWmFsVXdUWHBuTWxsVVdYbE9WR3Q2VGxSTk5FNXRWWGxhYW1ONFRYcFplazVVV1RKTmJVa3lXVlJOTWs1SFVUQmFSR00xVG1wSk1GcHFXVEJPYW1NeVRtcE5OVTVFWnpKTlZGRjZUVzFaTWxsVVVtMU9lazB5V1ZSS2JVNXFUVEpQUkZVeVRYcGpNMDVxVVRWT1ZGa3dXVlJaTVU1cVdURlBWRkpvVG5wTmVWbHFZekJPZWxrd1dtcGplazE2WXpCTlZGa3lUWHByTWsxVVl6Uk9SMVV6VDFSYWEwNUhUVEJQVkdNeVRqSkZNRTFVV1hwT2FsRXhUbFJaTWsxdFNURk9lbFYzVG0xWk1VNXFVVFJPZW1zd1QxUk5lRTE2YXpKWmVrMDFUa1JOTUU5RVVtdE9lbGt3VDFSVk1FMTZZekJhVkZwcVRsUlJNRmw2WTNoT2VtY3hUbFJTYVU1VVp6Rk5SRlY1VGtSWk0wOUVXVEpPYlZrelQwUlZOVTVVUlhwUFJHTjZUa1JSTWs1cVkzcE9iVWt3VFhwVk1rNXRWWGxaYWxGNFRsUmpNazVVVlRWTmVrMTZUV3BaTWs1cVdUTk5lbEpxVFhwVk1VMTZXbTFPUjFWNVdXcGplazE2V1RCTmFrcHBUWHBOTVU1NlVUTk5iVmt5V2tSYWJFNXFTVE5QVkZKc1RsUmpNVTVFVlhkT2VrVXhUbnBLYlUxNlVUQk5WRmt4VGxSUk1scHFVVEJOZWxFeVRXcFJOVTE2WXpKTmVsa3hUWHBCZWs5RVRYaE9WRUV4VGtSTmVrNTZhekpPZWsxNlRYcGpNRTVxV1RCT2FtTXhUMFJqZVU1RVl6Rk5SRTB6VGtkWk1GcEVVWGhPZWxsNlRWUmFhRTVFU1RKTmFtTTBUbFJSZWs5RVVUQk9WRUV3V21wWk1VNVVhekphUkdNd1RYcFJNMWxVV21oT1ZGa3pUMVJLYlU1dFJUQmFhbU16VG0xRmVrNVVXWGhOZWtreFQwUlNhazVxWXpCWlZFcHRUbFJyTUU1RVkzbE9WRVV3VDFSS2FVNXFSVEpPUkZwb1RYcFpNRmw2WXpKTmVsVjZUbnBTYVU1RVdUTk9WR013VGtSTk1sbFVZM2RPUkd0NlRXcGpkMDU2WjNwT1JGa3pUbXBqZWs1NlVUVk5la0Y2VG5wVk1rNTZZek5OUkUwelRrUkpNVTVxU21sT2FtY3pUV3BhYTA1Nlp6Rk9SRTAwVFhwVk1GbDZZekpPVkZrd1QwUmpNazU2VFRCYVJGcHNUWHBaTWs1cVdUQk9SRVY2VFhwTmVFMTZSVEZOUkZwclRYcEJNMDVFVlRKT2FrMHlXbFJLYlU1NlJUQk5lazE2VGxSSk1VNUVUWHBPUkUxNVdtcE5lRTVxYXpCWmVtTXlUbXBqTWxwRVRUVk5lbU15VFZSYWFVNXFXWHBQUkZFMVRrZFpNbGxxVVRWT1IxVjVXV3BaTkU1NldUQk9WR00wVG1wWk1FNVVXbXhPVkdONlRucGpORTVVYTNsWmFrcHRUa1JyZWs1VVdtaE5iVWt4V1ZSak5VMTZTVEpOZWxsNVRtMU5NVTFFVFRKT1ZFRXpUVVJSTVU1cVdYcFBSRkV4VGxScmVrNTZZM2RPVkVGNlRtcGthRTE2V1RCTmFsVjNUWHBqTWxwRVZUUk9iVVV4VFZSVmVrMTZhM3BQUkdNeVRYcG5NVTE2VFRST2VrVjVXV3BaTVU1cWF6SlBWRmsxVG0xVk1scFVVVEZOYlZrelRWUlJlazVVWjNwUFJGRjRUbnBWTVUxRVdtdE9WRlV6VFhwUk5VNUVTWGxhYWswMVRtcFZNVTFVVlRGTmVtc3lUbFJOTTA1RVNUSmFWRlY2VG1wSk0wNUVWWGhOZWsxNlRVUktiVTE2V1RGTmVrMHhUWHBSTWs5RVVUQk9lbGt5V21wUk1FMTZZekJhUkdOM1RucG5NMDlVV21wT2JVVXdXV3BLYlU1cVp6Rk5hazEzVG0xSmVrOUVVbTFPYWxsNlQwUlpOVTF0V1hsYWFscHRUa2RKZWsxRVZYbE9iVVV6VDBSYWJFNVVaekpPZWsweFRXMUpNazVFVW1oT1JGbDZUbnBaTTA1RVozbGFhbHBvVGxSak1sbDZUVFZPYW1zeVdsUlpORTU2UVROWlZGbDRUbXBqTUU1cVNtMU9WRVV4VFVSTmVrNTZWVE5QUkZwc1RYcEJNMDE2U20xT2JWa3hUa1JLYlU1RVNUTk5hbGswVGtSck1FNUVZM3BPUkZWNVdXcE5lRTVVUlRKWmVtUm9Ua1JOTUZwVVRYaE9Na1V3VGxSYWEwNVhSVE5OZWxsNlRsUnJNVTVxWXpKTmVsRXdUMVJOTkU1cVVUSlBWRmswVG1wak0wOUVZelZPUkVVeldWUk5ORTVxWTNwT2VtTTBUa1JKZWsxNldUSk9hazB3VDBSTmVrMTZVVEpPVkZreVRsUkZNVTVVWXpWT2FrbDZUV3BaTWs1RVNYbGFhbGsxVGtSTk1rNXFXVFZPVkVVeFQxUlpNVTE2U1RGT1JGcHFUbnBKTWxsVVVYaE9hazE2VDBSVmVrNTZXWHBPYWxGNFRrUkplazVFV1RST1ZFRjZUV3BaTVU1dFdUQk5la3B0VG1wak1VMVVXWHBPUkZreFRVUkthVTVIUlROWlZGSnRUbXBOTWxwcVl6Tk5iVmt5VFhwTk1FMTZRVE5QUkdNMFRtcG5NRnBVV214TmVtTXdUMVJWTkU1NldUSk9SRmt4VGtkSmVrMTZXVFZPUjBreVdYcFJlazVxVFRCUFZGRTFUWHBaTUZsNlRUUk9hbGt5VDFSTmVFMTZWVEZPUkZVMFRucEJNazVFU21sT1ZHTXdUbnBSZVUxNmF6Qk9SR041VFhwak1FMVVVbXBPYWswd1RsUmplazVIVFROT2FscHRUbXBuTWs1cVZUVk5lazB6VG5wU2JVNTZWVEZPZWxKcFRucFZNbGxVU20xT2JWRjZUbFJOTlU1cVp6SmFWRmt5VG5wTk1VOVVUVEpPZWxreFRXcFNiRTE2WnpCWmVtTTFUbnByTUZwRVdURk9lbU14VFZSTk1rMTZRVEJPZWtwdFRsUm5NRTU2U21sT1ZGRXdUMFJTYlU1VVp6TlpWRkV4VG0xUk1GcHFWVEJOYlZsNlRWUlNiRTE2U1RCWlZGbDZUbXBGTWs1VVVUVk9hbGw2VDFSYWJVNXRUWHBPVkZVd1RtcEpNMDlVVVRST2VsVXdUMVJSZVU1cVZURlBSRkUxVFhwRmVrMVVUVEJPYWtVeVRsUmpNVTU2UVROT1JHTXpUbnBSZWs1RVRYcE9SMFV6VDBSVmVrNTZWVEpaVkUxNlRrUlpNbHBVVVRCT1ZFVXdUMVJSTkUxNll6SmFSR013VGtkUk0wNUVVbWhPUkVVeVRYcFpNRTVFVlROT1JFcHRUbnBqTUU1VVRYcE9hbWN6VDFSUk5VNTZaekpOYWxGNFRucFpNazE2VlROT1JGa3dUbXBTYWs1SFNUQk5WRTAwVFhwck1FNTZTbTFPYW1NeFdWUlZNVTU2WTNwUFJGVjVUa1JKTTA5RVVYaE5lazE2VGtSa2FFNXFVVEpaVkZFMFRtMVpNMDVFWTNoT2Fra3lUa1JaTkU0eVJUTlBWRmt3VG1wck0wOUVZek5PUkdjeFRVUlZNazE2WnpGTmFsSnFUbnByTUUxVVRYcE9hazB5VGtSWmVVNXRVWGxhYWxGNVRsUkJNRTlFWTNwT1JGVXdXWHBaTUU1cVl6Qk9WRTE1VFhwQk1GbFVUVE5PYlUweFRrUmpNMDVIVFhwUFJGcHRUa1JaTVU5RVRUUk5iVWt3V1ZSYWFrMTZWVEpaYWxrMVRucEpNMDFFVFRWT2FtY3lUMFJOZDA1RVkzbGFhbFYzVG1wVk1rNVVXVFJPVkdjd1RrUlJORTV0VlRCT2VsazBUa2RWZVZwcVVUSk5iVWt3V1ZSak1rNXFSVEphYWxrMFRrUm5lazFxVVROTmJWa3dXVlJaTVU1SFdUTk9lbFpvVFhwUk0wOUVZM2ROZWxsNlRVUlZkMDVFUlRCUFJHTTFUa1JuTVUxNlZYcE9hbFV5VFZSYWFVMTZUWHBPZW1OM1RucFJNVTlVWXpWT2VtY3lUMVJhYWsxNlRYbGFhbFY0VGtSUk0wNUVXbWhPYlZFd1drUmplVTVxU1RCUFJGcHRUa2RaZWs5VVZYZE9SRVY2VG5wa2FFNVVRVE5aVkZFd1RucFpNVmxVWXpWT1JHY3pUWHBaZUUxNlZYcFBWRkV3VGxSbmVrOVVZelZPTWtWNlQwUlpNMDVFVlhsYWFrMTNUbXBSTTA1RVkzZE9SMVY2VDBSWk5FNXFVVEpaVkZFMVRYcFpNRTlVU21sT1ZHc3dUV3BrYUU1cWF6TlpWRTB4VGtSSk1rOVVZM3BPVkdNeVRrUlJlazVxV1hsWmFsRXlUakpGZWs5RVdtaE5lazB3VG5wUmVFMXRXVEZPYWxGNlRtMVZNazFxV1RWTmVsRXpUMFJaTlU1SFRUSk9la3BwVGtSVk1scEVUVFJPVkdjeVdXcGFiRTF0U1RCTlZGcHJUWHBKZWs1VVl6Uk9la0V3V1ZSTk1FNTZaekJaZWtwdFRYcGplazFxV20xT1JGa3lUbXBaTlU1NlFUSk9lbFYzVFhwck1FMVVUVE5OYlVreVQwUlNhRTF0U1ROUFJFMHpUbnBuTUZwVVNtMU9SRmt5VGtSYWJVNXFZekZOYWxKcVRsUm5NbGxVV20xT1ZHc3hUa1JOZVU1NlRUSlBWR00wVG0xRk1GcEVZekZPVkVWNlQwUlpNazE2YXpOTmVtTjVUbXBqTWs1RVl6Uk9WR2N6V1ZSUmVFNXFXVEJhUkZKb1RYcHJNMDlFVW10T1ZFRXdUbnBTYlUxNlNURk9lbVJvVFhwUk1VOUVVbXRPYW1zeFQwUlZNMDVVU1ROTmFtTTBUbFJyTWxwVVl6Sk9iVmw1V21wTk1VNXFWWGxaYWxGNFRsUlZlVnBxVVhoTmJWbDZUa1JWZVUxdFdUSmFWRnB0VG0xTmVrOVVXVE5OYlZsNlQwUmpORTU2V1RKWmVrMHhUbFJaTTAxcVZYaE9iVkY2VG5wamVrNUVUWGxhYWxrMVRrUlZlVmxxWTNwT2VtTXhUVVJaTWs1WFJUTlpWR00wVG0xRk1FOUVUVFJPZW1jeFRXcGpORTVFVlRGT1JGa3pUa2RGTVUxRVl6Vk9iVTB3VDFSUk5FMTZZekJOVkZWM1RucE5NbGxVVVRSTmVtc3dUV3BaTWs1dFVUQlphbGt4VGtSck1GcEVUVEZPZWxVd1QwUmFiRTV0VVRGUFJGcHFUbXBqTTFsVVVUQk9hbU16VFZSYWEwNUVTVEpPUkZWM1RtMVJNRTlVV1RCTmJVa3pXVlJWTUU1dFRUSmFhbGw1VFhwbk1sbDZVbXBOZWtrelRVUlZlazVxVFROT2VrMTZUWHBCTWs5VVpHaE9la2t4VGtSTk1FNXFWVEZPUkdSb1RtMVpNMDU2V1hoT1ZGVjZUMVJqZUU1cVVUSk9WRlUxVG1wVk1rNVVXVEZOZWxVd1RsUlJlazU2WXpCT2VsSnFUbnBCTTFsVVdtMU9lbEY2VDBSYWFFNUVTWGxhYWxVMVRrUlpNMDlVVlhwT2VsRjZUa1JSTWsxdFdUTk5lbGsxVFhwbk0wNTZVWGxPZWxreVRucGFhMDVxVlRCT1JGRTFUbTFKZVZscVkzcE9SMGt3VG1wYWFFNUhSVEpPYWxKclRsUlplazU2V20xT1ZFMTZUMFJqTTA1cVdUSlpWRkV5VG5wWk1VNTZVVFJPVkVreFdWUmpORTVFVVhwTmVsRTFUbFJKTVUxcVRUQk9hbWN3V2xSVmQwNTZWVEJhUkZFMFRucE5NVTFVVlRKTmVtY3dUbXBqTWs1NmF6Sk9lbEUwVG1wVk1FNXFWVEJPYW1NelRsUk5kMDVYUlRCYVJGRTFUWHBSZWs1RVRUQk9SMGw2VG5wUk0wNUVSWGxhYWswelRrUlpNMDlFVVROT2VsVXpUWHBTYWsxNll6SmFWRkpxVGxkRk0wMXFZelJPZWtVeVdXcFdhRTE2WnpGUFZGazBUWHBWTTA5RVVUQk9WR2N3V21wak1VNUhSVEZOYW1Sb1RrUm5NMWxVV21oTmVtTXdUbFJWTVUxdFdURk5SRmw2VG0xSmVWcHFUWGRPYlVVeVRYcFZNVTE2WjNwUFJFMDFUbXBKTWsxNlRUTk5lbXN3V1dwUk1VNTZXVEpaYWxGNFRYcHJlazVFVlROT1JHTXlUbXBTYUUxNlFURk5SRTAwVGxSRmVrMTZUWHBOZWxrd1dtcE5OVTV0V1RGT1JGVjNUWHBSTUZwRVNtMU9SR3N6VFhwV2FFNUVTVEpaVkdNMVRtcFJNRTlVV210TmVsRXpUMVJaZWs1cVZURk5la3B0VFhwRmVrMTZWVE5PVkVsNlRsUlJlazU2VVRGWlZHUm9UbnBuTVUxNlRURk5lbEV3V1dwVk5FNVVWVE5OVkVwdFRrUkZNMDFxWXpCT1JFMTZUbnBLYVU1SFNUQk9WR00wVGxSck1FNVVXWGhPUjBVeVRtcFplazVFVlhsYWFsazFUbFJGTTAxNldteE5lbFV6VGxSYWJVNVVhekpPVkZrelRsUk5lVmxxVlRKT1IxVXhUVlJqTWsxNmF6Qk9WRkV5VGtkUk1scHFZekJOZW1Nd1RtcFpORTV0UlRCUFJHTjZUWHBSTTFsVVVUUk5iVmt6VGtSVk5VNUhXWGxhYWxVMVRqSkZlazlFU21sTmVtY3hUV3BqZDAxNlNURk5WRnBxVFhwSk1rOVVUVEpPVkVWNlQwUlZNazE2WjNwTmVsVTBUa2RaTTA1cVVUTk9SRlV3V1dwamVVNTZUVEJaZWxreFRtcG5NazVxV1RWT1Ixa3pUV3BSTVU1NldUSk9SRlY2VGxSSmVrMVVVVEJPYWxrd1RXcGpNRTU2WXpOT2VsVjVUbFJCZWs5RVdtbE9lbGt6VFVSUmVrNXFUVEJOYWswelRsUnJNVTFVU20xT2JVMTZUMFJWTlU1cVl6Tk9hbU42VG1wbk1rNXFXbTFPUkZreVRtcGFiRTVVYXpGWlZFMDBUbXBuTVU5RVZUUk9SMFY2VFhwWmVFNTZZekpOYWxrMVRucFZNVmxVWXpSTmVsVjZUbXBqZWs1cVZURlpWRmw1VGtkUk1GbDZUVFJPZW1NeVRXcFZNVTVxWnpKT1JGVjVUbFJuZWs5RVZYbE9WRmt5V1ZSTmVrNUhSVEpaVkZreVRXMVpNVTE2VFhwT2Vsa3dUV3BOZUU1NmF6QlphbGt5VGtSak1FMTZTbTFPZWtFd1RucFplazE2V1RCWmFsbDZUa2ROZWs1RVdtcE9ha2t5V2tSUk0wNUVWVEJhYWxrd1RtcHJNVTFFWXpWT1IxVXpUbFJhYWs1RVVUTlBWRkpyVFcxWk1GcEVUVFJOZW1jeVRucEtiVTVxVlRCYVJFMHdUa1JWTVU1RVZUTk9SRlV5VG1wamVrMTZSWHBPUkdONlRrZFpNbHBxVVRCT2FsVXpUWHBaZWsxNmF6Rk5lbFY2VFhwamVrMTZVbXhPTWtVelRWUlJNazVxVlRCUFZGcHBUVzFaTUU1VVl6Sk9SMWt6V1ZSVmQwNUhXVE5OVkZFMFRXMVpNMDFVV1hwTmVrRXhUWHBLYlU0eVJUQlphbFV5VG1wVk1scHFZM2RPTWtVeVdYcGplazVIV1hsYWFrcHBUWHBWZWs1VVVYbE9WRUV3VDFSUmVVNXFVVE5QUkZrd1RrZEZNbGw2VVhsT1JHY3pUbFJXYUU1NlVUSlBWRlV4VFcxWmVrNXFZM2ROYlVrd1RWUlJNRTE2V1hwUFJGcHBUbFJSZWs1VVRUUk5lbXN4V1ZSTmVFNTZaekJOYWtwdFRtcFZNazlVVFhwTmVrVXpUVlJOZVU1cVNYcFBSRnBzVG1wbk1FMXFUWHBOZW1zd1QxUlpNRTVxVlRKTmVsSm9UbFJqTWs1cVZUTk9SMFY2VDBSS2FVNUhSVEJaVkZrMVRrZFJNMDVVVVRWT2JVa3hXVlJqZDA0eVJYcE5lbVJvVGxSQmVWbHFWVFZPUkVreVRXcGFiRTU2UlRGT2VrMHpUa1JKTTA1RVRURk9SMGt5VDBSS2JVMTZaekphVkZFMFRtcHJNRTE2VW0xT1YwVXlXa1JhYkU1VVl6Qk9hbGt4VG5wck1GbFVZekJPUjFFeFRYcFZkMDE2WnpOT2VrMHpUakpGTUZscVl6Sk9SRlV3V21wS2FVNUhUVEJOZWxVMFRqSkZNazlFVVRCT1ZHZDZUVVJSTVUxdFNURlpWRmsxVFhwQk0wMXFUVFZPVkVreFRXcE5kMDVVVVRGT1JFMTRUVzFaZWsxVVZYaE9WRmt5VFhwUk5FMTZUVE5OUkZwc1RtcEpNRnBVVVhoTmJWa3hUbXBqTTA1SFZYbFphbEY0VG5wSk1rNUVaR2hPZWtVeVRYcFpNRTVYUlRCWlZHTTFUa2ROTUZwcVRUUk9SRTB5V1hwTk1rNXRTVEZOYW1NMFRrUkplVnBxV1RCT1JGVXlXbFJqTVU1RVVYbGFhbFYzVGtSWk0wMUVZelZPZWxWNlRtcFZkMDU2V1RCYVJGVTBUWHBaTWs5RVVUUk9WRWt4VG1wS2FVNTZUVEZPYWswelRrUkZNbHBVWXpWTmVra3hUVVJaZWs1NlVUQlpWRkUxVGxSQk1GbFVWVEZOZW1zelRVUk5lRTV0VFRKYVJHTjZUVzFKTTFsVVVYaE9hbGw2VDFSUmVrNUVaek5QUkZKcVRrZEZlVnBxVW10T2JVMTZUMFJaZVU1cVl6Tk5SRTAxVGxSTk1rNXFVWGhPTWtVelRucFJlazV0VlRKWlZGRTBUVzFaZWsxRVZUUk5lbXN3V21wa2FFNUhTVEJhYW1NelRrUnJlVmxxWXpCT1JGVjVXbXBaTlUxNldUTlBSRkY2VG5wWk1scEVZelZPVkdjd1dtcGpkMDVFVFhwT1JGRjRUWHBOTTAxcVRUUk5lbGt4VFVSVk1VMTZVVEZOZWxreVRsZEZNRmxVVFhwT1IxRXhXVlJOTTA1VVZURk5la3B0VG1wbk1rMVVUVFZOZWxFd1RtcGpNVTU2VFhwT1JFMHlUa2RWTUZwRVZUTk5iVmt3VDFSWk1FNXFWVEpOZWtwcFRYcGpNVTVFVlRSTmVrMTZUWHBTYUU1RWF6RlBSRkUwVG1wVk0wMTZUWGxOZWxVeVRrUlZlazUwa1JzQUFGRk1NMHhIUkROQmJYUXdXa2RhYTBGNlVqSk1kMFYxUVVkT00xcDNSREZhYlVSc1RIZHdha0YzUkROQmJVd3lRVzEwTWtKSFRYbEJlbFl6UWtkYU1VRjZVbTFhYlVWNldtMTRiRXgzU0RKQmJVd3pRbEZFTUZwdGNESkNSMGcwUVcxYU1VSkhXakpCVkZvd1FXMUpkVnA2VmpCYVIwVjZXbTF3TUV4SFJYcEJSMUl3UVcxWGVrRkhTRzFhUjB3d1FYZE1iVUZIV2pGQlIxWXlRVWRYZWtGVVVqSmFkMXByUVhkd01FRlJXbTFCZWxZd1FrZFhka0Z0VGpCQ1VWbzBRWGR3TUV4dFdqVkJTbEl5V25kSWEwRkhVakZDVVZvd1FWUlNNa0YzUkRCYWJYQXlURWRGZGtGdFNESkJiVmQ2UVcxNE1scHRUWGRhYlVnd1RVZEVORUZVUkRGQmQxZDJRVkZFTTFwSGNEVmFla3d6UVhkWGVrRkhWakJhZDFkMlFVZE1Na0pSV20xQmVrd3dXbmRhTUVGSFJHMWFkMHd4UVZGYU1rRjNSREZCZDNneVFYZGFNVUZ0V2pCTWJWb3pRVWRJTTBGSFRHeEJlbFl5UWxGRmVVRkhTREJNZDBneVFWRkViVnB0U0ROQlVWb3pRa2RYZWtGSGNEQkJiWEF4UVcxT01rSlJWM1pCVkZvd1FsRklNMEY2V2pCTmQxcHNRVkZhYlZwdFdqRkJVWGd6V25kRmVFRkhlRzFhUjFwc1FWUlNNVUZ0UkRWQlNsSXhXbEZ3TVVGM1ZqQkNVVWd4UVcxME0wRnRTRFJCZWxJeldrZEViRUZ0VmpCTmQwaHRRVzFTTTBGdFRHeEJlbHB0UVcxSWEwRnRWbTFCZDNBelFXMU1NMXBIV214YWJYUXhRbEZYZGtGM2VEQk5kMFY0UVcxSWJVRjNjRFJhYlhBeldrZEVNVUYzVERGTVIwdzBRVzFNTWtKUlRHMUJkMW94UWtkd05GcHRTREpDUjAxNVFYZGFNMEYzV2pKQlVVd3lRWGROZUVGUlRESkJVVWd5V25wTU1FRjNWM1pCZWxZeFFsRndhMEYzU0cxQ1VVeHNXbTF3TWt4M1JEVkJiVVF5UVZGTmVVRnRWakphYlVWNlFXMUVNMEYzVFhWQmVsSXhRVWRFTVZwdGRESmFSM0JzUVZGRU1scHRSRE5CZWtnd1FYZE5kMEZ0ZERKQmQzQXdRVXBTTWxwM1RYWkJWRkl5UVhkYWJFRlJWakpNYlZveFFWUldiRTEzY0RGQlVVaHRRVWRNTlVGdFRESk5SMHd4UVZGNGJWcDNUR3hCTWxKc1RYZElNbHB0Y0ROYVIwVjJXbnBXTWtGdFRESkJkMW94UWxGRmRVRjZWbXhOZDBSdFdtMTRNVnAzVERKYWJYUXdUWGRNTWtGM1ZqQk1kMDE0UVZSYU1FeDNjREpCYlZZeldsRk1NMEZSZERKQmQxcHFRVzFPYlZwSFYzcGFiVWd4UVhkTU1rRnRlREJOVVZvMVFVZDRNVUpSUkRWQmVrZ3hRbEZYZWtGUlRERk1SMGcwUVZGSU1scHRXakZCVkZJeVFYZHhkVUZ0VmpCYWJVUXlXbTFJTUUxM1NHMUJWRXd6UVVkYWFrRjNlR3hNZDBWMVFWUldNMHhIY0RWQlVYUXdUVkZOZGxwdFNERmFkMFF3V20xU01scHRXalJCZDFadFduZHdha0ZSUkcxQmQwMTJRWGR3YlVGSFNHeGFiVWd4UWxGRU1FRnRTREZhZDBoc1FXMTBNa0pIY0d4QmJYUXpXbEZJTVVGNldteE1kM0J0UVcxRU1scDNSR3RCVkV4dFFsRklOVUZ0ZEcxYVIwUTFRWGRJTUUxM1RYcEJlbG95UVhkeGRVRjZWakJCUjNBd1FXMUlNa3gzVERKQmVsSXdUSGRJTlZwdFNETkNVVXhyUVcxYU1scDNXbXBhYlV3d1FsRk5la0ZIVWpGTVIzRjFRWHBFTVV4SFYzWkJiWFF4UVZGYU1WcHRSREJCVVhCdFdtMVNNMHhIY0RWYWJYQXlURzFGZDFwdGRETkJiVm94UVZGME0weEhjR3hCVkVReVFXMU1ORUYzVEROYWJVUTBRVEpTTUVGUlYzcEJVWGd5UWtkYU1scHRWbTFhZDB4dFFWRk1iVnBIVFhkYWVrd3dURzFJTWtGM2RHeE5kMGhyUVZSRWJVSlJXakZhYlV3elFsRkZlRnB0U0cxQlVYRjFRVkZTTWtGM2NEUkJVWFJzVFhkWGRscDZURE5CVVhBeVFWRjBiRTEzU0RSQmQzQnRRa2RNTWtGNlNERmFiVm8wUVZGSU1FRlJSRzFCZWtnelFYZE5lVUZ0V2pOQlIxZDJRVzFhTWtKUldtcEJWRll6UVZGTWJVRjZURE5hUjB3elducFdNMHhIV2pSQlVYZ3pRVWR3YTBGdFVqQkJiWEJzUVVkRU1rRkhTR3hCUjNneVRVZGFNVnB0ZURKTWQweHJRVWRJTWxwM1NEUmFiVWd6UWxGRmRrRjNSREZNUjNBMFFWUkliVUZ0U0RCQmQwZ3lXa2RhTUVGdFZtMUJSM0EwUVhwYU1scHRSWGhCVkVodFFYZE1NVUZ0ZEROYWJVUXpRVkY0YlVGUmNEVkJWRVF5UVhkYU1GcDZURE5DUjBReVFWUk1NVUpIV214YWJYaHRXbTF3YTBGNlZqQk1kMGcxV25wV01rMTNTRFJCUjB3eVRHMUVNMEZ0UkROYWQweHJRWHBXTWtGM1RYVkJTbEl6UVcxWGRrRnRXakZNUjNBMFFYcElNVUpSU0d0YWJWb3pURWRhYTFwdFJESmFkMGd3UVcxSWJVRlJTRFZCUjBRd1FYZHdOVUZVUkRKTlIwd3dRVzFNTUVGdFdqUkJSMDR5VEVkd01FRktVakZNUjBSc1FYZEViRXgzVEd4QlIwUXlURzFJTWtGM1VtMWFVVWcwUVVkT01VSkhSWHBCTWxKdFdsRk5ka0ZIUkRCQmJVVjVRWGQ0TTB4SFJYbEJlbG95V20xSWJVRjZUREZhVVZveVdtMWFNRXhIVEcxQmJYQXdRVkZOZGtGdFdqTk1SMHh0V20xME0xcHRjRzFCVkZKdFdsRndhMEZSY0RKTVIzQXdRWGQwTVVGSFRYVkJla1JzVEhkSWJVRXlVakpNZDNCclFYcFNNRUZSV20xQk1sSXlRVkZ3TkVGNlNESk5SMFYzUVcxNE1rMTNUWGxCYlZZeVRWRmFha0Y2U0RCQlVVMTRRVWRTTWtGUmNEVkJVVkl3UVhkYU1WcHRURE5NUjBRMFFYcGFNa0pIUkRSQmJYaHRRbEZhTVVGdGVHeE1kM0F6UVZGRU0wRlJUR3hhYlZJd1RYZElORnB0ZURKQmJWb3dRVWQwYlZwSFJEQkJSMDR6UVcxd01rRlJlREJCZDAxNFFWRndNa0ZSVFhwQmVrZ3dURzFhTWtGM2NERmFVWEF3UVcxYU1FSkhUREJhZWxZelFXMU5lVUZ0ZUROQ1Ixb3dRVWRXTUUxUlYzcEJVVm95V20xd01VRlJlRzFhUjNBMFFYcGFNRUZ0VERGQmJWSXdUVkZFTlZwdFRESk1kMFJ0UVZGSU0wSlJjRzFCVkV4dFFsRkZkMXB0ZUcxQmQwaHNRWHBTYlVGM1JYWkJkMGd5UWtkTU1rRjZUREJDUjBnd1dtMVNNMEpIV214QmJWSXpRa2RFTkVGUlZtMUNVVm96UVZSRU1scHRjREpCZDFaaFVVUmpNSEI2ZVdodVMwVTFWbEV3ZEZjd1Z6QktTazExVFRKd2FtOTNkWGRJYkRsQ1RWUk5Na1F6V2pGR2JVVmxTVWRCVWtWM2RETmFVMDlxY1ZKNVdrVXlNRFJ4U1VnMWJ6RlRVWEV3TlVsQ1NWTlFjWHA1TUc1S1JXNXdiVTFDY1RGVFRFUXhkVzFFU1ZOamJsTjFkMFJ0UldKTlZHZFpSREpOUWtsS1dtMVpNRFV4YjFGRmFFSlVVakZ3TTJOQ1JqTk5SRm95VW10eFNHb3hXa3BuVmxwVFYyMWFTRk50UVZOeFMwcGhRV2R1WVVScFJIZFBSRmx0VDBoSlUwUTFSekJTWlhGTGVESk5WR015Ym5wQlprWjVTVEJ1UzNGNFRVZzVZMDB3TlVWWk1VVkNiM2hUWkVKVVUxVnVTVk4zV25wSlZFcExTWGxhZVhWRVRFbDVSbHBTUlZkdlVuUXdXVEJFTVc0eVdtVnhWVUYxY1habmRrbHRVMDF1ZDBsUVNIZzBNMjVJVjAxeFMxZEhSa3BuZGtwM1JXUkJNMDV0V0RGYU0yOUhWMHhLVkZkSVRURmpSMEpKWTNWYU1VbEpXbE5UVUhCNE9ERkZlVk5yVFZKU1pVUjVRV3RJTTFZd1RUTkJaRWQyT1dWd2VHZE1iMUpUYlVaSFQyVk5Tbmd3Y1VsNGJVaEtaME5IUmpsNGNVbzFha2xHWm1sRlUxcHBjWHA1Wlc1SVUwcEJNVTFsYmpONU1FUnRTVk5FUjNsbFNGUXhZMGN3WjNsSVZYQXhjVEpYUVc0eWNVSndlRUYxUVhsSmJYSmhSVzF5VkRsSlFXRkZUVnA2WTNsdVIzVkRSSHBqYUVWVFQzVnZlbkZvYmxSalJWZ3lVMmRGZWprd1JtMVBSa0ZVTVhaSWJVNHdTbmhtTUc4d1YzWkNVMEZSU1hnMVVVSlRlVzFCZW1OSlIwcGpORWRTY1ZGTWVWWmxia2hKV1ZwNFFWcElNR2Q0U0RJNVVYRXlkREJNUjFveVJVaEZZa0ZJVWpWSGVqQnBiM2cxV2twMk9EQkZVbVl6UnpJNVJGcEhRVE5JZGpnd2IwdHhiRXhKU1dSRlNEbFpiMGRYVlc1aGVHeE5VbEpsU1hwallrMWhjR1ZDVWpSdFdrdE5XVzVWUldKeFVWWTBXVzFGVTBSSWEwbFpNVVZ1Y0ROVFVscDZlVFpFTW5FemIxRjRhVVl6VjI1YWJEbGFSM2xpWlVkdFdtVmFTRk5SUm5kWFEzQXhTV1ZDUzBocFJrdEpNMEpTT1cxQmVGTnNSa294UmsxNFJXSlpiWGxsUVhsTlNsa3lRVmx2UjNobGJtMXhaVVJ0ZVVOWk1HdHNRbEptYlc0emNXUk5WR2RaY1ZOWGRVSlNOVFJ3U0VWTFFWRlRRVWN3T1hweFVrZ3ljVlJhTWsxTFUyVkdVMU5CYmxSMGFYQjZTRzFFU25salNYZE5UM0Z0Ukd0R1IxZDZSbTExUWtaU1NYWnZSMDVzY1ZWeFkzQXdSVlJ1YlU5blJVZ3hWRUpWWXpSQk1tc3hia2RPYkV4SGRWaENWSGxoUlVseFlrWXhTVVJOTWpWMWNuZE5iVWxIVjJwdVZYRjVXbE5KWlVGVWEzWnVWSFZuV2pCRmJXOUllV0pDVVZKc2JubDVZbHBJVFdKYWJYbDVjSHByWmtWNlJEQkNVVUZRYjBkeFZGb3ljVlZCTVVWVGNHRlhXa3BVZEROQmVHSnBUREJKVTNCVVdqTndVazFqUWtoMWVuQXlRVVZNYlhGVWNVbzFZM0o2WTJsdVVqVktjVEpyYmsxNVQxaEJNR05GY2tobWFVVXhkVXRHUzFwcFIxSm5SVXA2VWpWQlIwVnRRVkZQTWt3d1NHeEpTa1Z0U1RKRlFVUXlabXhCTUhGSWIzWm5WbTlMVEdWRVlYRkJSbUZqWVVGdGVESkVZWEZKUVROVE0wcEhRWGhNZWxkUVJIZDVZbTk2ZVZCQ1VtZHJRVWxpYlZvd09HVnVWVWxwVFhoclJtNHpWMGh2U25WclFXRjVSRVF4VHpadVNqRjVTVXRQVFc1NlkxWkdkMEZyUlhwSmVtOHdaMGhaTUV4cVRIZzBiRVpSZVhwTlVWTmxRa3RGZVVFd2ExbE5TR05RUmtsRVpVMTNWMkZ3ZW5rMFJERjViSEV3YTA5dU1qQmxjVXQ0TTBsVU1HeHZVazFIVFVkQmFGaHRkVzFhUjBRelJWRjVTVXBLWnpSd1NtSTBSVWRKZFVkU01XeEVlbUp0Y0ROeGRVWnRUV2h1VlZOWVNWVjVaa2hKY1RCeWQzRmFTbEY1V0VsUlRXeHVNMk5rUkROMU1uQjZjV3haYlhWRGIzZHdhM0JKVTB4RllVNDBSREE1ZUhKSmRYbGFNbW8wY2t0NWJVZ3pjVTl3TVVsb1NsUmpVRmt6U1dGdVVtczBUVkZ3YTBkdFQwaEJlSGsyU0hwbWFuSlVaMnhHTTFkb1dHMUJla2xMZVZoTk1FMWhXREF4TlZwSVFXdEpWSGxwUWtwMVYwVXdaMnhIZUVGV2NGVkJiVVV3T1ZGSlMwRkxSbmhYVjNCNldtVmFiVWxDYjFKQmJrSkhlWGx1ZDFONlFVcDVhMDFVUlZkR01raHFSRzF3Wlc4d1lqVktkM2h0UlVsNGJVaFRVMU5DVkZJMFJqTlRlWEZSY1hsd1VqQnNUSGhuWTB4SVUzaEhTMDExYmxSSlJVbFVUVkpCVWxkNGNWRkZhVnA2WW1wRlVrVnBSREZ4UzBWVlRETmFWWGsyVERCVFlVMVVXbTFHZWpCbFdubFBNSEV6VTFkRlMwVmpja2RNTTBSSmVEVllNVWw1VERKSldGZ3lZMmxCZVU5dVNsTkpaa2xMWTJ4dk1uRjFRWFk1UmsweFNWQlpNbmxqVFVoYWEyNTZWMnhDU25GcFRESkZhRm96ZVZkYVVqZ3pSWGhKTWtsU1dtVmFZWFJwYjBoTmFXOUhSWGx5UjNWcVFrcDVTbHA0T1hoRk1rbGljVEJCVlUwelNWRkJTM1F6VFVkWFJrbEhVMjVGVVhGMWIwcE5SbTR6VTFOSmRtZGlXVEZXYTBoUlJESmFSMEZ0YjFJMVZVaDVSV3RFU0RGR2IxSm1NRm94VG0xS1ZHZFhSM2c1WVVaU1oyRkZkM1ZWU2xGTlUzRjRlV1p4U1VFMWJ6SlhRMEZMUVVoSlZGcHJRa2RKUVVGNmVWcHdNM2xuU1ZSRllrVXhRV2ROVlhodFFYZGFiWEZLT1ZoYWVqazFiMkZ4ZFhCM1NHdE5TWGxQYmpOUGVtNUlWMHh2VVhScVFrdFhaMjlIY1d4dWJHZEpUVzFOUlUxVWVWRnVSamxwY1hwSVpWa3hSWGxCZDBGcVdUSlRVRVZoUlhWS1MwVjNSM3BTTkVKS05YaE5TRmRqUkhkWE1rSlNjVmRITW5rMVJVdDViSEpMVjA5Q1MzbHJRWGRUZFVWSFRVbHZWWFYxUmtneE5VRklPV05IUjNGclJubHhha1pKU1dsQlZFVnBTbEppWlZwdGRHeFpNbGRxUVVveFZVMUpTVlZCUjBGaWJrdEZlVXBoVmpWdWVWcHNjblk1VEVGNk9XUndTR2RhU25wMWVXNTRWbXR3VkdOa2JrbzBOVTFSV21wd1VVRmpSRXB3TW5CU01ERmFlVk5RV2xGUE5rRjNRVUpKU0ZvelNWSm5VRWhTZFVKeVIxZEJia1puWjB3eFRYbHVlSFY0UWxGNU5VVXdaMWRhZWtsblNUQk5ZMEZMZEd0R01FRTJRWGQ1VVUweU5YbEtTa1ZtU0VwclZFRjNRV2RLUzFOM1FrdE5NbTVSUld4RVNIbFhRVXA1V1V4NFUwdHdlVUZHUlVoaldtOUtkVmxHWVZwbGJubE5ZMFpLWTJGeWVqaHRSbFJKVWtwVFJVdFlNR05WVEROU1pYQlJUV2RFU0VsU2NIbzVWa0ZTVWpKTmVua3dRbFI1VDBGSFFXWnhVVWxFY0RCaU1VVjVjREZ1UjFONVFXRkJhVXBMUkd0dlIxTnVUWGRCWW05TFRESmFTR05OVFhnMU0yNVJUMmh1UzFkS2NWSmpSRXBSUVVsTWVYbDFSREY0WlVVeFkxRnlkM1J0UnpKTU1FMTZPV2R2TUVFeWNGSXhRVTFKVERGSmJYbFFURWxYYVVSNk9VaEpkMDVwY0V0SlpVRXdhbWx2U2pGR1dUQlhaVVozU1d0d2VIbDFRWHBpTTNCVlQyWkJNR05wV2tkTWJIRkhRV0ZHTWxOYWNIZHdNMjkzVTNwWmJVNHpTVzFKVUhCNmF6WnVZVTlhYmtkUGVVVXlhbVZOZWpWUVRWUjVWMFZJTVZwWk1YbGpSVEJtYkVaNmExRndSMEZIU2toMVFYSlFPWFZGTTBGcVRWRjBaVXBMWTJWSFZYUnRTVlI1YUVrd1oyeEVNMDR5VFVnMVowRXlNV05IVkdzeVNGTkZVRUpWVnpKdmVubHBSekY1WTFwSU1WaEVTRGxUY0hoU01YQkhUbVZCU21wdGIwdDFNMWx0UVV0dWVIbE5Sa3RQYkc5VVNUVnZNamxIYjBoeFUxcHRSREZ2TWtsb1NWUjBhMWd6ZVhkRk1ubE1jbFZqVVhCTFFVUmFlbVl6UVhkQlQxcDZUVlJGUzBWNWJrdEpWMXBTT0cxR1NHTm5UWGxOV0c5SVFXRkhVVTFzV2pCSmFHOHlOWGh1ZWtneVRUSTRiVUV3U1Zsd2JVRlFRWGc1ZUVaS1JVRk1ZVk5VU2xWWGFFUkxjVmx2TVZOTFRVZEpOa1I2U1RSQ1NsTlhTREoxYVVrd01WTmFTRWxuUWtwcWJFVkhkV2R1ZDAxMWJtRjRNMGxSZFVSSWQxTTJRVXRPYVc5dFQzVkJlRGsyV1RBd2JYSkplWFp1TW1OVlNWTkVhbkpSVWpKdU1qVlhTVkZJTTBReVoybEVlbWRyU1RORmJFbFJlVkphUzNWcFJsRkpaRnBIY1ZGdWVVUnBiM2wxVlVoUlUzcEZNMEZwY25vMVNVRjZaek5KTUZkUFFraDVRMDFLTVhaTWVtTjFTWGgxU201UmVVbHZNMEZ0VFROamRXOUlhMnh4TURBeGNFZFRhRWd4U1dodk1YRjZSMVE1YlVWS1YwbEJTMDkzV2tkQlUwSkxSVFZDVkhWbldrZ3hXa2RIZFZCRU1uVnFia2wxZUZwNmRXUkZWSEZ0U1ZOMWRVWlVPR3RCVTFJMWNFaEZUMHhJU1ZkRk0wOVBTVXBCZGtwSFQwRmFlV0kwVFhwRlkyOTNjVXBIZVhGNFNraEZVRnBRT1dWdlVuVklTVWhyTVVwNVYweElVa0UwUVVkWFVrcFNjRE5FWVdONFRYZEJSbGd5ZFdGRmVuRmlSWHByVkUxS1FXTkhSM0V5UmpKTlkwVkxWbWxGZDBsUGIzcEJiRmd3UkRWS1UwOVZTRWhuVEVkMlozaEhTRk5oUlhwVE5scFNjVEp1ZWpGMmNETmlaVVZWVFVSR1NFbDNRVzFOZVVZd1RYaEdlRll6UkhkWGEwRnRjV3B3VW1adFJVZ3hOa2xUUlRCTlNIbHVXakJYUkc4eWNVbEhTVmRsV21GeFkxb3lWMlJ4VVVoclFsVmpkM0ZLUkROSGQwUXlUWHB4TVhBeVFYcE1SMFJyVEV0aU1rWkxlVnB2TWxkRFRFcEJhVWt4WW1sQmVsZHFSRzF4YkVGNVRtbHZTMDFzUkhwTWJVd3dSWHB3YlhscVJESm5ZVnBLVTFKeE1GWnBjRWRNYkVaNk5WQkhNbkZyUVdGQmEwMXRlVkp4TVZOWGJ6Skpia3BLT1Zod2VERlNXREI0YkVGVmVEVkVTamhzYjFOamJreDRaakJKVVU5c2NubE1aVVJLVWpGRlNGZEdSMHBKYVZwNk5ERkhNVWxaV1RCaWExZ3lSV1ZNUzFNMmIyeG5hVnBLU1ZGeVNHZGpia2hGYUVKSVYycEpiR1p0Y25kMVkzSlJlV3RIUjAxTmNrbEJkVnAzUlV4QlNYaHJjVkZ4WTI5VVZ6TndlR3RKU25sRmQwWmhTR3hNTUdac1dEQm1NMEpJWjAxSFVVRmlSMGhUVUVSNmRVOU5lREYyUm0xVGVscElWMjVZTUVRelNuZFBNSEo2VERSSVZIUXpSbnAxZUVVeGVEVkZkMGhzYnpKVGVFWXlkVEJ5UjBrd2JrcEpTMWh0VFRaSWVWZDFRa2R4UkZwSU1HcElVM2xMY2xSbmFXOUhlVUpCZUZJemJrdDBNM0Y1WXpadWVuUnBibmR3WlVFd2FteEpkbVl3U0VwSmRrZElRVkJ2ZWxOMVdqQmpTMEY2TVdGSlMxSTFjSHB4WVVkR09XSkhTbE5IUVhwMWVuQnRUVk5ZTVZwdFRHMTVZVTFVVEdsdk1WSnNjVkZKVjNKSGRXUktkM0JzY0ZKeE0zSlZXbTF1VTFNMFdsRlhhRVIzZFZodk1raHFXbnBqVVVSaFQwdE5lVTFRY2t0eGEwWkxjWGxLVlhGcmNFaElha2x0ZFcxdlVsZGhia3R4TUhKVVRWbHZVbU5JUjFGV1pVMVJWMnhHZW1NMlJYbzVOWEZ0U1dGYVNEVlFSMVE0YTAxSWRVOXZTM0YzU1dGUGFrRXlRVWxLZUhGdFNFZE1NRzlLVTFaYVVYUXhTVEpYU1VwVWRHcHdNbU5GUVZSVE1FZHRjVVJ5UjNWUFRYZ3hNMFpLTURCRVNIRlFjSGhtTWtwM2VVMXZVVVZaU0ROVFVFRkhUVlZITUZkWWNWRjVVRzlKVEd4R01HTkdSMHBCZVVKSmVEVmFVVVZDU1ZGRlZFeElUR3hJTUZKcFNVcE1NRVpoVG1sTmVtWXhSbTF4ZFZwNFkzWklTSGw0VFhock1IQnRWM2xGUmpsNVdESm5VVXhMUlZGSVNIbERjVWROV1VKSFQxUlpNRkkwV1cxUGQwUmhWMUZ3UjBocVdrcEliVUY1VDBodVUwOUxURWc1VEVkU1NEQkdSMDFsYjBsRlFuRjRkVUZ4ZVVGalIzbzRhMGg1UVROS1IxWnJTVWhyYTBkaFYzbHZWRWxyYm1GTmFuQjZkWGhOUjFwcWNEQlhNMXBWWW0xQmVqbFliM2QxVjBkSFNUVkVNM2xZUjFONWVVWlJVekJHYlU0eVNsRjVNVUZIVTFodlZYbFBXakJqVjI5TFJVdFpNV0l5V2xSeFQwWXdWM2xCU0UxMldqSXhZa1pJZFhkR00yTlRRVlZKVTB3d2EwWnVNMHd4VFVwVFpVRjVSVUZZTTNRMWNEQjRhazE0ZFV0Sk1qa3libE5KZVc1NFptVkdTM2xDU0VkTU1FaFNkWFZGYlV3elNsTmlaVzh3TVV4YU1FMW5TRXRCWTBsaFYyMXlVVTVwY2xOTU0yOVVjV1JDU21Oa1dsRjVaVXhoY1RaQmVFUXhja2xCVWt4SlJXbHZTakZ0UVROalEwRklkVVZKU1VWblNGRnhNVVJIUldsd00zbFhja2RQYTNCSWEzbHlVMFY2UkVoVGVFSlZZM3BGVVZkcVNVbDVXRm93WjA5SmVuVlFTVlIxTWxwVGRHdHdlbU5ZVEd3NVNFSkxUR2xIUjB4cldERjROVzR3UVVGYU1qRjRjSGROU1VSS1kyUndNWGxuUkRKTlVVRXdlRE5ZTVhVeVNVZEViRnBSVTBGdU0yTmpUSGR4WjBWMlpteENVWGxMUkVsNVIwZDVjWFZIUjBWalNXeG5NRVpSVTBGSmVtTm9Xa2hqVFVSTFRWZHZTamw2UVVkTlZrcDZhMDlOUzFvMVJUSlRaVWd5ZFdwQlVEbGtTREl4WmtwM2RXaHVNMGxVY0hkUGVVMHlNVmx3UjBsaFRYbDViVzVLUVdSeFNFa3pjVlF3TUVoS1kwTk1TV05QUVZGVFVFcDNSVWhaTVhscVRWSm5ZMFpSVTNkeGVFRkJXa3ByYkVaSWVVSklTREF5YmpONE1YQjZNREZ3U0VscFJ6RkZVa3hMY0dWSmJWTjFjVE5YU1VwNloxbHdTRWhxY0ZKRlUwRkljVVZ5VkRGRFNtRmlNVXhJT0d4R2VYbERXbmRKZDB4dFJXVk5SbkJCVUhvNWJFeEtRV1pOUms0NVZsQndNRTFSVFhwYWJWb3pRVWRNTVVGS1VqSk5kMFY2UVZSU01VeEhUWGRhZWt3d1RIZHdiVUYzV2pKYVIweHNRWGR3TVVGdFRHdEJSMFF3V2tkTU1rRlVWak5NUjBSc1FWRmFiVUpIVEd4YWJYUXlUWGRhTWtGUmNERkJiVWhzV20xT2JWcHRSWGxCVkVSdFFYZGFNRUZ0VEcxQ1VVMTVRVkZNTWtGM1RHMUJlbFp0UVhkSU1rRjNXbTFhUjFwc1FWRk1NRTFSY1hWQlNsSXpXa2RYZGtGM1VqQkNVVTE0UVcxME0xcDNSWHBCVkVRd1RYZE1NMEYzZERCTlVYQnJRWGRJTWt4dFdqRkJiWFF6UVVkSU1rRktVbTFCZDB3eFFYcGFiVnBIUlhwQlVWcHNUWGRNTTBGdFZqQkNSMFY0UVhkU01WcFJURzFCU2xJeFRFZE1NMEZSY0RKYWJVeHJRWHBJTWtKSFJESkJTbEp0UVZGeGRWcDZURE5DVVUxNVFWUk1Na0ZSV2pKYWJVZ3dXbmR4ZFVGVVJERkNSMWQyUVZGNE0xcHRjRFJCVkZveVRHMXdNMEZ0UkROQmQwMTVRVEpTYlVKSFdqVmFiWGd6UVVkYU5WcHRVbTFhUjFveFdtMTBrUnNBQUVreVRtcFNhMDF0U1RKT2VsSnNUbXBSTWxsVVl6Sk9SMWw2VG5wVmVFMTZhekphVkZGNFRrZFZNMDFFWXpOTmVra3lUMFJqZVUxNlRUSlpWRlV5VGtkRmVrOVVXVEJPVkVsNVdXcFpORTVxVVRKWmVsSnJUWHBGTTA5RVRYcE5lbWN5V1hwamVVNUVUVEpaVkZreFRsUm5NazFVVlROT2Vsa3lUbFJqZVU1cVVUSlplbEUwVG5wbk0wNVVXbTFPVkdjeFQwUmplVTU2UVhwT1JHTjNUbnBSTUZwcVl6Rk9SR015VGtSUmVVNVVZek5PYWxrd1RtcE5lazVVV1RKTmVrVXpXVlJhYTA1dFNYcE9lazB3VGxSak1GcHFVbXRPYWxVeFRYcE5NazVxWTNwT2VsVjRUa1JaTWsxVVZYcE5la2w2VGxSWmVVNXFhekpPVkUwMVRqSkZNbHBFWXpCT2VsVXhUMFJqTVU1cVdUQk9lbU16VGpKRk1VNTZXWGxPVkdjd1dWUlpNVTVVVVRKYVZGcHFUWHBWTVZsVVZYaE9iVVV3V2tSU2EwNXFVVEJOYWxVd1RucEJNVTE2VVRKTmVsa3dXWHBSTkU1dFdUSk9SR041VGxSUk1sbDZUVEpPUkZFd1RYcFJNRTE2UlRCTlZGRXpUbnBSTVUxNlZURk5lbGw2VFVSWk1VNXFaM3BOZWxVeFRtcG5NRmw2WTNsT2JWa3hXVlJqZVU1WFJYcFBWRkpwVGtSck0wNXFVWGxPYWtVelRrUlJOVTVIVFhsYWFsVjRUbXBWTTAxcVl6Vk9SMWt6VG5wTmVrNTZZekZPYWsweFRsUkpNVTFVVFRKT2Vtc3hUV3BTYUUxNldUTlpWR014VGxSbmVrMVVVVE5PYW1zeVdXcGpORTV0V1RGTmFsRXlUWHBWTVU5RVZUTk5lbU13VDFSak1FNVVZekZOVkZwclRYcHJNRnBFVVRKT1JHc3lUVlJSZVU1dFVYcE9WRTB4VG1wck1rMVVZekJPVkUwd1dtcGpkMDVFU1RKTlZGRXdUbFJaTWs1VVZURk9lbU42VFZSVk5FNTZVWHBPZW1NMVRrUmpNMWxVVFRWT2FtY3pUbFJqTTA1SFdUTk5lbHBvVFhwQk1scHFUVEZPZW10NlRucFplazVVUVROTmFscHNUbnByZVZscVRUSk9iVkY1V21wU2JVNVVUWHBQUkZwc1RrUmpNRTU2V1hwT1YwVXlXWHBaZWsxNlVYbGFhbEpwVFhwWmVrMXFXVFJPYWtsNlRtcFNiVTVFVVROT1ZGVjRUbnBKTTA1VVVtbE5la1V3V21wamVFMTZaekZQUkUwMFRsUlJNMDVVWXpKT1YwVjZUWHBhYkU1SFZUTlBWRkpwVG5wTk1rOUVWVEZPYlZWNlRWUmFiRTVFWnpCT2FsVXpUbFJOTUU5VVRUSk5lbWQ2VGxSWk5FMTZUVEZQVkZFMVRrZFZNVTVxWkdoT1ZGRjVXV3BaZVU1NlozcE5hbVJvVGtkUk1rNXFVVEJOZW1zeFRucFZNazU2YXpGUFJHTjNUa1JKTWxwRVRURk9Na1V4VG1wak5FNUhSVEZPUkZWNVRsUmpNMWxVVFhwT1ZGVXhUMFJaZWs1cWEzcE5lbEV4VG1wRmVrNTZZelJPVkZrd1dYcE5NMDVVUlRGUFZFMHlUbFJGTVUxNlZUUk9lbEV3VFdwU2FFNTZRVEZQUkZFeVRYcFpNRmw2VFRSTmVrMHpUVVJWZDA1cVJUQk5lbGsxVFhwSk1VNXFWbWhPUkVVd1dtcFJNVTVxWnpKYWFtTjNUa1JaZWs1NlkzbE5lbU13VG1wS2JVMTZTVEpaYWxKcFRsUkZlVmxxWXpKTmVsRjZUbXBqTkU1RVRYcE9WRkY2VGtSbk1GcFVWWHBPTWtVelRWUlNhVTVIVlRCTlZHTXlUbnBSTWxwcVRUQk9hbFY2VFdwUk1FNXRUWHBPYW1Sb1RucHJNazVxVlROT2VsRXpUMFJOZVU1NlVUSlphbU13VG1wcmVrMVVVWGhOYlZreldWUktiVTVxV1RKTlZGbDZUbnBSTUUxNlRURk9SR3N6VDFSTk1VMXRXWHBOZWxsNFRtcGpNMDVVVFhwT2FtdDZUMVJWTUU1WFJYcE5hbFY0VFhwTk1sbFVZekJPYlVVd1QwUlNhVTF0V1RCTlZHTXlUa1JaZWs1NlRYZE9iVlV5VFZSTmVVNUVWVEJaVkdOM1RsUlJNMDFxWXpKTmVrRXpXVlJOZDA1RWF6Qk9hbFY2VFhwSk1VOUVVVE5OYlVsNlRsUlplazV0U1RGT2FtTjRUbFJOTVUxRVl6Qk9SRTB4VFdwamVVMXRXVEJOYWxWM1RrZE5lazFVVVRST2JWRXpUa1JqTTA1dFNUTk9hbGw1VG1wRk1VNVVXWGhOZWswelRrUlpNVTF0U1hsYWFsRTFUWHByZWsxcVVtaE9SRmt4VDBSYWEwNTZhM3BPZWsxNFRrUlJNazFxVFRST2FtY3pUV3BWZWs1cVVYcE5SRkpzVG5wWk1VMXFVVEpPVkVFeldWUlpOVTVVU1RKYVZHTjRUbXBKZVZwcVdYaE9iVVV3V21wYWJFMTZUVEZPVkZwc1RucFJlazFFV1hwTmVtc3dUMVJhYlUxdFdURk5SRTB5VFhwbk1FMTZWWHBOZWtrd1dsUmFiRTV0VFRCYVZHTXlUbnBWTVUxVVpHaE9WR2N5V2xSS2JVNTZhekZPZWxrMFRsZEZlazVxV21wT2FsVXpUa1JOTkU1dFZYcE9lbFV3VG1wTk1VMVVVbWxPYWxFd1dXcEthVTE2VVRGT2FsVjNUVzFKTWxwRVZUQk5la1V4VFdwVk1rNTZXVEphVkUxM1RtMVZlazVFV1RST2VsbDVXbXBTYkU1NlJUSlphbEUwVGxSRk1VOVVUVE5PVkZVeVdrUk5NazV0UlRGWlZGVjZUa1JqZWsxRVVtbE9WRUV5V1hwWmVrNUVhM3BOUkUweVRXMUpNRTFVV21wTmVrVXpUMVJWTkU1VWF6Rk5lbGw0VG1wSk1rMTZWWGhPUjFsNlRsUk5kMDE2WnpGUFZFMHpUa1JOTTA1cVVtdE5lbXN3VGtSVk1rNTZRVEJOVkZKclRsUnJNRTVxVFROTmVtTXhUVlJSZWs1SFJYcE5lbU14VGxSTk1rNVVWWGRPYlVsNlRVUmpNRTVxU1RCTlZGbDRUWHBCTWs1cVl6Uk9la2w2VGxSVmQwNVVSVEpQVkZVeVRXMVpNMDVFVVRSTmVra3pUMFJSTkU1VWF6Rk9hbU0wVFhwak0wNUVZM2xPVkVVelQwUmpOVTVFU1RGT2VrMTZUWHBCTUZwRVNtbE5lbXN4VDBSUmVFNTZWVEZPUkUwMVRucFZNMDFVVVRKT2Fsa3lXVlJWTTAxdFNYcE9SRnByVFcxSk1FOVVZM2xPZW1jeFRVUmpkMDVxU1RKTlZGRTBUakpGTWs1VVZtaE5la2t4VFVSTmVrNTZaekpaZW1ONVRsUmpNMDVFWTNkT2VrRXdXVlJTYkUxNll6Slpla3BwVG0xTk0wNXFWVE5OZWxGNVdtcE5NVTU2VFhsWmFscHBUWHBOTUZwcVdYaE5la1Y1V21wak5FNTZZM3BOVkdSb1RYcG5NazVxVW10T2JWRjZUMVJOTlU1cVRUSmFhbFV4VGtSak1scHFVVFJPZWtreFRYcFJORTU2WnpCUFZFMTVUbnBqTVUxcVdtbE5lbEV6V1ZSVk0wMTZRVEZQUkZFMVRsUkJNazFVVVRGT2FtdDVXbXBLYVUxNlFUQk5hazB3VG0xSk1rMXFWWHBPUjBrd1drUk5NRTE2UVROTmFrMDBUbGRGTTFsVVl6Uk9hazB5VGtSS2FVNXFWWHBOYWtwcFRrUkZNbHBFWXpKT1ZFRXhUbXBOZWsxNldUQmFWRTB5VFcxWk1GbDZZM2RPVkZFeFRucFJlazVIVlRCUFZGcHBUbXBuTWs1VVkzcE9WRmw2VDBSUmVrMTZaekpOYWxKcVRtcHJNazFxVlhoT2VsRXlUVlJWZVU1RVp6Rk5lazAxVGtkTk1FMXFXVEpPZWtFeVRucFZlVTVVWnpKUFJHTjVUbFJyTUUxcVRYbE9SRkV5VFhwVk1FNXRVVEpPZWxrMFRYcFpNazlVWXpWTmVra3lUMFJLYVU1VVVURk5SRkUwVG0xSk1scFVXbWhPVkVFd1QwUlNiVTVIVFRKTmFscHJUbFJCTVUxRVdtcE9ha2t3V2xSUk5FNUVhekJPZWxKclRYcHJNRTE2WXpOTmVrRXdUMFJWZDA1NlFUQlphbEV6VFhwck0wNTZWVEZOZWxFeFRYcGpNazE2VFRKWmFtTjVUbnBSTWxwRVVtcE9ha2t4VGxSU2EwMTZhM3BOYWxwb1RsUk5NRTU2V1RGT2VsbDVXV3BaTTA1RVZYcE9SR04zVFhwUk0wMUVZekJPUkVrelRXcE5lazE2U1ROT2VtTXlUbXBSTVU1VVZYcE5la2t3VG5wWk1rNXFTVEZPUkZFd1RrZFZNVTVFWXpKT2VrRXdXV3BOTTA1VWF6RlpWRTEzVG1wUmVWbHFUWGROYlVrd1RXcGpNazVxU1RGTmFsbDZUbFJGTWxwVVZYbE9WR041V1dwYWFVNUhWVEZOZWxFeFRsUkJNazFVVlRGT1ZHY3hUWHBTYVU1dFZUQlpWRTAxVGxSUmVrOUVZM3BPZW1jeFRrUmFhMDVFUlhwTmVsa3dUWHBaTUUxNlNtMU9SRTB5V1hwTk0wMXRXVEJPUkUxNlRtMUZNazFVVVRCT2JWVXlUMVJWTVU1VVdUQlphbFY0VFhwTk0wNUVXVEJPUkUweVdXcE5ORTVVYXpCTmVsa3dUbnBCTUU1RVVUTk5lbEY2VFhwYWFVNXRWVEJPZWxwb1RsUnJNbHBFVFhwT2VrRXdXV3BOZVUxNlJURlBSRlYzVFcxSk1VOUVXVE5PZWtreVRrUk5NazE2UVRCYVZHTXlUbFJGTWxwVVkzcE9WRmw2VGtSYWFVNXFWVE5PUkZwcVRtcG5lazFxVFhkT1IwMHlUV3BWZDAxNlp6RlpWRTE1VG0xSk1VNXFVVFZOZWtFeVRXcFJOVTU2VVRGTlZFMTVUbXBuTVU1cVRYbE9iVTE1V21wYWJVNUhWVEpPUkZFMVRtcFpNMDFFVW1sT1ZGVXpUbFJOZDA1NlRYcE9WRkV5VG1wWk1VMUVVWGxPUkZrd1dYcE5kMDVxVlhwTmFrMTVUWHBKTWs5RVdURk9ha1V5VG1wWk1rMTZaekJOYWxKb1RYcFJNRnBFV21wT1IwVXpUWHBqTkUxNlFUQlBWRkpzVG1wTk1rOUVUVFZPYWxsNlRrUk5lRTVIU1hsYWFsVjRUbXBWTWs5RVdUSk9SRWt4VDBSTk5VNUhTWGxaYW1NeVRtMUZNazVVVFhkT1ZHTXpUMFJSTTAxNlRUSlBSRkpvVFhwamVWbHFXbTFPZWtFeVRrUlZkMDU2V1RCYWFsbDRUbTFSTVUxRVRYZE9SRTB6VG1wTmVFNUVVVEpPUkdNelRucFZlazVxVVhwTmVtY3hUVlJqTUUxdFdUSmFSR013VG0xTk1FMTZZM3BPZWtFd1RsUmpNRTU2UVRKWlZFMHhUbFJCTVUxVVVtbE9ha1V5VFdwVmVFMTZWVEJPZW1NMVRucEJNRTlVV21oTmVtTXdUV3BOTTA1Nll6Tk5SR04zVGtkRmVrMXFVVE5PYWtreVRucFplVTVVVFRKUFJFMTVUbFJGTVUxRVRYbE9iVlV5V2tSYWFrNVVRVEZPZWtwcFRucG5NRTFxVW1sT2JVMHpXVlJqZWs1RWF6RlBSRnBzVGtSSk1FNXFXbXhPYlZreFRYcEthVTVVVlROT2FscHRUa2ROZWs1cVVUSk9la2t4VFhwUk5VNXFUVE5QUkZWM1RtMVJNRnBVVFROT2JWa3dXbXBWTVU1dFNUQlplbHBwVG1wck1scFVXVEpPUjFsNlRXcFZkMDVxU1RGT2VtTTFUa2RaTUZsVVdYbE9WRTB4VG1wak1FNUVhekZPZW1NMFRtMUZNVTVVVlRGT1IxVjVXV3BTYlU1RVZUQlphbHBvVGxSTk1sbFVUWGRPVkdjeVdsUk5NMDE2V1RKYWFtTjZUWHBKTUU1VVkzZE9la1V5VFhwS2JVNTZaekJhVkUxNVRrUkZNRmw2VFhkT1IwVXhUa1JOTUU0eVJUSmFWRTEzVG1wTk1VMXFVbWxPZWswd1RtcFZNRTE2UVROT2FsRjVUWHBqTTAxVVdYbE9hbEV3VGtSYWFFNXRTVEJQVkZFMFRYcEZNVmxVV1RWT1JFbDZUMFJWTTA1NldUQmFhbGw1VG1wWk1rNVVVbWxPVkVVd1QwUlZlazVIVVRCUFJGbDRUWHBuTWxsVVl6Sk5lbWN4VG1wTmVVNXFaek5aVkZFMFRXMVpNbHBFVFRST1IwVjVXbXBOZUU1RVVUQk9lbHBwVG5wUk1scHFXWHBPYlZFelRrUmFiVTU2UlhwTmFsSm9UbXBKTWs5RVkzbE9WRkV6VG1wTmQwNUhVWGxaYWxKdFRrUkZlazVxVFRCT01rVjZUbnBqTUU1dFRYbFphbFV4VFhwTmVrNTZXbXBPVkdjeVRXcFZOVTVVU1RKWmFsVTFUa2ROTUU5VVdUUk9WRTE2VG1wVk1VMXRXVEJOZWxab1RYcFpNRTlVV1hsTmVtTXpUMFJqTlU1cVl6TlpWRnBvVGtSSk1VOUVUVFZPUkdzd1QwUk5NazU2UVRCTmFsRXdUbnBGTUU1VVdUQk9WRTB3VGtSUk0wNTZaekZQUkZVMVRtMVJNMDVFVlhsT2FtTXlUbFJaTkU1cVJYcFBWRnBvVG1wVk1rNTZWWGRPUkdNeVRrUk5kMDVFYTNwUFZGRjZUa1JGZWsxVVVtcE5iVmw2VGxSWk1FNUVUVEJhYWxKb1RYcEplazFxVVhoT1ZHZDVXbXBTYWsxNll6TlBWRmswVG0xRmVrMUVVbXBPYlVVeVRucGpNVTU2VVRCYVJGbDVUbnByTVU1cVpHaE9lbFV3VGtSTmVFNUVSVEpaZW1ONlRsUnJlazVxVlhkTmJWa3dXa1JWTWsxdFdUSlphbEpxVG1wUk0wNVVUVFZPYW1jeVdWUlZOVTVxU1ROT1JHTjZUa1JWTTA5RVVUQk9lbXN5VDFSTmVVNXRSVEpPUkZwb1RsUk5NMDlFV1RWT1IwMHpUMFJqTkU0eVJURlBWRkpxVG5wUk1scFVUWHBPYlUwelRVUlJNVTE2UlRKTlZHTXpUbXBOZWs5RVZUQk5lbGt5VG1wTk1rNXFUVEJhYWxKc1RrZEZNRmxVV1RGTmVsRXdUMFJOTUU1VVFURk9hbU42VFcxWmVrNUVVbTFOYlVrelRYcFZNMDE2UVRKUFZGa3lUa1JGTVU5RVRUVk9SR3N6VG1wak0wMXRXVE5PUkZKcVRsUlZNRmw2V214T1JGVXpUbFJLYlU1WFJURk5hbU13VGtkUk1VMUVXVEZPUkZVeFRVUk5NVTU2UVRKT1ZFMTNUa1JSZWs5RVRURk9SRTB4VG5wVk0wNVVSWHBOYWsxM1RrZFJNazVxWXpST2FrVXhUVVJaTlU1VVozbFphbGswVGtkWk1WbFVXbWhPYWxWNlRrUlZNMDE2UVhsYWFrMTNUbXBqTWs1RVZYaE5lbU16VFVSV2FFMTZaekpaVkZKcVRucEJNVTVFVlROT2JWVXhUa1JWTlU1NldYcE9SRlY0VFhwSk1scEVZek5PYW1kNlRucFZNRTVVU1hwUFJGcG9UWHBOTUU5RVVteE9SMVV5V1ZSWk1VNXFaM3BOZWxVeFRtMUplVnBxV214T1ZHc3lUV3BOZVU1SFZUSmFSRkY2VGtSRmVrNVVWWGhOZWsxNlRtcFZkMDE2UVRKWmFsbDVUbFJqTUU1VVl6Qk5lbXN5VFZSWmVVNVhSVEpPUkUwMVRsUnJNRmxVVlRST2Fra3dUbFJTYTA1NlkzcE5hbEpvVG0xWk1sbFVXVEJPZWtFd1dtcE5lVTVFU1RCUFZFMDFUbnBSTUU1cVZURk9SMFV3VDBSUk1rNXFSVEZOZWxVeVRrZEZNRmxVU20xT1ZFMHhUa1JOTlU1dFRURk9lbFY1VFcxWmVrMUVZek5PYlZVeldWUlNhVTVxV1RKWmFsa3lUbFJyTWs5VVZUUk9WRWt5V1dwVmQwNXFWVEphVkZVd1RsUkJlazFFWTNwT2JWa3lXVlJaZVU1VVZUQlphbHBwVFcxWmVrMXFXVFJPYWtrelRucFZlazVVWXpGTlJGbDVUbFJqTVUxcVVUQk9hbGt4VGxSVk1rNXFSWHBOZWsxNVRsUm5lVmxxVm1oT2FsVjZUV3BWTkU1cVdYcFBWRkV5VGtkUk1VNUVZekpOYlVreFRtcFNhRTE2UVROUFJHTjNUa2RaZWsxNlVUQk9SRmt5V1ZSak5VNTZTWHBPVkZKb1RrUlJlazVxVFROT2VrRXhUWHBhYkU1NlVUQlplazB5VGxSSmVrNTZXVEZOZW1zeFQxUlpNazVFYXpKYVZGbDZUWHBOZWs1VVVYaE9la1Y2VFdwak1VNTZhekpaVkZrMVRrUlZNRnBVV1RGT1ZHY3lUa1JaTlU0eVJUTk9WRmw1VFhwbk1scFVUVEpPYW1jelRXcGFhRTU2V1RCTmVtTjVUWHBKTUU1cVl6Rk9iVmt6VG1wS2FVNUhUWGxhYWxVd1RtMUpNVTU2VW0xT1IwMTZUbXBTYUU1VVFURk9WR04zVFcxWk1GbFVVVEpOZWxVeVdWUlpNazVVVlRCWmFsVXpUWHBOTTA1cVdtMU9hbFY2VFhwYWFVNXRWWHBQVkZVMVRucFpNVTFVV20xT2FrMHhUVlJaTWsxNlFUTk5hbFY1VG5wTmVrNUVUWGxPUkZreVRXcFJNVTVxVlhwTlJHTjVUVzFKTVU5VVdUTk5lbEY2VDBSUmVVNVVTVEpOVkZwcFRsUm5NbGw2WXpGTmVsRjZUbnBSTWsxNmEzcE9WRTB4VFhwRmVrNVVWVFJPUjFVelRWUlNiRTU2UVRCTlZFMTNUbnBCTVZsVVVtaE9lbGt3V2xSVmVFNVVRVEJhUkdNMFRtcFplazFFV214T2Fra3dUMFJhYkU1RVl6Qk9SRXB0VG5wVk1rNTZVbXROZW1jelRucGpORTU2VVRCT1JGRjZUbGRGTTA5RVZURk9lbFV5VDBSVk5VMXRTVEJhYWxFeFRsUm5NRTlFWTNkT2JWVXhUWHBqTkU1dFRUQlpWRkpvVG0xUk0wOUVXbXhPZW1jelRVUldhRTVVUVhwUFJGSnBUbTFWTVU1Nll6Tk5lbEV3V1ZSUk5VNTZaM3BPYWxFeVRtcEpNazFVWXpOT1ZFVXhUVlJWZDA1RVNUQlBSRTAwVG5wRmVrNUVZM2hPZWxWNlRVUlplVTE2YXpKWlZGVjZUbXBSTTAxNlVtcE9WR014VGxSUk0wNXRUVEpPYWxFMVRrZE5lazFFV20xT2Fra3hUbFJaZVU1RVkzcE5SRkV5VFhwak1GbFVXVEJPYW1zd1dYcFZNMDVFUlROT2Vsa3dUbnBKTTA5VVVYcE9hbEV6VFZSWmVFNUVaM3BQVkZrelRucFZlazFFV214T1ZFRjZUMVJhYWs1cVdURk5lazB3VGxSak0wOUVUVE5OZWxGNVdtcE5NMDU2YXpGT2FtTXlUa1JOTVUxRVdYbE9WRVV4VFhwUk5VNXFUVE5QVkUxNlRucFJNVTVFVFRCT2VtY3lUV3BOZUU1NlNUTk9hazB4VFhwQk1VMUVXWGxPVkZVd1RYcE5lVTVVV1ROTmVsazFUbGRGZWs5VVVtcE5iVWw2VGtSVmQwNUVhekpOYWxWNFRYcFZlVmxxVW1oT2JVVXhUWHBOZVU1RWF6Sk9WRTEzVG1wck0wMUVZek5PVkVFeVdYcE5NazVVUlRKTmFrMHpUbTFOZVZscVVtaE9SR2N5VFdwUmVVNTZWVEZPYWxrd1RtMUpNazVVWTNkT2FrMHhUMFJaTlU1SFdUSmFhbEY1VFhwSk1sbHFXWGxPVkVVeVdWUk5NRTVVUlRKTmFtTjZUbnByTVU1RVdtcE9hbGt4VFhwVmVrNXFhekJaVkUwd1RrZFZNazFxVlhwTmVtc3dUa1JaTVUxNlNUQlpWRmw1VGtSUk0wNXFVbWhPVkdNd1dXcFpNVTU2WTNwTmVsVTFUa1JKZWs1cVZYZE9SRVV6VDBSak5VNVVXVEZOUkZwcFRsUkZNVTVFVFhoT1IwbDZUWHBTYTA1NlkzbGFhbFY0VGxSQk0wMXFVWHBPYWxreldWUk5lazU2UlRGTlJGa3dUbGRGTWxwVVdUTk9la1V3V2xSVmVrNUVTVEZOVkUweFRucE5NRTVxVFRKTmVtc3pUbFJqTlU1RVp6Sk9WRmw0VGxSUk1GcHFZM2RPTWtWNlRtcFplRTVFYXpKT2FrMDBUa1JOTUU5RVRYcE5lbEV6VFhwamVFMTZVWHBOVkUweFRrUkpNVTVFWXpGT2JVbDZUWHBWTVU1SFJYcE5hazEzVG1wRk1FOVVUVFJOZW1jeFRXcFNiRTU2VVRKYVJGRjRUbFJWTTA5RVRUQk9SRlY2VFdwYWFrNXFXVEZQVkZKcFRtcE5NMWxVV210TmVrRXdXa1JaTWs1cVVUQk9SRTE1VG5wak1GbDZZM2xPYWtrelRrUlZOVTVIUlRGWlZFcHRUbnBKTTAxRVdtdE9SR2N4VDBSU2FVMTZRVEJPYWxVMVRtcGplazlVV1hoT1JHc3lUMFJOTTA1WFJURk9lbHBwVG1wbmVrOVVXbXBOZWtrd1drUmpNVTR5UlROT2FsSnBUWHBWZVZscVZURk9la2t4VFVSU2JVNXRUVEpOYW1Nd1RsUkpNVTE2V21wTmJWa3dUMFJOTkU1Nll6Slpha3B0VG5wRk1rOUVWVE5OZWtreVRsUk5ORTVVV1RKTmVrMHpUa1JOTTA1RVl6Sk5la2w2VFdwU2FVNTZSVE5aVkVwcFRtMVJNMDFVVFhwT1ZHc3lXbFJqZWs1SFZYcE5hazE2VGtSTk1VNVVUWGhPUkdjd1dWUlpNazE2WTNsYWFsVXlUbnBOTVU5VVl6Vk9iVWt4VDFSVmVVNTZhekpPYWxwclRYcE5lVmxxVlhoT2VtdDZUa1JTYVU1NlJUSk5lbFpvVFhwVk1rNTZXVEpOZWtrd1drUlZOVTV0UlROTmFsbDVUWHBOTUU1VVRURk5lbGt3VG1wS2FVNVVhM3BOVkUxNVRucFZNRTFxVlRWTmVtY3lXV3BSTUUxNlFUQk9WRmt5VGxSVk0wNUVXVEZOZW1NeFRWUmpOVTU2VFRKT2Fsa3dUbFJGTUU5RVNtMU9la2t5VDBSV2FFNUVUVEZOVkdNelRXMVplazVxVVRSTmVtc3pUVlJWTUUxNlJUQlphazAxVFhwSk1GcFVWVEpPUjFFeFRVUk5ORTVxVFRCTmFrMTVUbTFaTUU5VVRURk5la1V6V1ZSTmVFNUhUVEphYWxreFRucFZNVTlVVFhwTmVrVXlXbFJqTVU1NlJUQlBSRTAxVG5wSk1FOUVZM2RPUjFsNlRWUlZlVTE2V1RKUFZGWm9UbnBCTWs1Nll6Uk9SRkV5VFhwYWJVNTZVWHBOZWxab1RsUkpNazU2VW0xTmVtc3pUMVJWZVU1dFNUTk9lbEV5VGpKRk0wNUVZM2xPUjFreFRrUlpNVTU2VFRCT2VsRjZUVzFaTVU1NlZURk9SR2Q2VDBSak5FNXFXVEpaZWxwc1RsUm5NMDE2WXpKTmVra3dUbFJLYVU1WFJUQlplazB3VG5wck1sbFVWVFZPVkUwelRrUmFhVTVIVlRGT1JGSnNUWHByTWxwcVdYcE5lbWN5VDFSWmVVNVVRVEZQUkUweFRsUkpNMDFxVW0xT1JGVjZUMVJTYUU1RVRYcE9WRmsxVFhwQk1rNVVZelJPVkVrd1RrUk5lVTE2UVRKT2FsVjNUa2RWTWs5VVVtaE9SR2Q2VDFSU2EwNUVUWHBPUkdOM1RtcFJlazVxVFhoTmVrVXdXWHBOZVU1SFVURk9lazE1VGtkTk1rOUVWVEpOZWswelRsUmpNRTE2WXpCT2VsVjNUWHBGTTAxVVRYaE5la1V5VFZSTk5FNUVWVEJQUkZsNFRrZFZNRTFVVlhoT1ZFRXpUVVJSZWsxNlJUTk5lbU42VGtSbk1GcEVUWGxOYlVrd1QwUk5lazVxWnpCTmVscHNUWHBOTUZwcVNtbE9iVlV5VG1wUk5VNUVaM3BOYWxFMVRYcE5NRnBVV1hsT1ZGRXpUV3BqTlU1dFZUSmFSRkUwVGtkVk1sbFVXbWhOZWtFeFRWUmpORTU2VlRCT1JGRXpUbnBSTWxwcVZYbE9hbGt3VG5wYWFVMTZUVE5OZWxFMVRsUm5NVTU2V21wT01rVXhXVlJWTkU1dFZUTk5lbFYzVG0xSk0wNXFVVE5PYlZsemtSc0FBREJOVVhCc1FYZGFNbHAzV2pGQlIweHRXa2R3TVZwdFZqQk5VVm94UVcxNGJWcHRXbXhCU2xJeFFrZE1OVnB0U0cxQ1VWZDJRVzFNTWtGUlRETkJiVkl5UVVkTmVWcHRUREZCZDB3d1FYZHdNRTEzV214QmQzQXlXbmRFYkZwdGVESkNSMGd6UVRKU01rRlJjWFZCZDNCc1RIZEViRUY2VWpGYVVWZDJRVkZTTUZwdFdqSmFiWEF5UWxGYU1FRlVUREJNUjFkNldtMVNNbHAzUkRGYWJYZ3lRVzF3TVVGdGRERkJVVWhxV20xV2JVRlJjRFJhZWt3elFWRndiVUZIVERCTWQwUTBRWGRhYlVKSFdqUmFiVkl6UVcxYU1VRnRkREZhYlVSc1FUSlNNVnBIV2pWQmQzUXdXa2RNTWtGSFVtMUJSM0EwUVVkU01FeHRXbXBCVkVoc1RIZHdORUZIUkROYVVWZDZXbnBNTTBGM1dqTkJkMVl5UVVkTU1GcHRlREZCZDNBeFducE1NVnBSVjNaQk1sSXlRbEZ3YlVGUlZtMUNVVTE2UVVkd2JFeDNTRzFhYlhCdFFXMUlha0YzUkRCTVIxb3dRWGRNTTBGM1JHeEJWRVJ0UVVkRmVrRjNSREZCYlVRMFFWUklNa0YzUkcxQmQwZ3pRVzFOZVZwdGREQk1kM0JzUVRKU2JVRnRjRE5CYlU0eVduZElNMEY2V20xQlVWbzBRVlJTTTBKSGNHMUJiVll4UVVkd05GcHRlREphYlUxMlFVZDBNVnAzV2pGQlIzUXlURWRhYTFwdFVqRk1SMGhzUVhkTU1VeEhSR3RCYlV3d1RFZGFNMXB0ZURCTWJYQXlRWGQwTWsxSGNESkJVVll4VEVkSU5VRjZVbXhOZDBoclFVZEVNa3gzUkRSQmJYQXhXbEZNTkVGVVJHMUJVVWd4UVcxTWJVSkhTR3RCVkVneVRFZEZka0Z0VEROQ1VVMTZRVzE0TTB4SFdqQkJVVnB0UWxGd01VRnRlREpOVVV4dFFWUldNMEYzV2pWQlVVd3pRbEZYZGtGM1dqTmFkMHh0UVhwSU0weEhXbXhCYlV3eVRFZEZlVnB0VGpCQmQzQXpXbnBNTUVKSGNEUmFiWGd3VEhkWGRrRjNXakpDVVV4c1dtMTBiVnAzV2pKQmVrUXlRbEZNTTBFeVVqQkJkMDE0UVVkME1scHRURFJCZWxZeFFVZGFORUYzU0RGQlIxZDZRWGQwTTB4SFdtMUJkM1J0V2tkRWJFRjNWak5CZDBWM1FWRkVNbHBIV2pWYWJVd3lURzFOZFVGVVJESk5SMXB0UVhkU2JVRnRUWGhCYlZZd1RIZEliVUYzY0RGQ1VVbDFRVkZhTWsxM1JETkJSM1F6UVZGd2FrRlVWak5hZDBWNlFWUmFNMXBSV2pWQlNsSXdXbTFKZFZwdGRESk1iWEF6UVZSV2JVRlJTWFZCVkVReldsRmFNVUZ0Y0RKQmQzQXlRWGQ0TUZwdFJHeEJVVXd4UWtkTmVFRjZVakpCUjFveFducE1NVnBIUkd4YWVsWXpRbEZFTkVGSGVESkNSMXBzUVZGU2JVRlJjRE5CYlVSdFFrZEVNMEZSVW0xYVVWbzBRWGRJTWt4M1RYWmFlbFl4UVcxYU5WcHRWbTFhYlZwc1FVZFNNa0YzUkd4YWVsWXpXbEZOZWtGUlJHeE1kMXBzUVZGU2JVSlJTR3hCZWxZeFFXMVhka0ZIVG0xQmQxb3dRVkZNTWtGM1JEQkJkMW95VFZGYWJVRkhlRzFCYlZkNlFVcFNiVnAzVERWQmJYZ3lRVzFJTTFwNlREQk1iVVYyUVVkRU1reHRjRE5CUjNnd1drZHdNMXB0ZURKQlVVZzBXbTFhTWtGdFNEUkJWRWd4UWtkYWJVRjNSREJhYlZwdFFYcGFNMXBIVERSQk1sSXpRa2R3YkZwNlRHMUJVVVF5V20xNE0wRkhTREJCZDFadFdrZHdhMEY2U0cxYWJVdzBRWHBJTWxwM1YzcEJlbFl5UVZGd2JVRjZTRE5hZDB4dFFYcGFiVUpIU0RKQlIxSXlRWGRhYlZwdFRqQmFSMHd4UVVkSU1scDNSREpCZDFvd1RHMU5lVUZIVW0xQ1VWbzBRVWRNYkV4M2NEVkJSMFF3UWtkRWJWcHRUakpCZDAxMlFVZDBiVnB0VFhsQmJVd3hURWRJTVVGSFdqRkJkMW8xV20xRU1GcDNURzFCZDBReldtMUliVnB0Y0ROYVIwUXpRWGRhTTBKSGNEVkJWRXd5VEhkd01rRlVSREJhZDFkNlFXMU1iVnBSVFhkQmJWWXdUVkZJTWxwdFNHeE5kMFExUVhkRU1scHRSWGhCVkV4dFdsRkVORnB0V2pCTWJVd3lRWHBNTUZwM1NHcEJNbEl5VEVkRmVFRkhUREJDVVhCc1FXMWFNMEZ0Y0dwQlZGcHRRbEZNTTBGM2RESkNVVm94UVhwU01rSlJTRFJCZWtneVdrZE1OVUY2U0ROYWJVZzBXbTFXTVV4SFdqSkJiWEF4UVhkd00xcHRlRzFCUjNBMVFWRlNNbHB0U0RCQmVsWXpXbEZhTTBGUlREQmFkMGcwUVZSYU1scDNUWGRCVkVnd1FYZE1ORnA2VEcxQlVVaHFXbTFPTUUxM1dtcEJkM0F5UVhkSWJFRlVSREZCUjFkMlFWRkViVnBSV20xYWVrd3hRa2RGZDFwNlREQmFkMW8wV20xU01rRjNUREpCVVZveVFYZEliVUZIUkRCTVIwZ3hRWGRXTUVGSGNESkJiVTR3VFZGWGRrRkhlREZhVVZvMFFWRlNiRTEzUlhaQmQzZ3pRVzFhTVVGUmVHMUJkM0F5UVhwU2JVRjNjRFZCZWt3d1RIZE5lRUZSVm14TmQwMTNXbnBXYlVKSFRHeGFiWEF3UWtkTU1VRlJlRE5hUjBocVducFdZVkZFWTJWTlMzbG5URXBuZVhCMlRqbFdVSEZzY0VkYWEzQjJaalJHVkVneldUQmlORVIzVDFWeFNsZG9UWFk1YkVac09WcHVNWGxRUmpKcmEwbFVaelpZYlVsNGNHRmpOVVZTVjIxTVMxTkxXV3c1Ylc4d1ZtVk5iWFZsUjB0amRYRjNTRFJ1U2psMlFrZFNOVVl3ZURSeFVVMW5SMG94ZUZnd1dqVk5la1ZGU2twQldVVlRZMGxZTTJNeWNrdFRaMHBIVXpWSFVuRlNURWg1VkhKM1UzbHdTamxKY25oeFdVZElVMk5FZUZOV1JYaEZTVWRLWjNaYVlXTkdRbEE1UVV4aGVXeHZkMW8xUWtvMVdXOTZPVzF3TURocVIzcEZiVmt4UlU5d01uRnNSRXRQUm5GSGNXdHhkMU5zUlhoWFdVVlVOVWR3VlZJeGNGVlNNRmt3VTNsSlZFVm1TbEZYUlVGTFNUTkdNa1YzU0RKbmJVMTJPWGx5VlVGbFFUSTBiRUYzVERGRWVYRkJiMGw1U2twSFRteEJNSGhwU1VsTlkwWjVZMnRhZDBnd1dqSjVTMGN3VjBSTVMwRTBSWGQ1UW5CS1RHMU5VbkZLY21GeFlVRlJTR3hCZDFOQlRFWTRhM0pSZERKYWVtTmlXakpqV0hKNFFWQk5TbEkwUVhvNE0zRkpSREpaTUVsNmNYcFhSVUZLY1ROR2VERlhUVVk1VlVGNVJXRkZZV05WY2xSTk0waFRVakZOZDFOblNraFhNa2t5WTNkSFNWYzFiMUpGWm5KUlFWRkpWR2RqUVVwTmFsZ3dUVXRNWVZvMFNtRlRVMjh3UlZseVVWTnBRbEZKVjAxTFlqTnVTMGxrY0hoWE0wUmhVMHBOVlhsSlJFZEpWVXh0U1UxSE0ySXhibEpYZG5FeFkxQktTSGw2VFcxQmRVWXlOVFpGWVVsbFRFZFRORUZJWXpGd1NIVkdSRWR4VjBoNFNVdGFWRWxCUVVkRldFVXdNVVZOZVUxWldUSkZVVVZKVmpOSFZVRjNjSG94UzAweGVWWklTSGxZV2xWVGJYSlVkV1JZYlZvelNFbE9NbTlLUVU5S1NqbG9URE5UZFVWSFVqUndiRGd4UVZSSmFVMHlkRE51ZUVReWJsSk5RVzVKVERSd1VVdzFXRzFGZFVSaFYwVkpWV05CVEVweFluQXhUMWx4UzFkc1RFdDRhMHhLZVZsdllWZG5jVlJyZUc5UmNESkhWR3N3V2pCWGEyNTVWMjF2ZDA5VmNsTk5hRzVVVFdoeE1ubHJjVXBGZFZremRURk1TMk4yY1RCTmFGZ3lTWGhJU1hsaWIzcEZURUZTVjBaQk1FMXBTVkE1TmtWNlFXRk1TbFpwYmxOQk1IQnRWMWRHTWxOamNWVlhTWEpWVTFoQ1ZVNHlXVE4xU0VjeU5HdEhSMU5JUjBkTllrcEtPWGRhZVdOSmJqQkJTbTlSZVhkR1MwRjNiM2c1UVVSaFUyRklTVWw2UVRJNVNFWlJkV3RHTURGQlNuZEpSMjR3VFd0SmQzQnNTbEpKZFVZd1l6RklkMEYxU1VnMWQzRXljVXBZTUhWWFRIZEJkMDB4VjBoRlZERXdUVWg0TlhCTFUxZE1iVTFhYmpOTWJYQkhVMkpKU2psM1JFdEZka3hJUVdWYVMzRjJja3BqVlhKNWNVSndVbWQ0V1cxNVdFWXlkRE5LZWtSdFJrZEViVzlVTVVsTlNubElSak5KZVZvd01HeEVTVWcxYmxKcmFsZ3dTV05aYlZjMldrWm5WVXhIV210d1NuVjZjREExVlc1dGRXeFpNV0pyYnpOV05FZ3lNV2RGZVhGa2JsQTVTVVpoV21WSllVMW5RVE5TWlhCS1VqRkZTR05YYmt0NE1YSmhTRE5GTWtGWVNrdFhWVUZMWTFkd1ZEbFRTbE5qV1VGSlNVRk1NblZYV2twVFIxb3lOVlZhUjFacVNsUlRWWEF5TkROd01FVmFXRzFCWm04d09YZE5lVWhwUjNoU1pVSlNVekJCVTNWbFdqQjFla0pTVm10R2VIVlhSa2xGUzI5dGNUWndTSGwyV0RGNWVWcGhValJOTTNCdFJuZE5lbHA0ZVc1Q1IzbE1UVXBtTWtKUlJERmFTM0ZqUmpKMVIwWkplREZCU0RGUGNUSjRNa0pVVFV4QlNuQTBXbEpYU1hKM1UyMXVSbWRxY1ROVGQyOUpZMkpFTTBScFNWRjVVRVl5Y1ROSVMwbG5UVWRYUjBkSU9UUnZNM0ZWVFVoQlpVUXdOV1JDVW1kblNETmpkWEZLZFUxWk1FbG5ibEZ4TmtSSFQzbEZTa1ZQYmxOVE1rMVNZMDFhYlVsamJrdFdNRTF0VjFkRlVWZG1SbTF4ZWtoVVNXNXZkM1JsVFhkUGFYRkhTVTlOZWxkTlJFcFNiWEV5V2pKdVNVUnNSRXRNYTBSTFFUUnViVTFuY0ZORmJVMVVjR3BNZVhWbFRHMVBObTlJZFZWdVVYVmxSa2Q1YVVkVGRWaEZNbmwyVFhneGJYQmhkVmxCTUZkSFFUQnhaVVJJUlV4eGVWTkdia2RhTW5CSmNEVllNRUUyY0VabmEwbGhRVk52VkRsVlRWSmlhMjVJY1hWR1VWZHNibEZJTkVWSGRYbEVNSGhwYmt0TWJHNXRkRFJKYkRsclduZHdhbGt5U1UxdlIxWXpjSGwwYTBGaFYyTktkMEZOYjFReE1XNTRabXhCTW1ONFRVcEpia3BHWjJSQmVqQXpiMGh4V0c5UlFWaEVZVk5zYjNabWJVMUplV2R5VlUxS1J6SlhZVUZoVFV4dlNVbG5SVEowTUZveWVXRkJTV05FV0RKTU5VeElaMUpOYkRsNFdsRjVZa0pJWXpCdk1rMW5jVlZ4VDNKVlUxQk5NakF6UVhwRlkyNVJkR1ZHVVVneFJFaHhiRWxLTlZkSE0wNXRTVXQ0TWtwVWRVMUliVmRHV0cxMVExcDZaMlZ1VTBWQmJrdFRZVnBIZUd4Sk1VOWpURWhYUzBGVlQwSmFlalExV2twU2EzQjVlR3BZTW5ScFNsQm5Wa0YyWjA5YVlWTTFjSGcxZUVKSmRXWkJSbVl4Y2xKTU1IQktUV2R2U1dOUWNuZDFhRnA0WjNaQlMwUnFRVlZ4V2tneWVEVkVZVUUxV21GSmEyNXRValJJU2tSbFRWRkVaVVZJVXpOd01qRkxjWHB3TlVoSWNUWktWRmRGVFhsWFlsa3djVEZDU25WdGNFaFRhMFY0UVhoSGVIVnNiMGx4Ylc4eVp6VkZNMEUwU2xSMVkwSlRRVFZhTUZkaFdHMU9OVUZ0Y0RGeFNGWmxia1k1YW01dFNYaGFVbFpyYnpCSlRWcDRNV2RGVkhoc2NsUmFhVm93UVdOdlUwUnRSekpuWTNFd1oxVk1TbXN3YmpOT05FVXdWbXR5VURocVJUSk1iVnBLUVVGeFZIbE5ja3RXTTBwU1oxTkJNMDlNUVRCalpFWXhjWFZ2YlVscWJuaHhNMDB3ZFVORU1uRTJRVXBtTUhFemVXaHZlRmRVVEV0WFIweDZPV3RFZUVGbmNsVndhVmh0VFdKQ1ZHZFNRVVpuWTBoU05YVnVVVUZxYjNoVFUxcEtlVE54ZDB4cmNIbzVWMDB3TVdGYU0zbG9iMGRCVmtaNmRXSnhVWFZWUjBobk5VWXdjVXBhZW5RMFdEQkZTVnBRWjJkSk1tZGhRVXRYUlVaSVoyeEVNbkYyYjIxNWRrUkhlWFZJWVZkTlRIWm5SWEpWU1dGTU1tdGlRVXAxWVc0eU5XZHdTamxsU25oNWJHOUhjREZ3TW5sTWNFcHJkVVYzU1ZkR1IzbGhSekJuUlUxNFYycHVTbE5CUkV0QlZrUnRRV1Z4ZDFwdGNUSnFhMjl0U1d4YWJVVm5SbUZQYVVsNlNYcGFTMEZNU0ZSaVpVMVJWalJOZUdveVJFbGFOVVpHT0cxSlZWY3hUSGxFTVVSSVRVRkpNM0YxY0VwU2FVWXpZelZaTVZOVldraHJaa0pTVmpGeFVHZGpUWGcxUTBSS1RWVk5TV05rVFhsUGJFUXdNV3ROUzBsQlRVbE5ibTlHT1VoYVVuRmxSa3AxZFUxSlZqVkNVVTFOUVcxMU5VeGhRVTFFZUdkUlFVcHJkVUZLWjFWS1UyTmFTSGxKVVVGMk9XZE1NbE5yYnpKalpIRXdNR3h1TUVRelJHMU5iSEZLY0dwSmVuVlhjRXRYYTNCUmNYaEliVUZwY1hkWE5rSkxVM2xHVlhreGJ6SnJaM0ZKUlZKR2VFVXdXak40TTAxVU9WRnZTa0ZDVFRKMVlrMTNkWFZ3VW5RMFdrdHhUM0pRT1UxYU1VRkxibEE1V1hKTFJHMXVTbGRZUkRJNVlVSktPV2x3TURRMFNVaEliVUpSZVZCRk1uaHFUSGR4VFc5S2ExcE5kM1ZrUVZGTmFHNXRjV2RIVVVGUVNFcFRaVzVIVFdsRlMzbFpja3AxU1V3eFZ6TkVZVWhsVFRONWVrd3lkV0pKU25sRWIyMUplVVl6VjBkR1ZWWnRTRkZQYVVodFNXeGFZVTAwVFhoQmFVcElRVUZLZUZwc2NVaGlOVUY0U1VOd01WZG1RWHBuWVVGS1RVSk5TR051Y2xRNGFYQmhVMDFLUjBneWNGUmpOa2RJWjFWQlMwRjVjbnA1U1V4dFYyaEZNSGxWUlVwWE5rZFRVMkZ4ZWxkblRYaHJZbTVVTVU5YU1YbGFjRVk0TUc5TGNWQmFNVWd5YmxGMVZIRkdPVmxCTVhsVlNVaEZXVVV6VDFoS1NEbFpTVkZYUjNCdFRXZGFNMHcwYmxKaVpVWjZaalZOU2tWbmJrdEJSbkJ0VTJ4R1NIa3lXakZ3TUVGVWNXSkNVbkZ1Y1ZKMVVVRkhTVlZOTWtsM1dEQkZXRVJLY0dsSVVYVkpSak4xV0V4NmEyTkJVbE5TUWxKMGEwUnRjVmx4TTBWUGNUQlRSazB6UVZodlZXTllSa2xUTlVaSU1WRk5VMk5QVEVoblRVSkdPVWxGUzBGNlNWSnhVSEZLVFVGdllVRmxSREI0TUhBelJHcHVkM0ZqY1VkQmVreEljRE5hUzJOaFRFbFhZbGt6ZFhoTVNsZGFUVk41YWtwSlQySnVVRGxNY2tkVFkwRlNZME52TVhGM1RUQk5NVUpLV20xQlNERXhjbmRUZDBkSGNWQkdVVmR1YjNwVGQxZ3pWMkZHTVVsS1RIZHhkVmh0UldWR1ZHZHNURWxCWkZwSmVXRkhSMDE0Y1VwVE1WcDVVM2hNYkdZeVRUTlBZbTR4VFV0RllVRjFRbFJ3Ylc5U2RHbGFVakV4U1hkTlZVWkhSRFZhYlZOWVFsVlhZbkY2UlZCdVMwUmxSMFk1U0hGNmVYVnVNbkV6Y1hkeE0zQjVSVEJZTWpGNlNYbFhUVWRWVjJwSlZVOVlia2R4ZWxoc09VbEpNMFJyVFhwbmVXOHdjVWxNZDNCdGJubDVkWEJVVTNwR01tWmxjVEZOUzI4eVFXMXVTSGxvUjNoallYRklRVVJhUzNWcFFVdHhhVXd3Y1ZkR1UzaHBRbE5GYUhBelNHdHhiVWxKY1RBME0wUXlOVEZCU2pRMVJWVklNa3d5T1VaTk1EaHRXbnBUYW01aFltdEZNRWhyU1V0RWJXOVVkV2hFTVhWSlNVZHhNbHBJZEdsTVNXTk5TbmxpYTBsS1JXdHhWREV3UVRJeFVVMUpWMkp4YlVSdGIxTlRTRWxJY1RaR00zQTBiMGgwYWtwVVRUQnZWVTlqVFZGQldrRklWMnROZDFOaVdqRkpibHBIVnpadWJYUnRTVEZCV1VsSFRVeEJNRFZrU2xKVFkweEpUREJZYlUxNVdUSTFVbkpSVGpCRWQwRmxiMHQxVkVSNk5VRmFlVWswY2tkRlVGZ3hjWGhHZUdkWVdHMVRSMEV5T1dSd1MwRk5SVlJOVjB4SWRHdEZNRWxuVFhoblFVSkxZMk5NZUZZMVdrZDFhMHd5UVdGWU1EVk1jREZhYTI5S2RERkZSMFZsYmpCcU1VRlJVMk5LUjNobGJrZFhXWEF3ZFV4YWRtZEljVlF4Tlc5S2RHcEdkM2xYYmxGNWRVWXdaMFZITUVWVFJYaHJha2wzUlZOeGVtdGpjbFJNTVhCaFRHeHllbXRxY2tkUFQxcElUV1JCTW1OdFJqRmliWEV3YTJOeE0zbDNXVEphTkhGUlZtVkhWSFZYY25oNE0weElZbXhDU1ZkTFJUSlhXa0V5T0RCWmJHZEdRVEI1VUZwaFlteEtVVmRJUnpKd1pVZDNUMlZaTTB3elFrdEpZa2RTTVd0d01VVTJia3ROVDBsS01HdHdlbGRWUWtsalowRjZkVlpHVVZvelNVbFBabkJMY1d4d2VsTlpjbEpYUlZvd1oyUktVbU5SU1V0UFFVZFNTVnB3UjBGMWNVZEJiVUZoVjFSQmJVVXhibmhYWTNKVlQxZHVSMDVwUmtwSVpYQjZPVlZ1VkRrMFFrZFNNMjVzWjFweE1Gb3hSako0YTBGU1FXTkViRGxsYjFSNE5HOXRUMnhCVURsaGNrdGpkVXBSZERWQlMxTnVUV0Y0TWxwR09VcHdiVUZRUmtkNWEyOVNaekZDVTNneFFYbDRiVVl5Tkd4YWVYUTBiMGd4VmtZelNESkdTR1pzUWtoblUxZ3lNVmhJTW1kWlFsRkpWVmt3TVUxRlNYbGpTRkYxU0VsU1JXWlpNa0Y1YjBZNVozRkdaMUZ3TWtVMWNrZFBSMFF4VjFoR2QwNDFTRzE0TTAxSVFUWllNWGxWU2tkUGJVbEhlRFZCVkhsdFRIcElaWEF4VTIxSU1rRTBiekJhTkVReFkyTkJNM0YxUkdGalkzQXdlVFpJYkdkWVRYaFhiRVp0Y1ZOd2JHWnJRVzFQVVc1SFQwMXVNM2w1V2xKMVkxcFVVbVZFZW5GalduaElNa1F5ZURKQk1VazJSbXhuWkVaUmNVVndlRk4xY1ROWFNVUktRVkZCTWpWWlIwdFRiVnBSVFd0dVIxZDNjRE41ZVhFeGNVRmFNalZLYmtsTWFVaDZUVFpOZWpsWlIxRjVNVmx0VW1WTWRqa3pia2RYWmtGR1oyMUdTMU5CUnpKQmVrbFJTR3RJTTBsaVFYcDVVVVpLWWpCdVMzVXpXVEZJYVVZeVYwaE5NbmxEU1RKbWFVUXpZbXhHWVZkNWJsTkVNVnAzVEROS1ZIQnNibEZGYlUwelYwRnlWSEJwVFZKbk5VWnRVakZ3TVZkQmIwZ3dha1I0ZFcxSFZWWTBSMHBqZW05SGNXVnVVR1pyUWtweGJrUXpUVU5CTVZZMVdXMVRZa1pIVm10TlIwbGhUVlJUVVVaS1NVVnZNM2w1YjNZNGFYQklaMjVCUjNGdFJXMTBha1pTZFZsRU1VbFJXVzFGWjFsc1ptbEViVlp0V1RKVE1rRnRkVE52TTBWcFdHMVdhVVozV2pWTlNuZ3pXak5KYWxrd1RHMWFTM0ZwYmpJd05HOHpjREpaYlUxSVRHdzVZMFJ0UVd4R1lVRnVjSGh4YVc5SFREUnhTVVZSVFVwNVEyNUhjR1Z4TWxJMWNXdzVibHBHT0RWTmJYbG9iMUE1TTI5SVptbEJiVVJyV1cxMWFtOHpSR2xJU25nd1dubEZXbkF5WTJKdWRqbHBXV3c1YVhCc09WQk5lamd5UkROMU1IRlJUelJ2U21OcGIwZDRORzlWWW1sQlZIRkdUSHAxTUVGdGVHMUdiWFJwY0ROSk0wbElZakZLUjNWaldUQk5XWEpJVW1sRVNra3lSMGw1VlZsdFdtVkZSM0ZoYmtwSWEwRjRhM1ZHTW1OMmJtdzRORTB5ZUd0eGVWTnJXVzFPYlVwUldtMUNVbkZFY0ZSQmFVWklTRFJ1Um1adFFsVldhVTFSZFZCWmJHZFJXa2RXWlhFeVUzVnVSM2wxY1VkYWFWZ3dURE5CYlhrMWJucG5ZM0JzT0ROS1NuaHBiMG81ZFZsc09XZEJiRGxtYmtoWFpFRnNPREpDVVhocFdHMUJVWEJ0Y1RSdVIzUTFUVWQxUTBwU2VXaENTVk13UTBjd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/z9XBFGC.png</thumbnail>
<fanart>https://i.imgur.com/sv5yRUU.jpg</fanart>
</item>






<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal Azul [COLOR white]FOOTERS REPETICIONES[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param2][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import requests,re
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [makelist2.param4][/COLOR]</title>
<link>$doregex[makelist3]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
categoria = '[makelist.param1]'
import requests,re,urllib2,xbmc,xbmcgui
from datetime import datetime, timedelta
import time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist3</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param5]'
import requests,re,xbmc,xbmcgui,urllib
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/z9XBFGC.png</thumbnail>
<fanart>https://i.imgur.com/sv5yRUU.jpg</fanart>
</item>


<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal Azul [COLOR white]REAL FEDERACION ANDALUZA DE FUTBOL[/COLOR]</title>
<externallink>https://pastebin.com/raw/yHXBg9X1</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/z9XBFGC.png</thumbnail>
<fanart>https://i.imgur.com/sv5yRUU.jpg</fanart>
</item>
-->
